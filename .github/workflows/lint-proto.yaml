name: Lint (Proto)
on:
  workflow_call:

jobs:
  lint-proto:
    name: Lint (Proto)
    runs-on: ubuntu-22.04-16core

    permissions:
      contents: read

    container:
      image: ghcr.io/gravitational/teleport-buildbox:teleport19

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set linter versions
        run: |
          echo BUF_VERSION=$(cd build.assets; make print-buf-version) >> $GITHUB_ENV

      - name: Print linter versions
        run: |
          echo "BUF_VERSION=$BUF_VERSION"
      - uses: bufbuild/buf-setup-action@a47c93e0b1648d5651a065437926377d060baa99 # v1.50.0
        with:
          github_token: ${{ github.token }}
          version: ${{ env.BUF_VERSION }}
      - uses: bufbuild/buf-lint-action@06f9dd823d873146471cfaaf108a993fe00e5325 # v1.1.1
      - name: buf breaking from parent to self
        uses: bufbuild/buf-breaking-action@c57b3d842a5c3f3b454756ef65305a50a587c5ba # v1.1.4
        with:
          against: 'https://github.com/${GITHUB_REPOSITORY}.git#branch=${{ github.event.pull_request.base.sha || github.event.merge_group.base_sha }}'
      # Release branches must not add new fields to protos with respect to
      # master, new fields should be added to master first.
      - name: buf breaking from self to master
        uses: bufbuild/buf-breaking-action@c57b3d842a5c3f3b454756ef65305a50a587c5ba # v1.1.4
        if: startsWith(github.base_ref, 'branch/v') || startsWith(github.event.merge_group.base_ref, 'refs/heads/branch/v')
        with:
          input: 'https://github.com/${GITHUB_REPOSITORY}.git#branch=master'
          against: '.'

      - name: Check if protos are up to date
        # We have to add the current directory as a safe directory or else git commands will not work as expected.
        run: git config --global --add safe.directory $(realpath .) && make protos-up-to-date/host

      - name: Check if Operator CRDs are up to date
        # We have to add the current directory as a safe directory or else git commands will not work as expected.
        run: git config --global --add safe.directory $(realpath .) && make crds-up-to-date

      - name: Check if Terraform resources are up to date
        # We have to add the current directory as a safe directory or else git commands will not work as expected.
        # The protoc-gen-terraform version must match the version in integrations/terraform/Makefile
        run: git config --global --add safe.directory $(realpath .) && go install github.com/gravitational/protoc-gen-terraform/v3@v3.0.2 && make terraform-resources-up-to-date
