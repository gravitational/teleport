// Code generated by protoc-gen-connect-swift. DO NOT EDIT.
//
// Source: teleport/userpreferences/v1/userpreferences.proto
//

import Connect
import Foundation
import SwiftProtobuf

/// UserPreferencesService is a service that stores user settings.
public protocol Teleport_Userpreferences_V1_UserPreferencesServiceClientInterface: Sendable {

    /// GetUserPreferences returns the user preferences for a given user.
    @discardableResult
    func `getUserPreferences`(request: Teleport_Userpreferences_V1_GetUserPreferencesRequest, headers: Connect.Headers, completion: @escaping @Sendable (ResponseMessage<Teleport_Userpreferences_V1_GetUserPreferencesResponse>) -> Void) -> Connect.Cancelable

    /// GetUserPreferences returns the user preferences for a given user.
    @available(iOS 13, *)
    func `getUserPreferences`(request: Teleport_Userpreferences_V1_GetUserPreferencesRequest, headers: Connect.Headers) async -> ResponseMessage<Teleport_Userpreferences_V1_GetUserPreferencesResponse>

    /// UpsertUserPreferences creates or updates user preferences for a given username.
    @discardableResult
    func `upsertUserPreferences`(request: Teleport_Userpreferences_V1_UpsertUserPreferencesRequest, headers: Connect.Headers, completion: @escaping @Sendable (ResponseMessage<SwiftProtobuf.Google_Protobuf_Empty>) -> Void) -> Connect.Cancelable

    /// UpsertUserPreferences creates or updates user preferences for a given username.
    @available(iOS 13, *)
    func `upsertUserPreferences`(request: Teleport_Userpreferences_V1_UpsertUserPreferencesRequest, headers: Connect.Headers) async -> ResponseMessage<SwiftProtobuf.Google_Protobuf_Empty>
}

/// Concrete implementation of `Teleport_Userpreferences_V1_UserPreferencesServiceClientInterface`.
public final class Teleport_Userpreferences_V1_UserPreferencesServiceClient: Teleport_Userpreferences_V1_UserPreferencesServiceClientInterface, Sendable {
    private let client: Connect.ProtocolClientInterface

    public init(client: Connect.ProtocolClientInterface) {
        self.client = client
    }

    @discardableResult
    public func `getUserPreferences`(request: Teleport_Userpreferences_V1_GetUserPreferencesRequest, headers: Connect.Headers = [:], completion: @escaping @Sendable (ResponseMessage<Teleport_Userpreferences_V1_GetUserPreferencesResponse>) -> Void) -> Connect.Cancelable {
        return self.client.unary(path: "/teleport.userpreferences.v1.UserPreferencesService/GetUserPreferences", idempotencyLevel: .unknown, request: request, headers: headers, completion: completion)
    }

    @available(iOS 13, *)
    public func `getUserPreferences`(request: Teleport_Userpreferences_V1_GetUserPreferencesRequest, headers: Connect.Headers = [:]) async -> ResponseMessage<Teleport_Userpreferences_V1_GetUserPreferencesResponse> {
        return await self.client.unary(path: "/teleport.userpreferences.v1.UserPreferencesService/GetUserPreferences", idempotencyLevel: .unknown, request: request, headers: headers)
    }

    @discardableResult
    public func `upsertUserPreferences`(request: Teleport_Userpreferences_V1_UpsertUserPreferencesRequest, headers: Connect.Headers = [:], completion: @escaping @Sendable (ResponseMessage<SwiftProtobuf.Google_Protobuf_Empty>) -> Void) -> Connect.Cancelable {
        return self.client.unary(path: "/teleport.userpreferences.v1.UserPreferencesService/UpsertUserPreferences", idempotencyLevel: .unknown, request: request, headers: headers, completion: completion)
    }

    @available(iOS 13, *)
    public func `upsertUserPreferences`(request: Teleport_Userpreferences_V1_UpsertUserPreferencesRequest, headers: Connect.Headers = [:]) async -> ResponseMessage<SwiftProtobuf.Google_Protobuf_Empty> {
        return await self.client.unary(path: "/teleport.userpreferences.v1.UserPreferencesService/UpsertUserPreferences", idempotencyLevel: .unknown, request: request, headers: headers)
    }

    public enum Metadata {
        public enum Methods {
            public static let getUserPreferences = Connect.MethodSpec(name: "GetUserPreferences", service: "teleport.userpreferences.v1.UserPreferencesService", type: .unary)
            public static let upsertUserPreferences = Connect.MethodSpec(name: "UpsertUserPreferences", service: "teleport.userpreferences.v1.UserPreferencesService", type: .unary)
        }
    }
}
