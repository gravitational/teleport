//
// Teleport
// Copyright (C) 2025  Gravitational, Inc.
//
// This program is free software: you can redistribute it and/or modify
// it under the terms of the GNU Affero General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU Affero General Public License for more details.
//
// You should have received a copy of the GNU Affero General Public License
// along with this program.  If not, see <http://www.gnu.org/licenses/>.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: teleport/lib/teleterm/v1/target_health.proto

package teletermv1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// TargetHealth describes the health status of network connectivity between
// an agent and a resource.
type TargetHealth struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// status is the health status, one of "", "unknown", "healthy", "unhealthy".
	Status string `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	// error is the health check error observed, when
	// "status" field != "healthy".
	Error         string `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TargetHealth) Reset() {
	*x = TargetHealth{}
	mi := &file_teleport_lib_teleterm_v1_target_health_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TargetHealth) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TargetHealth) ProtoMessage() {}

func (x *TargetHealth) ProtoReflect() protoreflect.Message {
	mi := &file_teleport_lib_teleterm_v1_target_health_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TargetHealth.ProtoReflect.Descriptor instead.
func (*TargetHealth) Descriptor() ([]byte, []int) {
	return file_teleport_lib_teleterm_v1_target_health_proto_rawDescGZIP(), []int{0}
}

func (x *TargetHealth) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *TargetHealth) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

var File_teleport_lib_teleterm_v1_target_health_proto protoreflect.FileDescriptor

const file_teleport_lib_teleterm_v1_target_health_proto_rawDesc = "" +
	"\n" +
	",teleport/lib/teleterm/v1/target_health.proto\x12\x18teleport.lib.teleterm.v1\"<\n" +
	"\fTargetHealth\x12\x16\n" +
	"\x06status\x18\x01 \x01(\tR\x06status\x12\x14\n" +
	"\x05error\x18\x02 \x01(\tR\x05errorBTZRgithub.com/gravitational/teleport/gen/proto/go/teleport/lib/teleterm/v1;teletermv1b\x06proto3"

var (
	file_teleport_lib_teleterm_v1_target_health_proto_rawDescOnce sync.Once
	file_teleport_lib_teleterm_v1_target_health_proto_rawDescData []byte
)

func file_teleport_lib_teleterm_v1_target_health_proto_rawDescGZIP() []byte {
	file_teleport_lib_teleterm_v1_target_health_proto_rawDescOnce.Do(func() {
		file_teleport_lib_teleterm_v1_target_health_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_teleport_lib_teleterm_v1_target_health_proto_rawDesc), len(file_teleport_lib_teleterm_v1_target_health_proto_rawDesc)))
	})
	return file_teleport_lib_teleterm_v1_target_health_proto_rawDescData
}

var file_teleport_lib_teleterm_v1_target_health_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_teleport_lib_teleterm_v1_target_health_proto_goTypes = []any{
	(*TargetHealth)(nil), // 0: teleport.lib.teleterm.v1.TargetHealth
}
var file_teleport_lib_teleterm_v1_target_health_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_teleport_lib_teleterm_v1_target_health_proto_init() }
func file_teleport_lib_teleterm_v1_target_health_proto_init() {
	if File_teleport_lib_teleterm_v1_target_health_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_teleport_lib_teleterm_v1_target_health_proto_rawDesc), len(file_teleport_lib_teleterm_v1_target_health_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_teleport_lib_teleterm_v1_target_health_proto_goTypes,
		DependencyIndexes: file_teleport_lib_teleterm_v1_target_health_proto_depIdxs,
		MessageInfos:      file_teleport_lib_teleterm_v1_target_health_proto_msgTypes,
	}.Build()
	File_teleport_lib_teleterm_v1_target_health_proto = out.File
	file_teleport_lib_teleterm_v1_target_health_proto_goTypes = nil
	file_teleport_lib_teleterm_v1_target_health_proto_depIdxs = nil
}
