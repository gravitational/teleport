//
// Teleport
// Copyright (C) 2023  Gravitational, Inc.
//
// This program is free software: you can redistribute it and/or modify
// it under the terms of the GNU Affero General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU Affero General Public License for more details.
//
// You should have received a copy of the GNU Affero General Public License
// along with this program.  If not, see <http://www.gnu.org/licenses/>.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: prehog/v1/teleport.proto

package prehogv1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// The kind of user a given username refers to. Usernames should always refer to
// a valid cluster user (even if temporary, e.g. SSO), but may be Machine ID
// bot users.
type UserKind int32

const (
	// Indicates a legacy cluster emitting events without a defined user kind.
	// Note that users (from PostHog's perspective) can be identified via future
	// events if the cluster is upgraded to specify this field.
	//
	// PostHog property value: ""
	UserKind_USER_KIND_UNSPECIFIED UserKind = 0
	// Indicates the user associated with this event is human, either created
	// locally or via SSO.
	//
	// PostHog property value: "human"
	UserKind_USER_KIND_HUMAN UserKind = 1
	// Indicates the user associated with this event is a Machine ID bot user.
	//
	// PostHog property value: "bot"
	UserKind_USER_KIND_BOT UserKind = 2
)

// Enum value maps for UserKind.
var (
	UserKind_name = map[int32]string{
		0: "USER_KIND_UNSPECIFIED",
		1: "USER_KIND_HUMAN",
		2: "USER_KIND_BOT",
	}
	UserKind_value = map[string]int32{
		"USER_KIND_UNSPECIFIED": 0,
		"USER_KIND_HUMAN":       1,
		"USER_KIND_BOT":         2,
	}
)

func (x UserKind) Enum() *UserKind {
	p := new(UserKind)
	*p = x
	return p
}

func (x UserKind) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (UserKind) Descriptor() protoreflect.EnumDescriptor {
	return file_prehog_v1_teleport_proto_enumTypes[0].Descriptor()
}

func (UserKind) Type() protoreflect.EnumType {
	return &file_prehog_v1_teleport_proto_enumTypes[0]
}

func (x UserKind) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use UserKind.Descriptor instead.
func (UserKind) EnumDescriptor() ([]byte, []int) {
	return file_prehog_v1_teleport_proto_rawDescGZIP(), []int{0}
}

// UserOrigin is the origin of a user account.
// Keep the values in sync with UserOrigin enum defined in
// API events and prehogv1alpha.
type UserOrigin int32

const (
	// Indicates a legacy cluster emitting events without a defined user origin.
	UserOrigin_USER_ORIGIN_UNSPECIFIED UserOrigin = 0
	// Indicates a local user.
	UserOrigin_USER_ORIGIN_LOCAL UserOrigin = 1
	// Indicates an SSO user originated from the SAML or OIDC connector.
	UserOrigin_USER_ORIGIN_SSO UserOrigin = 2
	// Indicates a user originated from the Okta integration.
	UserOrigin_USER_ORIGIN_OKTA UserOrigin = 3
	// Indicates a user originated from the SCIM integration.
	UserOrigin_USER_ORIGIN_SCIM UserOrigin = 4
	// Indicates a user originated from the EntraID integration.
	UserOrigin_USER_ORIGIN_ENTRAID UserOrigin = 5
)

// Enum value maps for UserOrigin.
var (
	UserOrigin_name = map[int32]string{
		0: "USER_ORIGIN_UNSPECIFIED",
		1: "USER_ORIGIN_LOCAL",
		2: "USER_ORIGIN_SSO",
		3: "USER_ORIGIN_OKTA",
		4: "USER_ORIGIN_SCIM",
		5: "USER_ORIGIN_ENTRAID",
	}
	UserOrigin_value = map[string]int32{
		"USER_ORIGIN_UNSPECIFIED": 0,
		"USER_ORIGIN_LOCAL":       1,
		"USER_ORIGIN_SSO":         2,
		"USER_ORIGIN_OKTA":        3,
		"USER_ORIGIN_SCIM":        4,
		"USER_ORIGIN_ENTRAID":     5,
	}
)

func (x UserOrigin) Enum() *UserOrigin {
	p := new(UserOrigin)
	*p = x
	return p
}

func (x UserOrigin) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (UserOrigin) Descriptor() protoreflect.EnumDescriptor {
	return file_prehog_v1_teleport_proto_enumTypes[1].Descriptor()
}

func (UserOrigin) Type() protoreflect.EnumType {
	return &file_prehog_v1_teleport_proto_enumTypes[1]
}

func (x UserOrigin) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use UserOrigin.Descriptor instead.
func (UserOrigin) EnumDescriptor() ([]byte, []int) {
	return file_prehog_v1_teleport_proto_rawDescGZIP(), []int{1}
}

// the kind of a "resource" (e.g. a node, a database, a desktop, etc.)
// Keep in sync with prehog/v1alpha/teleport.proto
type ResourceKind int32

const (
	ResourceKind_RESOURCE_KIND_UNSPECIFIED ResourceKind = 0
	// PostHog property value: "node"
	ResourceKind_RESOURCE_KIND_NODE ResourceKind = 1
	// PostHog property value: "app_server"
	ResourceKind_RESOURCE_KIND_APP_SERVER ResourceKind = 2
	// PostHog property value: "kube_server"
	ResourceKind_RESOURCE_KIND_KUBE_SERVER ResourceKind = 3
	// PostHog property value: "db_server"
	ResourceKind_RESOURCE_KIND_DB_SERVER ResourceKind = 4
	// PostHog property value: "windows_desktop"
	ResourceKind_RESOURCE_KIND_WINDOWS_DESKTOP ResourceKind = 5
	// ServerV3 ("node") heartbeat with a subkind of "openssh" (as opposed to
	// empty or "teleport"); not used in keepalives
	//
	// PostHog property value: "node.openssh"
	ResourceKind_RESOURCE_KIND_NODE_OPENSSH ResourceKind = 6
	// ServerV3 ("node") heartbeat with a subkind of "openssh-ec2-ice".
	// Nodes that map EC2 instances and are accessed using EC2 Instance Connect Endpoint.
	// Not used in keepalives.
	// This is the SubKind SubKindOpenSSHEICENode in teleport repo.
	//
	// PostHog property value: "node.openssh_ec2_ice"
	ResourceKind_RESOURCE_KIND_NODE_OPENSSH_EICE ResourceKind = 7
)

// Enum value maps for ResourceKind.
var (
	ResourceKind_name = map[int32]string{
		0: "RESOURCE_KIND_UNSPECIFIED",
		1: "RESOURCE_KIND_NODE",
		2: "RESOURCE_KIND_APP_SERVER",
		3: "RESOURCE_KIND_KUBE_SERVER",
		4: "RESOURCE_KIND_DB_SERVER",
		5: "RESOURCE_KIND_WINDOWS_DESKTOP",
		6: "RESOURCE_KIND_NODE_OPENSSH",
		7: "RESOURCE_KIND_NODE_OPENSSH_EICE",
	}
	ResourceKind_value = map[string]int32{
		"RESOURCE_KIND_UNSPECIFIED":       0,
		"RESOURCE_KIND_NODE":              1,
		"RESOURCE_KIND_APP_SERVER":        2,
		"RESOURCE_KIND_KUBE_SERVER":       3,
		"RESOURCE_KIND_DB_SERVER":         4,
		"RESOURCE_KIND_WINDOWS_DESKTOP":   5,
		"RESOURCE_KIND_NODE_OPENSSH":      6,
		"RESOURCE_KIND_NODE_OPENSSH_EICE": 7,
	}
)

func (x ResourceKind) Enum() *ResourceKind {
	p := new(ResourceKind)
	*p = x
	return p
}

func (x ResourceKind) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ResourceKind) Descriptor() protoreflect.EnumDescriptor {
	return file_prehog_v1_teleport_proto_enumTypes[2].Descriptor()
}

func (ResourceKind) Type() protoreflect.EnumType {
	return &file_prehog_v1_teleport_proto_enumTypes[2]
}

func (x ResourceKind) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ResourceKind.Descriptor instead.
func (ResourceKind) EnumDescriptor() ([]byte, []int) {
	return file_prehog_v1_teleport_proto_rawDescGZIP(), []int{2}
}

// counters for user activity coming from a specific auth server from a specific
// cluster, for a time window of up to 15 minutes
//
// PostHog event: tp.user.activity
type UserActivityReport struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// randomly generated UUID for this specific report, 16 bytes (in string order)
	//
	// PostHog property: tp.report_uuid (in 8-4-4-4-12 string form)
	ReportUuid []byte `protobuf:"bytes,1,opt,name=report_uuid,json=reportUuid,proto3" json:"report_uuid,omitempty"`
	// cluster name, anonymized, 32 bytes (HMAC-SHA-256)
	//
	// PostHog property: tp.cluster_name (in base64)
	ClusterName []byte `protobuf:"bytes,2,opt,name=cluster_name,json=clusterName,proto3" json:"cluster_name,omitempty"`
	// hostid of the auth that collected this report, anonymized, 32 bytes (HMAC-SHA-256)
	//
	// PostHog property: tp.reporter_hostid (in base64)
	ReporterHostid []byte `protobuf:"bytes,3,opt,name=reporter_hostid,json=reporterHostid,proto3" json:"reporter_hostid,omitempty"`
	// beginning of the time window for this data; ending is not specified but is
	// intended to be at most 15 minutes
	//
	// PostHog timestamp (not a property, the ingest time is tp.report_time instead)
	StartTime *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	// one set of counters for each user
	//
	// PostHog property: tp.records (encoded as a map keyed by username, not as a list)
	Records       []*UserActivityRecord `protobuf:"bytes,5,rep,name=records,proto3" json:"records,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UserActivityReport) Reset() {
	*x = UserActivityReport{}
	mi := &file_prehog_v1_teleport_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UserActivityReport) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserActivityReport) ProtoMessage() {}

func (x *UserActivityReport) ProtoReflect() protoreflect.Message {
	mi := &file_prehog_v1_teleport_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserActivityReport.ProtoReflect.Descriptor instead.
func (*UserActivityReport) Descriptor() ([]byte, []int) {
	return file_prehog_v1_teleport_proto_rawDescGZIP(), []int{0}
}

func (x *UserActivityReport) GetReportUuid() []byte {
	if x != nil {
		return x.ReportUuid
	}
	return nil
}

func (x *UserActivityReport) GetClusterName() []byte {
	if x != nil {
		return x.ClusterName
	}
	return nil
}

func (x *UserActivityReport) GetReporterHostid() []byte {
	if x != nil {
		return x.ReporterHostid
	}
	return nil
}

func (x *UserActivityReport) GetStartTime() *timestamppb.Timestamp {
	if x != nil {
		return x.StartTime
	}
	return nil
}

func (x *UserActivityReport) GetRecords() []*UserActivityRecord {
	if x != nil {
		return x.Records
	}
	return nil
}

// a set of activity counters for a single user; some old versions report
// "ssh_port_sessions", counting both SSH port forwards and kubectl port-forward
// connections in a single counter
//
// fields other than user_name are encoded as the same field name in PostHog
type UserActivityRecord struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// anonymized, 32 bytes (HMAC-SHA-256)
	//
	// key of the tp.records map in tp.user.activity (in base64)
	UserName []byte `protobuf:"bytes,1,opt,name=user_name,json=userName,proto3" json:"user_name,omitempty"`
	// Indicates the type of user, e.g. bot or human, if known.
	UserKind UserKind `protobuf:"varint,14,opt,name=user_kind,json=userKind,proto3,enum=prehog.v1.UserKind" json:"user_kind,omitempty"`
	// counter of user.login events
	Logins uint64 `protobuf:"varint,2,opt,name=logins,proto3" json:"logins,omitempty"`
	// counter of session.start events (non-Kube)
	SshSessions uint64 `protobuf:"varint,3,opt,name=ssh_sessions,json=sshSessions,proto3" json:"ssh_sessions,omitempty"`
	// counter of app.session.start events (non-TCP)
	AppSessions uint64 `protobuf:"varint,4,opt,name=app_sessions,json=appSessions,proto3" json:"app_sessions,omitempty"`
	// counter of session.start events (only Kube)
	KubeSessions uint64 `protobuf:"varint,5,opt,name=kube_sessions,json=kubeSessions,proto3" json:"kube_sessions,omitempty"`
	// counter of db.session.start events
	DbSessions uint64 `protobuf:"varint,6,opt,name=db_sessions,json=dbSessions,proto3" json:"db_sessions,omitempty"`
	// counter of windows.desktop.session.start events
	DesktopSessions uint64 `protobuf:"varint,7,opt,name=desktop_sessions,json=desktopSessions,proto3" json:"desktop_sessions,omitempty"`
	// counter of app.session.start events (only TCP)
	AppTcpSessions uint64 `protobuf:"varint,8,opt,name=app_tcp_sessions,json=appTcpSessions,proto3" json:"app_tcp_sessions,omitempty"`
	// counter of port events (both SSH and Kube)
	//
	// Deprecated: Marked as deprecated in prehog/v1/teleport.proto.
	SshPortSessions uint64 `protobuf:"varint,9,opt,name=ssh_port_sessions,json=sshPortSessions,proto3" json:"ssh_port_sessions,omitempty"`
	// counter of kube.request events
	KubeRequests uint64 `protobuf:"varint,10,opt,name=kube_requests,json=kubeRequests,proto3" json:"kube_requests,omitempty"`
	// counter of sftp events
	SftpEvents uint64 `protobuf:"varint,11,opt,name=sftp_events,json=sftpEvents,proto3" json:"sftp_events,omitempty"`
	// counter of port events (only SSH)
	SshPortV2Sessions uint64 `protobuf:"varint,12,opt,name=ssh_port_v2_sessions,json=sshPortV2Sessions,proto3" json:"ssh_port_v2_sessions,omitempty"`
	// counter of port events (only Kube)
	KubePortSessions uint64 `protobuf:"varint,13,opt,name=kube_port_sessions,json=kubePortSessions,proto3" json:"kube_port_sessions,omitempty"`
	// counter of SPIFFE SVIDs issued
	SpiffeSvidsIssued uint64 `protobuf:"varint,15,opt,name=spiffe_svids_issued,json=spiffeSvidsIssued,proto3" json:"spiffe_svids_issued,omitempty"`
	// counter of bot joins
	BotJoins uint64 `protobuf:"varint,16,opt,name=bot_joins,json=botJoins,proto3" json:"bot_joins,omitempty"`
	// counter of certificates issued for this user
	CertificatesIssued uint64 `protobuf:"varint,17,opt,name=certificates_issued,json=certificatesIssued,proto3" json:"certificates_issued,omitempty"`
	// counter of SVIDs issued for each SPIFFE ID.
	SpiffeIdsIssued []*SPIFFEIDRecord `protobuf:"bytes,18,rep,name=spiffe_ids_issued,json=spiffeIdsIssued,proto3" json:"spiffe_ids_issued,omitempty"`
	// Indicates origin of user account.
	UserOrigin UserOrigin `protobuf:"varint,19,opt,name=user_origin,json=userOrigin,proto3,enum=prehog.v1.UserOrigin" json:"user_origin,omitempty"`
	// counter of Access Requests created by this user.
	AccessRequestsCreated uint64 `protobuf:"varint,20,opt,name=access_requests_created,json=accessRequestsCreated,proto3" json:"access_requests_created,omitempty"`
	// counter of Access Requests reviewed by this user.
	AccessRequestsReviewed uint64 `protobuf:"varint,21,opt,name=access_requests_reviewed,json=accessRequestsReviewed,proto3" json:"access_requests_reviewed,omitempty"`
	// counter of Access List review.
	AccessListsReviewed uint64 `protobuf:"varint,22,opt,name=access_lists_reviewed,json=accessListsReviewed,proto3" json:"access_lists_reviewed,omitempty"`
	// counter of roles or traits grant event based on Access List membership.
	AccessListsGrants uint64 `protobuf:"varint,23,opt,name=access_lists_grants,json=accessListsGrants,proto3" json:"access_lists_grants,omitempty"`
	// counter of successful SAML IdP authentication by this user.
	SamlIdpSessions uint64 `protobuf:"varint,24,opt,name=saml_idp_sessions,json=samlIdpSessions,proto3" json:"saml_idp_sessions,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *UserActivityRecord) Reset() {
	*x = UserActivityRecord{}
	mi := &file_prehog_v1_teleport_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UserActivityRecord) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserActivityRecord) ProtoMessage() {}

func (x *UserActivityRecord) ProtoReflect() protoreflect.Message {
	mi := &file_prehog_v1_teleport_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserActivityRecord.ProtoReflect.Descriptor instead.
func (*UserActivityRecord) Descriptor() ([]byte, []int) {
	return file_prehog_v1_teleport_proto_rawDescGZIP(), []int{1}
}

func (x *UserActivityRecord) GetUserName() []byte {
	if x != nil {
		return x.UserName
	}
	return nil
}

func (x *UserActivityRecord) GetUserKind() UserKind {
	if x != nil {
		return x.UserKind
	}
	return UserKind_USER_KIND_UNSPECIFIED
}

func (x *UserActivityRecord) GetLogins() uint64 {
	if x != nil {
		return x.Logins
	}
	return 0
}

func (x *UserActivityRecord) GetSshSessions() uint64 {
	if x != nil {
		return x.SshSessions
	}
	return 0
}

func (x *UserActivityRecord) GetAppSessions() uint64 {
	if x != nil {
		return x.AppSessions
	}
	return 0
}

func (x *UserActivityRecord) GetKubeSessions() uint64 {
	if x != nil {
		return x.KubeSessions
	}
	return 0
}

func (x *UserActivityRecord) GetDbSessions() uint64 {
	if x != nil {
		return x.DbSessions
	}
	return 0
}

func (x *UserActivityRecord) GetDesktopSessions() uint64 {
	if x != nil {
		return x.DesktopSessions
	}
	return 0
}

func (x *UserActivityRecord) GetAppTcpSessions() uint64 {
	if x != nil {
		return x.AppTcpSessions
	}
	return 0
}

// Deprecated: Marked as deprecated in prehog/v1/teleport.proto.
func (x *UserActivityRecord) GetSshPortSessions() uint64 {
	if x != nil {
		return x.SshPortSessions
	}
	return 0
}

func (x *UserActivityRecord) GetKubeRequests() uint64 {
	if x != nil {
		return x.KubeRequests
	}
	return 0
}

func (x *UserActivityRecord) GetSftpEvents() uint64 {
	if x != nil {
		return x.SftpEvents
	}
	return 0
}

func (x *UserActivityRecord) GetSshPortV2Sessions() uint64 {
	if x != nil {
		return x.SshPortV2Sessions
	}
	return 0
}

func (x *UserActivityRecord) GetKubePortSessions() uint64 {
	if x != nil {
		return x.KubePortSessions
	}
	return 0
}

func (x *UserActivityRecord) GetSpiffeSvidsIssued() uint64 {
	if x != nil {
		return x.SpiffeSvidsIssued
	}
	return 0
}

func (x *UserActivityRecord) GetBotJoins() uint64 {
	if x != nil {
		return x.BotJoins
	}
	return 0
}

func (x *UserActivityRecord) GetCertificatesIssued() uint64 {
	if x != nil {
		return x.CertificatesIssued
	}
	return 0
}

func (x *UserActivityRecord) GetSpiffeIdsIssued() []*SPIFFEIDRecord {
	if x != nil {
		return x.SpiffeIdsIssued
	}
	return nil
}

func (x *UserActivityRecord) GetUserOrigin() UserOrigin {
	if x != nil {
		return x.UserOrigin
	}
	return UserOrigin_USER_ORIGIN_UNSPECIFIED
}

func (x *UserActivityRecord) GetAccessRequestsCreated() uint64 {
	if x != nil {
		return x.AccessRequestsCreated
	}
	return 0
}

func (x *UserActivityRecord) GetAccessRequestsReviewed() uint64 {
	if x != nil {
		return x.AccessRequestsReviewed
	}
	return 0
}

func (x *UserActivityRecord) GetAccessListsReviewed() uint64 {
	if x != nil {
		return x.AccessListsReviewed
	}
	return 0
}

func (x *UserActivityRecord) GetAccessListsGrants() uint64 {
	if x != nil {
		return x.AccessListsGrants
	}
	return 0
}

func (x *UserActivityRecord) GetSamlIdpSessions() uint64 {
	if x != nil {
		return x.SamlIdpSessions
	}
	return 0
}

type ResourcePresenceReport struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// randomly generated UUID for this specific report, 16 bytes (in string order)
	ReportUuid []byte `protobuf:"bytes,1,opt,name=report_uuid,json=reportUuid,proto3" json:"report_uuid,omitempty"`
	// anonymized, 32 bytes (HMAC-SHA-256)
	ClusterName []byte `protobuf:"bytes,2,opt,name=cluster_name,json=clusterName,proto3" json:"cluster_name,omitempty"`
	// anonymized, 32 bytes (HMAC-SHA-256)
	ReporterHostid []byte `protobuf:"bytes,3,opt,name=reporter_hostid,json=reporterHostid,proto3" json:"reporter_hostid,omitempty"`
	// beginning of the time window for this data; ending is not specified but is
	// intended to be at most one hour
	StartTime           *timestamppb.Timestamp        `protobuf:"bytes,4,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	ResourceKindReports []*ResourceKindPresenceReport `protobuf:"bytes,5,rep,name=resource_kind_reports,json=resourceKindReports,proto3" json:"resource_kind_reports,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *ResourcePresenceReport) Reset() {
	*x = ResourcePresenceReport{}
	mi := &file_prehog_v1_teleport_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ResourcePresenceReport) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResourcePresenceReport) ProtoMessage() {}

func (x *ResourcePresenceReport) ProtoReflect() protoreflect.Message {
	mi := &file_prehog_v1_teleport_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResourcePresenceReport.ProtoReflect.Descriptor instead.
func (*ResourcePresenceReport) Descriptor() ([]byte, []int) {
	return file_prehog_v1_teleport_proto_rawDescGZIP(), []int{2}
}

func (x *ResourcePresenceReport) GetReportUuid() []byte {
	if x != nil {
		return x.ReportUuid
	}
	return nil
}

func (x *ResourcePresenceReport) GetClusterName() []byte {
	if x != nil {
		return x.ClusterName
	}
	return nil
}

func (x *ResourcePresenceReport) GetReporterHostid() []byte {
	if x != nil {
		return x.ReporterHostid
	}
	return nil
}

func (x *ResourcePresenceReport) GetStartTime() *timestamppb.Timestamp {
	if x != nil {
		return x.StartTime
	}
	return nil
}

func (x *ResourcePresenceReport) GetResourceKindReports() []*ResourceKindPresenceReport {
	if x != nil {
		return x.ResourceKindReports
	}
	return nil
}

// Counts all resources of one kind that were active during the time window
// to track the number of active resources in a cluster over time.
type ResourceKindPresenceReport struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// the kind of resource
	ResourceKind ResourceKind `protobuf:"varint,1,opt,name=resource_kind,json=resourceKind,proto3,enum=prehog.v1.ResourceKind" json:"resource_kind,omitempty"`
	// first 8 bytes of anonymized resource name
	ResourceIds   []uint64 `protobuf:"fixed64,2,rep,packed,name=resource_ids,json=resourceIds,proto3" json:"resource_ids,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ResourceKindPresenceReport) Reset() {
	*x = ResourceKindPresenceReport{}
	mi := &file_prehog_v1_teleport_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ResourceKindPresenceReport) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResourceKindPresenceReport) ProtoMessage() {}

func (x *ResourceKindPresenceReport) ProtoReflect() protoreflect.Message {
	mi := &file_prehog_v1_teleport_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResourceKindPresenceReport.ProtoReflect.Descriptor instead.
func (*ResourceKindPresenceReport) Descriptor() ([]byte, []int) {
	return file_prehog_v1_teleport_proto_rawDescGZIP(), []int{3}
}

func (x *ResourceKindPresenceReport) GetResourceKind() ResourceKind {
	if x != nil {
		return x.ResourceKind
	}
	return ResourceKind_RESOURCE_KIND_UNSPECIFIED
}

func (x *ResourceKindPresenceReport) GetResourceIds() []uint64 {
	if x != nil {
		return x.ResourceIds
	}
	return nil
}

// counters for bot instance activity coming from a specific auth server from a
// specific cluster.
//
// PostHog event: tp.bot_instance.activity
type BotInstanceActivityReport struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// randomly generated UUID for this specific report, 16 bytes (in string order)
	//
	// PostHog property: tp.report_uuid (in 8-4-4-4-12 string form)
	ReportUuid []byte `protobuf:"bytes,1,opt,name=report_uuid,json=reportUuid,proto3" json:"report_uuid,omitempty"`
	// cluster name, anonymized, 32 bytes (HMAC-SHA-256)
	//
	// PostHog property: tp.cluster_name (in base64)
	ClusterName []byte `protobuf:"bytes,2,opt,name=cluster_name,json=clusterName,proto3" json:"cluster_name,omitempty"`
	// hostid of the auth that collected this report, anonymized, 32 bytes (HMAC-SHA-256)
	//
	// PostHog property: tp.reporter_hostid (in base64)
	ReporterHostid []byte `protobuf:"bytes,3,opt,name=reporter_hostid,json=reporterHostid,proto3" json:"reporter_hostid,omitempty"`
	// beginning of the time window for this data; ending is not specified but is
	// intended to be at most 15 minutes
	//
	// PostHog timestamp (not a property, the ingest time is tp.report_time instead)
	StartTime *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	// one set of counters for each bot instance
	//
	// PostHog property: tp.records (encoded as a map keyed by anonymized bot
	// instance id, not as a list)
	Records       []*BotInstanceActivityRecord `protobuf:"bytes,5,rep,name=records,proto3" json:"records,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BotInstanceActivityReport) Reset() {
	*x = BotInstanceActivityReport{}
	mi := &file_prehog_v1_teleport_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BotInstanceActivityReport) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BotInstanceActivityReport) ProtoMessage() {}

func (x *BotInstanceActivityReport) ProtoReflect() protoreflect.Message {
	mi := &file_prehog_v1_teleport_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BotInstanceActivityReport.ProtoReflect.Descriptor instead.
func (*BotInstanceActivityReport) Descriptor() ([]byte, []int) {
	return file_prehog_v1_teleport_proto_rawDescGZIP(), []int{4}
}

func (x *BotInstanceActivityReport) GetReportUuid() []byte {
	if x != nil {
		return x.ReportUuid
	}
	return nil
}

func (x *BotInstanceActivityReport) GetClusterName() []byte {
	if x != nil {
		return x.ClusterName
	}
	return nil
}

func (x *BotInstanceActivityReport) GetReporterHostid() []byte {
	if x != nil {
		return x.ReporterHostid
	}
	return nil
}

func (x *BotInstanceActivityReport) GetStartTime() *timestamppb.Timestamp {
	if x != nil {
		return x.StartTime
	}
	return nil
}

func (x *BotInstanceActivityReport) GetRecords() []*BotInstanceActivityRecord {
	if x != nil {
		return x.Records
	}
	return nil
}

// Records the activity for a single bot instance against a specific auth server
// from a specific cluster.
type BotInstanceActivityRecord struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The UUID of the BotInstance, anonymized using HMAC-SHA-256.
	BotInstanceId []byte `protobuf:"bytes,1,opt,name=bot_instance_id,json=botInstanceId,proto3" json:"bot_instance_id,omitempty"`
	// The name of the user associated with the BotInstance,
	// anonymized using HMAC-SHA-256.
	// Enables correlation with the UserActivityRecord for the Bot.
	BotUserName []byte `protobuf:"bytes,2,opt,name=bot_user_name,json=botUserName,proto3" json:"bot_user_name,omitempty"`
	// counter of bot joins
	BotJoins uint64 `protobuf:"varint,3,opt,name=bot_joins,json=botJoins,proto3" json:"bot_joins,omitempty"`
	// counter of SPIFFE SVIDs issued
	SpiffeSvidsIssued uint64 `protobuf:"varint,4,opt,name=spiffe_svids_issued,json=spiffeSvidsIssued,proto3" json:"spiffe_svids_issued,omitempty"`
	// counter of certificates issued for this user
	CertificatesIssued uint64 `protobuf:"varint,5,opt,name=certificates_issued,json=certificatesIssued,proto3" json:"certificates_issued,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *BotInstanceActivityRecord) Reset() {
	*x = BotInstanceActivityRecord{}
	mi := &file_prehog_v1_teleport_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BotInstanceActivityRecord) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BotInstanceActivityRecord) ProtoMessage() {}

func (x *BotInstanceActivityRecord) ProtoReflect() protoreflect.Message {
	mi := &file_prehog_v1_teleport_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BotInstanceActivityRecord.ProtoReflect.Descriptor instead.
func (*BotInstanceActivityRecord) Descriptor() ([]byte, []int) {
	return file_prehog_v1_teleport_proto_rawDescGZIP(), []int{5}
}

func (x *BotInstanceActivityRecord) GetBotInstanceId() []byte {
	if x != nil {
		return x.BotInstanceId
	}
	return nil
}

func (x *BotInstanceActivityRecord) GetBotUserName() []byte {
	if x != nil {
		return x.BotUserName
	}
	return nil
}

func (x *BotInstanceActivityRecord) GetBotJoins() uint64 {
	if x != nil {
		return x.BotJoins
	}
	return 0
}

func (x *BotInstanceActivityRecord) GetSpiffeSvidsIssued() uint64 {
	if x != nil {
		return x.SpiffeSvidsIssued
	}
	return 0
}

func (x *BotInstanceActivityRecord) GetCertificatesIssued() uint64 {
	if x != nil {
		return x.CertificatesIssued
	}
	return 0
}

// Used to record the issuance of a specific SPIFFE ID.
type SPIFFEIDRecord struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The anonymized SPIFFE ID - HMAC-SHA-256 (32 bytes)
	SpiffeId []byte `protobuf:"bytes,1,opt,name=spiffe_id,json=spiffeId,proto3" json:"spiffe_id,omitempty"`
	// Number of SVIDs issued for the given spiffe_id.
	SvidsIssued   uint32 `protobuf:"varint,2,opt,name=svids_issued,json=svidsIssued,proto3" json:"svids_issued,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SPIFFEIDRecord) Reset() {
	*x = SPIFFEIDRecord{}
	mi := &file_prehog_v1_teleport_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SPIFFEIDRecord) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SPIFFEIDRecord) ProtoMessage() {}

func (x *SPIFFEIDRecord) ProtoReflect() protoreflect.Message {
	mi := &file_prehog_v1_teleport_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SPIFFEIDRecord.ProtoReflect.Descriptor instead.
func (*SPIFFEIDRecord) Descriptor() ([]byte, []int) {
	return file_prehog_v1_teleport_proto_rawDescGZIP(), []int{6}
}

func (x *SPIFFEIDRecord) GetSpiffeId() []byte {
	if x != nil {
		return x.SpiffeId
	}
	return nil
}

func (x *SPIFFEIDRecord) GetSvidsIssued() uint32 {
	if x != nil {
		return x.SvidsIssued
	}
	return 0
}

type SubmitUsageReportsRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// at most 10 reports of all kinds in a single RPC, each shouldn't exceed 128KiB or so
	//
	// each report is encoded as a separate tp.user.activity PostHog event
	UserActivity []*UserActivityReport `protobuf:"bytes,1,rep,name=user_activity,json=userActivity,proto3" json:"user_activity,omitempty"`
	// encoded as a separate tp.resource.counts PostHog event
	ResourcePresence []*ResourcePresenceReport `protobuf:"bytes,2,rep,name=resource_presence,json=resourcePresence,proto3" json:"resource_presence,omitempty"`
	// encoded as a seperate tp.bot_instance.activity PostHog event
	BotInstanceActivity []*BotInstanceActivityReport `protobuf:"bytes,3,rep,name=bot_instance_activity,json=botInstanceActivity,proto3" json:"bot_instance_activity,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *SubmitUsageReportsRequest) Reset() {
	*x = SubmitUsageReportsRequest{}
	mi := &file_prehog_v1_teleport_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SubmitUsageReportsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubmitUsageReportsRequest) ProtoMessage() {}

func (x *SubmitUsageReportsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_prehog_v1_teleport_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubmitUsageReportsRequest.ProtoReflect.Descriptor instead.
func (*SubmitUsageReportsRequest) Descriptor() ([]byte, []int) {
	return file_prehog_v1_teleport_proto_rawDescGZIP(), []int{7}
}

func (x *SubmitUsageReportsRequest) GetUserActivity() []*UserActivityReport {
	if x != nil {
		return x.UserActivity
	}
	return nil
}

func (x *SubmitUsageReportsRequest) GetResourcePresence() []*ResourcePresenceReport {
	if x != nil {
		return x.ResourcePresence
	}
	return nil
}

func (x *SubmitUsageReportsRequest) GetBotInstanceActivity() []*BotInstanceActivityReport {
	if x != nil {
		return x.BotInstanceActivity
	}
	return nil
}

type SubmitUsageReportsResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// randomly generated UUID for this specific batch, 16 bytes (in string order)
	//
	// PostHog property: tp.batch_uuid (in each report of the batch)
	BatchUuid     []byte `protobuf:"bytes,1,opt,name=batch_uuid,json=batchUuid,proto3" json:"batch_uuid,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SubmitUsageReportsResponse) Reset() {
	*x = SubmitUsageReportsResponse{}
	mi := &file_prehog_v1_teleport_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SubmitUsageReportsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubmitUsageReportsResponse) ProtoMessage() {}

func (x *SubmitUsageReportsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_prehog_v1_teleport_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubmitUsageReportsResponse.ProtoReflect.Descriptor instead.
func (*SubmitUsageReportsResponse) Descriptor() ([]byte, []int) {
	return file_prehog_v1_teleport_proto_rawDescGZIP(), []int{8}
}

func (x *SubmitUsageReportsResponse) GetBatchUuid() []byte {
	if x != nil {
		return x.BatchUuid
	}
	return nil
}

var File_prehog_v1_teleport_proto protoreflect.FileDescriptor

const file_prehog_v1_teleport_proto_rawDesc = "" +
	"\n" +
	"\x18prehog/v1/teleport.proto\x12\tprehog.v1\x1a\x1fgoogle/protobuf/timestamp.proto\"\xf5\x01\n" +
	"\x12UserActivityReport\x12\x1f\n" +
	"\vreport_uuid\x18\x01 \x01(\fR\n" +
	"reportUuid\x12!\n" +
	"\fcluster_name\x18\x02 \x01(\fR\vclusterName\x12'\n" +
	"\x0freporter_hostid\x18\x03 \x01(\fR\x0ereporterHostid\x129\n" +
	"\n" +
	"start_time\x18\x04 \x01(\v2\x1a.google.protobuf.TimestampR\tstartTime\x127\n" +
	"\arecords\x18\x05 \x03(\v2\x1d.prehog.v1.UserActivityRecordR\arecords\"\xb0\b\n" +
	"\x12UserActivityRecord\x12\x1b\n" +
	"\tuser_name\x18\x01 \x01(\fR\buserName\x120\n" +
	"\tuser_kind\x18\x0e \x01(\x0e2\x13.prehog.v1.UserKindR\buserKind\x12\x16\n" +
	"\x06logins\x18\x02 \x01(\x04R\x06logins\x12!\n" +
	"\fssh_sessions\x18\x03 \x01(\x04R\vsshSessions\x12!\n" +
	"\fapp_sessions\x18\x04 \x01(\x04R\vappSessions\x12#\n" +
	"\rkube_sessions\x18\x05 \x01(\x04R\fkubeSessions\x12\x1f\n" +
	"\vdb_sessions\x18\x06 \x01(\x04R\n" +
	"dbSessions\x12)\n" +
	"\x10desktop_sessions\x18\a \x01(\x04R\x0fdesktopSessions\x12(\n" +
	"\x10app_tcp_sessions\x18\b \x01(\x04R\x0eappTcpSessions\x12.\n" +
	"\x11ssh_port_sessions\x18\t \x01(\x04B\x02\x18\x01R\x0fsshPortSessions\x12#\n" +
	"\rkube_requests\x18\n" +
	" \x01(\x04R\fkubeRequests\x12\x1f\n" +
	"\vsftp_events\x18\v \x01(\x04R\n" +
	"sftpEvents\x12/\n" +
	"\x14ssh_port_v2_sessions\x18\f \x01(\x04R\x11sshPortV2Sessions\x12,\n" +
	"\x12kube_port_sessions\x18\r \x01(\x04R\x10kubePortSessions\x12.\n" +
	"\x13spiffe_svids_issued\x18\x0f \x01(\x04R\x11spiffeSvidsIssued\x12\x1b\n" +
	"\tbot_joins\x18\x10 \x01(\x04R\bbotJoins\x12/\n" +
	"\x13certificates_issued\x18\x11 \x01(\x04R\x12certificatesIssued\x12E\n" +
	"\x11spiffe_ids_issued\x18\x12 \x03(\v2\x19.prehog.v1.SPIFFEIDRecordR\x0fspiffeIdsIssued\x126\n" +
	"\vuser_origin\x18\x13 \x01(\x0e2\x15.prehog.v1.UserOriginR\n" +
	"userOrigin\x126\n" +
	"\x17access_requests_created\x18\x14 \x01(\x04R\x15accessRequestsCreated\x128\n" +
	"\x18access_requests_reviewed\x18\x15 \x01(\x04R\x16accessRequestsReviewed\x122\n" +
	"\x15access_lists_reviewed\x18\x16 \x01(\x04R\x13accessListsReviewed\x12.\n" +
	"\x13access_lists_grants\x18\x17 \x01(\x04R\x11accessListsGrants\x12*\n" +
	"\x11saml_idp_sessions\x18\x18 \x01(\x04R\x0fsamlIdpSessions\"\x9b\x02\n" +
	"\x16ResourcePresenceReport\x12\x1f\n" +
	"\vreport_uuid\x18\x01 \x01(\fR\n" +
	"reportUuid\x12!\n" +
	"\fcluster_name\x18\x02 \x01(\fR\vclusterName\x12'\n" +
	"\x0freporter_hostid\x18\x03 \x01(\fR\x0ereporterHostid\x129\n" +
	"\n" +
	"start_time\x18\x04 \x01(\v2\x1a.google.protobuf.TimestampR\tstartTime\x12Y\n" +
	"\x15resource_kind_reports\x18\x05 \x03(\v2%.prehog.v1.ResourceKindPresenceReportR\x13resourceKindReports\"}\n" +
	"\x1aResourceKindPresenceReport\x12<\n" +
	"\rresource_kind\x18\x01 \x01(\x0e2\x17.prehog.v1.ResourceKindR\fresourceKind\x12!\n" +
	"\fresource_ids\x18\x02 \x03(\x06R\vresourceIds\"\x83\x02\n" +
	"\x19BotInstanceActivityReport\x12\x1f\n" +
	"\vreport_uuid\x18\x01 \x01(\fR\n" +
	"reportUuid\x12!\n" +
	"\fcluster_name\x18\x02 \x01(\fR\vclusterName\x12'\n" +
	"\x0freporter_hostid\x18\x03 \x01(\fR\x0ereporterHostid\x129\n" +
	"\n" +
	"start_time\x18\x04 \x01(\v2\x1a.google.protobuf.TimestampR\tstartTime\x12>\n" +
	"\arecords\x18\x05 \x03(\v2$.prehog.v1.BotInstanceActivityRecordR\arecords\"\xe5\x01\n" +
	"\x19BotInstanceActivityRecord\x12&\n" +
	"\x0fbot_instance_id\x18\x01 \x01(\fR\rbotInstanceId\x12\"\n" +
	"\rbot_user_name\x18\x02 \x01(\fR\vbotUserName\x12\x1b\n" +
	"\tbot_joins\x18\x03 \x01(\x04R\bbotJoins\x12.\n" +
	"\x13spiffe_svids_issued\x18\x04 \x01(\x04R\x11spiffeSvidsIssued\x12/\n" +
	"\x13certificates_issued\x18\x05 \x01(\x04R\x12certificatesIssued\"P\n" +
	"\x0eSPIFFEIDRecord\x12\x1b\n" +
	"\tspiffe_id\x18\x01 \x01(\fR\bspiffeId\x12!\n" +
	"\fsvids_issued\x18\x02 \x01(\rR\vsvidsIssued\"\x89\x02\n" +
	"\x19SubmitUsageReportsRequest\x12B\n" +
	"\ruser_activity\x18\x01 \x03(\v2\x1d.prehog.v1.UserActivityReportR\fuserActivity\x12N\n" +
	"\x11resource_presence\x18\x02 \x03(\v2!.prehog.v1.ResourcePresenceReportR\x10resourcePresence\x12X\n" +
	"\x15bot_instance_activity\x18\x03 \x03(\v2$.prehog.v1.BotInstanceActivityReportR\x13botInstanceActivity\";\n" +
	"\x1aSubmitUsageReportsResponse\x12\x1d\n" +
	"\n" +
	"batch_uuid\x18\x01 \x01(\fR\tbatchUuid*M\n" +
	"\bUserKind\x12\x19\n" +
	"\x15USER_KIND_UNSPECIFIED\x10\x00\x12\x13\n" +
	"\x0fUSER_KIND_HUMAN\x10\x01\x12\x11\n" +
	"\rUSER_KIND_BOT\x10\x02*\x9a\x01\n" +
	"\n" +
	"UserOrigin\x12\x1b\n" +
	"\x17USER_ORIGIN_UNSPECIFIED\x10\x00\x12\x15\n" +
	"\x11USER_ORIGIN_LOCAL\x10\x01\x12\x13\n" +
	"\x0fUSER_ORIGIN_SSO\x10\x02\x12\x14\n" +
	"\x10USER_ORIGIN_OKTA\x10\x03\x12\x14\n" +
	"\x10USER_ORIGIN_SCIM\x10\x04\x12\x17\n" +
	"\x13USER_ORIGIN_ENTRAID\x10\x05*\x87\x02\n" +
	"\fResourceKind\x12\x1d\n" +
	"\x19RESOURCE_KIND_UNSPECIFIED\x10\x00\x12\x16\n" +
	"\x12RESOURCE_KIND_NODE\x10\x01\x12\x1c\n" +
	"\x18RESOURCE_KIND_APP_SERVER\x10\x02\x12\x1d\n" +
	"\x19RESOURCE_KIND_KUBE_SERVER\x10\x03\x12\x1b\n" +
	"\x17RESOURCE_KIND_DB_SERVER\x10\x04\x12!\n" +
	"\x1dRESOURCE_KIND_WINDOWS_DESKTOP\x10\x05\x12\x1e\n" +
	"\x1aRESOURCE_KIND_NODE_OPENSSH\x10\x06\x12#\n" +
	"\x1fRESOURCE_KIND_NODE_OPENSSH_EICE\x10\a2\x7f\n" +
	"\x18TeleportReportingService\x12c\n" +
	"\x12SubmitUsageReports\x12$.prehog.v1.SubmitUsageReportsRequest\x1a%.prehog.v1.SubmitUsageReportsResponse\"\x00B\xa6\x01\n" +
	"\rcom.prehog.v1B\rTeleportProtoP\x01ZAgithub.com/gravitational/teleport/gen/proto/go/prehog/v1;prehogv1\xa2\x02\x03PXX\xaa\x02\tPrehog.V1\xca\x02\tPrehog\\V1\xe2\x02\x15Prehog\\V1\\GPBMetadata\xea\x02\n" +
	"Prehog::V1b\x06proto3"

var (
	file_prehog_v1_teleport_proto_rawDescOnce sync.Once
	file_prehog_v1_teleport_proto_rawDescData []byte
)

func file_prehog_v1_teleport_proto_rawDescGZIP() []byte {
	file_prehog_v1_teleport_proto_rawDescOnce.Do(func() {
		file_prehog_v1_teleport_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_prehog_v1_teleport_proto_rawDesc), len(file_prehog_v1_teleport_proto_rawDesc)))
	})
	return file_prehog_v1_teleport_proto_rawDescData
}

var file_prehog_v1_teleport_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_prehog_v1_teleport_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_prehog_v1_teleport_proto_goTypes = []any{
	(UserKind)(0),                      // 0: prehog.v1.UserKind
	(UserOrigin)(0),                    // 1: prehog.v1.UserOrigin
	(ResourceKind)(0),                  // 2: prehog.v1.ResourceKind
	(*UserActivityReport)(nil),         // 3: prehog.v1.UserActivityReport
	(*UserActivityRecord)(nil),         // 4: prehog.v1.UserActivityRecord
	(*ResourcePresenceReport)(nil),     // 5: prehog.v1.ResourcePresenceReport
	(*ResourceKindPresenceReport)(nil), // 6: prehog.v1.ResourceKindPresenceReport
	(*BotInstanceActivityReport)(nil),  // 7: prehog.v1.BotInstanceActivityReport
	(*BotInstanceActivityRecord)(nil),  // 8: prehog.v1.BotInstanceActivityRecord
	(*SPIFFEIDRecord)(nil),             // 9: prehog.v1.SPIFFEIDRecord
	(*SubmitUsageReportsRequest)(nil),  // 10: prehog.v1.SubmitUsageReportsRequest
	(*SubmitUsageReportsResponse)(nil), // 11: prehog.v1.SubmitUsageReportsResponse
	(*timestamppb.Timestamp)(nil),      // 12: google.protobuf.Timestamp
}
var file_prehog_v1_teleport_proto_depIdxs = []int32{
	12, // 0: prehog.v1.UserActivityReport.start_time:type_name -> google.protobuf.Timestamp
	4,  // 1: prehog.v1.UserActivityReport.records:type_name -> prehog.v1.UserActivityRecord
	0,  // 2: prehog.v1.UserActivityRecord.user_kind:type_name -> prehog.v1.UserKind
	9,  // 3: prehog.v1.UserActivityRecord.spiffe_ids_issued:type_name -> prehog.v1.SPIFFEIDRecord
	1,  // 4: prehog.v1.UserActivityRecord.user_origin:type_name -> prehog.v1.UserOrigin
	12, // 5: prehog.v1.ResourcePresenceReport.start_time:type_name -> google.protobuf.Timestamp
	6,  // 6: prehog.v1.ResourcePresenceReport.resource_kind_reports:type_name -> prehog.v1.ResourceKindPresenceReport
	2,  // 7: prehog.v1.ResourceKindPresenceReport.resource_kind:type_name -> prehog.v1.ResourceKind
	12, // 8: prehog.v1.BotInstanceActivityReport.start_time:type_name -> google.protobuf.Timestamp
	8,  // 9: prehog.v1.BotInstanceActivityReport.records:type_name -> prehog.v1.BotInstanceActivityRecord
	3,  // 10: prehog.v1.SubmitUsageReportsRequest.user_activity:type_name -> prehog.v1.UserActivityReport
	5,  // 11: prehog.v1.SubmitUsageReportsRequest.resource_presence:type_name -> prehog.v1.ResourcePresenceReport
	7,  // 12: prehog.v1.SubmitUsageReportsRequest.bot_instance_activity:type_name -> prehog.v1.BotInstanceActivityReport
	10, // 13: prehog.v1.TeleportReportingService.SubmitUsageReports:input_type -> prehog.v1.SubmitUsageReportsRequest
	11, // 14: prehog.v1.TeleportReportingService.SubmitUsageReports:output_type -> prehog.v1.SubmitUsageReportsResponse
	14, // [14:15] is the sub-list for method output_type
	13, // [13:14] is the sub-list for method input_type
	13, // [13:13] is the sub-list for extension type_name
	13, // [13:13] is the sub-list for extension extendee
	0,  // [0:13] is the sub-list for field type_name
}

func init() { file_prehog_v1_teleport_proto_init() }
func file_prehog_v1_teleport_proto_init() {
	if File_prehog_v1_teleport_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_prehog_v1_teleport_proto_rawDesc), len(file_prehog_v1_teleport_proto_rawDesc)),
			NumEnums:      3,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_prehog_v1_teleport_proto_goTypes,
		DependencyIndexes: file_prehog_v1_teleport_proto_depIdxs,
		EnumInfos:         file_prehog_v1_teleport_proto_enumTypes,
		MessageInfos:      file_prehog_v1_teleport_proto_msgTypes,
	}.Build()
	File_prehog_v1_teleport_proto = out.File
	file_prehog_v1_teleport_proto_goTypes = nil
	file_prehog_v1_teleport_proto_depIdxs = nil
}
