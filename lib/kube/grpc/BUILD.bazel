load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")

go_library(
    name = "grpc",
    srcs = [
        "grpc.go",
        "utils.go",
    ],
    importpath = "github.com/gravitational/teleport/lib/kube/grpc",
    visibility = ["//visibility:public"],
    deps = [
        "//:teleport",
        "//api/defaults",
        "//api/gen/proto/go/teleport/kube/v1:kube",
        "//api/trail",
        "//api/types",
        "//api/types/events",
        "//lib/authz",
        "//lib/client",
        "//lib/events",
        "//lib/kube/internal",
        "//lib/services",
        "//lib/services/local",
        "//lib/utils",
        "@com_github_gravitational_trace//:trace",
        "@io_k8s_apimachinery//pkg/apis/meta/v1:meta",
        "@io_k8s_apimachinery//pkg/runtime/schema",
        "@io_k8s_apimachinery//pkg/util/net",
        "@io_k8s_client_go//dynamic",
        "@io_k8s_client_go//kubernetes",
        "@io_k8s_client_go//rest",
    ],
)

go_test(
    name = "grpc_test",
    srcs = [
        "grpc_test.go",
        "utils_test.go",
        "websocket_client_test.go",
    ],
    embed = [":grpc"],
    deps = [
        "//:teleport",
        "//api/client/proto",
        "//api/defaults",
        "//api/gen/proto/go/teleport/kube/v1:kube",
        "//api/types",
        "//api/types/events",
        "//api/utils/keys",
        "//entitlements",
        "//lib/auth",
        "//lib/auth/authclient",
        "//lib/auth/keygen",
        "//lib/authz",
        "//lib/cryptosuites",
        "//lib/events",
        "//lib/events/eventstest",
        "//lib/inventory",
        "//lib/kube/proxy",
        "//lib/kube/proxy/streamproto",
        "//lib/kube/proxy/testing/kube_server",
        "//lib/limiter",
        "//lib/modules",
        "//lib/multiplexer",
        "//lib/reversetunnel",
        "//lib/reversetunnelclient",
        "//lib/services",
        "//lib/session",
        "//lib/tlsca",
        "//lib/utils/log/logtest",
        "@com_github_google_go_cmp//cmp",
        "@com_github_google_uuid//:uuid",
        "@com_github_gorilla_websocket//:websocket",
        "@com_github_gravitational_trace//:trace",
        "@com_github_jonboulle_clockwork//:clockwork",
        "@com_github_stretchr_testify//assert",
        "@com_github_stretchr_testify//require",
        "@io_k8s_apimachinery//pkg/api/errors",
        "@io_k8s_apimachinery//pkg/apis/meta/v1:meta",
        "@io_k8s_apimachinery//pkg/runtime",
        "@io_k8s_apimachinery//pkg/runtime/serializer",
        "@io_k8s_apimachinery//pkg/util/httpstream/wsstream",
        "@io_k8s_apimachinery//pkg/util/remotecommand",
        "@io_k8s_client_go//kubernetes",
        "@io_k8s_client_go//kubernetes/typed/authorization/v1:authorization",
        "@io_k8s_client_go//rest",
        "@io_k8s_client_go//tools/clientcmd",
        "@io_k8s_client_go//tools/clientcmd/api",
        "@io_k8s_client_go//tools/portforward",
        "@io_k8s_client_go//tools/remotecommand",
        "@io_k8s_client_go//transport",
        "@org_golang_google_grpc//:grpc",
        "@org_golang_google_grpc//credentials",
        "@org_golang_google_protobuf//testing/protocmp",
    ],
)
