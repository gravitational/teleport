load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")

go_library(
    name = "service",
    srcs = [
        "acme.go",
        "awsoidc.go",
        "certreloader.go",
        "connect.go",
        "db.go",
        "desktop.go",
        "diagnostic.go",
        "discovery.go",
        "info.go",
        "kubernetes.go",
        "listeners.go",
        "pyroscope.go",
        "relay.go",
        "service.go",
        "signals.go",
        "state.go",
        "supervisor.go",
    ],
    importpath = "github.com/gravitational/teleport/lib/service",
    visibility = ["//visibility:public"],
    deps = [
        "//:teleport",
        "//api/breaker",
        "//api/client",
        "//api/client/proto",
        "//api/client/webclient",
        "//api/constants",
        "//api/defaults",
        "//api/gen/proto/go/teleport/accessgraph/v1:accessgraph",
        "//api/gen/proto/go/teleport/header/v1:header",
        "//api/gen/proto/go/teleport/integration/v1:integration",
        "//api/gen/proto/go/teleport/kube/v1:kube",
        "//api/gen/proto/go/teleport/presence/v1:presence",
        "//api/gen/proto/go/teleport/transport/v1:transport",
        "//api/types",
        "//api/types/discoveryconfig",
        "//api/types/events",
        "//api/utils",
        "//api/utils/aws",
        "//api/utils/grpc/interceptors",
        "//api/utils/keys",
        "//api/utils/retryutils",
        "//api/utils/sshutils",
        "//entitlements",
        "//lib",
        "//lib/agentless",
        "//lib/auditd",
        "//lib/auth",
        "//lib/auth/accesspoint",
        "//lib/auth/authclient",
        "//lib/auth/join",
        "//lib/auth/keygen",
        "//lib/auth/keystore",
        "//lib/auth/machineid/machineidv1",
        "//lib/auth/recordingencryption",
        "//lib/auth/state",
        "//lib/auth/storage",
        "//lib/authz",
        "//lib/automaticupgrades",
        "//lib/autoupdate/agent",
        "//lib/autoupdate/rollout",
        "//lib/backend",
        "//lib/backend/dynamo",
        "//lib/backend/etcdbk",
        "//lib/backend/firestore",
        "//lib/backend/kubernetes",
        "//lib/backend/lite",
        "//lib/backend/pgbk",
        "//lib/bpf",
        "//lib/cache",
        "//lib/client",
        "//lib/client/db/postgres/repl",
        "//lib/client/db/repl",
        "//lib/client/debug",
        "//lib/cloud",
        "//lib/cloud/aws",
        "//lib/cloud/awsconfig",
        "//lib/cloud/gcp",
        "//lib/cloud/imds",
        "//lib/cloud/imds/aws",
        "//lib/cloud/imds/azure",
        "//lib/cloud/imds/gcp",
        "//lib/cloud/imds/oracle",
        "//lib/defaults",
        "//lib/events",
        "//lib/events/athena",
        "//lib/events/azsessions",
        "//lib/events/dynamoevents",
        "//lib/events/filesessions",
        "//lib/events/firestoreevents",
        "//lib/events/gcssessions",
        "//lib/events/pgevents",
        "//lib/events/s3sessions",
        "//lib/httplib",
        "//lib/integrations/awsoidc",
        "//lib/integrations/awsra",
        "//lib/integrations/externalauditstorage",
        "//lib/inventory",
        "//lib/joinserver",
        "//lib/kube/grpc",
        "//lib/kube/proxy",
        "//lib/labels",
        "//lib/limiter",
        "//lib/modules",
        "//lib/multiplexer",
        "//lib/observability/metrics",
        "//lib/observability/tracing",
        "//lib/openssh",
        "//lib/pam",
        "//lib/plugin",
        "//lib/proxy",
        "//lib/proxy/peer",
        "//lib/proxy/peer/quic",
        "//lib/resumption",
        "//lib/reversetunnel",
        "//lib/reversetunnelclient",
        "//lib/secretsscanner/proxy",
        "//lib/selinux",
        "//lib/service/breaker",
        "//lib/service/servicecfg",
        "//lib/services",
        "//lib/services/expiry",
        "//lib/services/local",
        "//lib/srv",
        "//lib/srv/alpnproxy",
        "//lib/srv/alpnproxy/auth",
        "//lib/srv/alpnproxy/common",
        "//lib/srv/app",
        "//lib/srv/db",
        "//lib/srv/debug",
        "//lib/srv/desktop",
        "//lib/srv/discovery",
        "//lib/srv/ingress",
        "//lib/srv/mcp",
        "//lib/srv/regular",
        "//lib/srv/transport/transportv1",
        "//lib/sshutils",
        "//lib/system",
        "//lib/tlsca",
        "//lib/usagereporter/teleport",
        "//lib/utils",
        "//lib/utils/cert",
        "//lib/utils/hostid",
        "//lib/utils/interval",
        "//lib/utils/log",
        "//lib/versioncontrol/endpoint",
        "//lib/versioncontrol/upgradewindow",
        "//lib/web",
        "//lib/web/app",
        "//lib/winpki",
        "@com_github_coreos_go_semver//semver",
        "@com_github_google_renameio_v2//:renameio",
        "@com_github_google_uuid//:uuid",
        "@com_github_grafana_pyroscope_go//:pyroscope-go",
        "@com_github_gravitational_roundtrip//:roundtrip",
        "@com_github_gravitational_trace//:trace",
        "@com_github_jonboulle_clockwork//:clockwork",
        "@com_github_prometheus_client_golang//prometheus",
        "@com_github_prometheus_client_golang//prometheus/promhttp",
        "@com_github_quic_go_quic_go//:quic-go",
        "@io_opentelemetry_go_contrib_instrumentation_google_golang_org_grpc_otelgrpc//:otelgrpc",
        "@io_opentelemetry_go_otel//attribute",
        "@org_golang_google_grpc//:grpc",
        "@org_golang_google_grpc//credentials",
        "@org_golang_google_grpc//keepalive",
        "@org_golang_google_protobuf//types/known/timestamppb",
        "@org_golang_x_crypto//acme",
        "@org_golang_x_crypto//acme/autocert",
        "@org_golang_x_crypto//ssh",
        "@org_golang_x_sync//semaphore",
        "@org_golang_x_sys//unix",
    ],
)

go_test(
    name = "service_test",
    srcs = [
        "certreloader_test.go",
        "db_test.go",
        "discovery_test.go",
        "pyroscope_test.go",
        "service_test.go",
        "state_test.go",
    ],
    embed = [":service"],
    deps = [
        "//:teleport",
        "//api",
        "//api/breaker",
        "//api/gen/proto/go/teleport/autoupdate/v1:autoupdate",
        "//api/gen/proto/go/teleport/clusterconfig/v1:clusterconfig",
        "//api/types",
        "//api/types/autoupdate",
        "//api/utils",
        "//entitlements",
        "//lib",
        "//lib/auth",
        "//lib/auth/authclient",
        "//lib/auth/state",
        "//lib/backend",
        "//lib/backend/lite",
        "//lib/backend/memory",
        "//lib/cloud/imds",
        "//lib/defaults",
        "//lib/events",
        "//lib/events/athena",
        "//lib/integrations/externalauditstorage",
        "//lib/limiter",
        "//lib/modules",
        "//lib/modules/modulestest",
        "//lib/multiplexer",
        "//lib/reversetunnelclient",
        "//lib/service/servicecfg",
        "//lib/services",
        "//lib/services/local",
        "//lib/srv/discovery",
        "//lib/tlsca",
        "//lib/utils",
        "//lib/utils/hostid",
        "//lib/utils/log/logtest",
        "@com_github_coreos_go_semver//semver",
        "@com_github_google_go_cmp//cmp",
        "@com_github_google_go_cmp//cmp/cmpopts",
        "@com_github_google_uuid//:uuid",
        "@com_github_grafana_pyroscope_go//:pyroscope-go",
        "@com_github_gravitational_trace//:trace",
        "@com_github_jonboulle_clockwork//:clockwork",
        "@com_github_prometheus_client_golang//prometheus",
        "@com_github_stretchr_testify//assert",
        "@com_github_stretchr_testify//require",
        "@org_golang_google_grpc//:grpc",
        "@org_golang_google_grpc//credentials",
        "@org_golang_google_grpc//credentials/insecure",
        "@org_golang_x_sync//errgroup",
    ],
)
