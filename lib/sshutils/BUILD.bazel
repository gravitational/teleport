load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")

go_library(
    name = "sshutils",
    srcs = [
        "authority.go",
        "ctx.go",
        "exec.go",
        "fingerprint.go",
        "forward.go",
        "marshal.go",
        "reply.go",
        "req.go",
        "server.go",
        "signer.go",
        "tcpip.go",
        "utils.go",
    ],
    importpath = "github.com/gravitational/teleport/lib/sshutils",
    visibility = ["//visibility:public"],
    deps = [
        "//:teleport",
        "//api/observability/tracing",
        "//api/observability/tracing/ssh",
        "//api/types",
        "//api/utils/sshutils",
        "//lib/defaults",
        "//lib/limiter",
        "//lib/observability/metrics",
        "//lib/session",
        "//lib/srv/ingress",
        "//lib/sshutils/networking",
        "//lib/teleagent",
        "//lib/utils",
        "@com_github_gravitational_trace//:trace",
        "@com_github_jonboulle_clockwork//:clockwork",
        "@com_github_prometheus_client_golang//prometheus",
        "@io_opentelemetry_go_otel//semconv/v1.10.0:v1_10_0",
        "@io_opentelemetry_go_otel_trace//:trace",
        "@org_golang_x_crypto//ssh",
        "@org_golang_x_crypto//ssh/agent",
    ],
)

go_test(
    name = "sshutils_test",
    srcs = [
        "ctx_test.go",
        "exec_test.go",
        "fingerprint_test.go",
        "marshal_test.go",
        "mock_test.go",
        "reply_test.go",
        "server_test.go",
        "utils_test.go",
    ],
    embed = [":sshutils"],
    deps = [
        "//:teleport",
        "//lib/utils",
        "//lib/utils/cert",
        "//lib/utils/log/logtest",
        "@com_github_gravitational_trace//:trace",
        "@com_github_stretchr_testify//assert",
        "@com_github_stretchr_testify//mock",
        "@com_github_stretchr_testify//require",
        "@org_golang_x_crypto//ssh",
    ],
)
