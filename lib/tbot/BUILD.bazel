load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")

go_library(
    name = "tbot",
    srcs = [
        "database_access.go",
        "loop.go",
        "output_utils.go",
        "service_application_output.go",
        "service_application_tunnel.go",
        "service_bot_identity.go",
        "service_ca_rotation.go",
        "service_client_credential.go",
        "service_database_output.go",
        "service_database_tunnel.go",
        "service_diagnostics.go",
        "service_example.go",
        "service_heartbeat.go",
        "service_identity_output.go",
        "service_kubernetes_output.go",
        "service_kubernetes_v2_output.go",
        "service_spiffe_svid_output.go",
        "service_spiffe_workload_api.go",
        "service_spiffe_workload_api_sds.go",
        "service_ssh_host_output.go",
        "service_ssh_multiplexer.go",
        "service_ssh_multiplexer_unix.go",
        "service_ssh_multiplexer_windows.go",
        "service_workload_identity_api.go",
        "service_workload_identity_aws_ra.go",
        "service_workload_identity_jwt.go",
        "service_workload_identity_x509.go",
        "ssh_proxy.go",
        "tbot.go",
    ],
    importpath = "github.com/gravitational/teleport/lib/tbot",
    visibility = ["//visibility:public"],
    deps = [
        "//:teleport",
        "//api/client",
        "//api/client/proto",
        "//api/client/proxy",
        "//api/client/webclient",
        "//api/constants",
        "//api/defaults",
        "//api/gen/proto/go/teleport/machineid/v1:machineid",
        "//api/gen/proto/go/teleport/trust/v1:trust",
        "//api/gen/proto/go/teleport/workloadidentity/v1:workloadidentity",
        "//api/observability/tracing",
        "//api/types",
        "//api/utils",
        "//api/utils/grpc/interceptors",
        "//api/utils/keys",
        "//api/utils/retryutils",
        "//lib/auth/authclient",
        "//lib/auth/join",
        "//lib/auth/join/boundkeypair",
        "//lib/auth/state",
        "//lib/autoupdate/agent",
        "//lib/client",
        "//lib/client/identityfile",
        "//lib/config/openssh",
        "//lib/cryptosuites",
        "//lib/defaults",
        "//lib/kube/kubeconfig",
        "//lib/modules",
        "//lib/observability/metrics",
        "//lib/resumption",
        "//lib/reversetunnelclient",
        "//lib/srv/alpnproxy",
        "//lib/srv/alpnproxy/common",
        "//lib/sshutils",
        "//lib/tbot/bot",
        "//lib/tbot/client",
        "//lib/tbot/config",
        "//lib/tbot/identity",
        "//lib/tbot/readyz",
        "//lib/tbot/ssh",
        "//lib/tbot/workloadidentity",
        "//lib/tbot/workloadidentity/attrs",
        "//lib/tbot/workloadidentity/workloadattest",
        "//lib/tlsca",
        "//lib/uds",
        "//lib/utils",
        "//lib/utils/log",
        "//lib/utils/uds",
        "@com_github_envoyproxy_go_control_plane_envoy//config/core/v3:core",
        "@com_github_envoyproxy_go_control_plane_envoy//extensions/transport_sockets/tls/v3:tls",
        "@com_github_envoyproxy_go_control_plane_envoy//service/discovery/v3:discovery",
        "@com_github_envoyproxy_go_control_plane_envoy//service/secret/v3:secret",
        "@com_github_gravitational_trace//:trace",
        "@com_github_grpc_ecosystem_go_grpc_middleware_v2//interceptors/recovery",
        "@com_github_jonboulle_clockwork//:clockwork",
        "@com_github_prometheus_client_golang//prometheus",
        "@com_github_prometheus_client_golang//prometheus/promhttp",
        "@com_github_spiffe_aws_spiffe_workload_helper//:aws-spiffe-workload-helper",
        "@com_github_spiffe_aws_spiffe_workload_helper//vendoredaws",
        "@com_github_spiffe_go_spiffe_v2//bundle/spiffebundle",
        "@com_github_spiffe_go_spiffe_v2//proto/spiffe/workload",
        "@com_github_spiffe_go_spiffe_v2//spiffeid",
        "@com_github_spiffe_go_spiffe_v2//svid/jwtsvid",
        "@com_github_spiffe_go_spiffe_v2//svid/x509svid",
        "@in_gopkg_ini_v1//:ini_v1",
        "@io_k8s_client_go//tools/clientcmd",
        "@io_k8s_client_go//tools/clientcmd/api",
        "@io_opentelemetry_go_contrib_instrumentation_google_golang_org_grpc_otelgrpc//:otelgrpc",
        "@io_opentelemetry_go_otel//:otel",
        "@io_opentelemetry_go_otel_trace//:trace",
        "@org_golang_google_grpc//:grpc",
        "@org_golang_google_grpc//codes",
        "@org_golang_google_grpc//credentials/insecure",
        "@org_golang_google_grpc//peer",
        "@org_golang_google_grpc//status",
        "@org_golang_google_protobuf//types/known/anypb",
        "@org_golang_google_protobuf//types/known/durationpb",
        "@org_golang_google_protobuf//types/known/structpb",
        "@org_golang_google_protobuf//types/known/timestamppb",
        "@org_golang_x_crypto//ssh",
        "@org_golang_x_crypto//ssh/agent",
        "@org_golang_x_sync//errgroup",
        "@org_golang_x_sync//singleflight",
    ],
)

go_test(
    name = "tbot_test",
    srcs = [
        "identity_test.go",
        "loop_test.go",
        "service_application_tunnel_test.go",
        "service_ca_rotation_test.go",
        "service_heartbeat_test.go",
        "service_identity_output_test.go",
        "service_kubernetes_output_test.go",
        "service_kubernetes_v2_output_test.go",
        "service_spiffe_workload_api_sds_test.go",
        "service_spiffe_workload_api_test.go",
        "service_ssh_multiplexer_test.go",
        "service_workload_identity_api_test.go",
        "service_workload_identity_aws_ra_test.go",
        "service_workload_identity_jwt_test.go",
        "service_workload_identity_x509_test.go",
        "tbot_test.go",
    ],
    data = glob(["testdata/**"]),
    embed = [":tbot"],
    deps = [
        "//:teleport",
        "//api/client",
        "//api/client/proto",
        "//api/client/proxy",
        "//api/client/webclient",
        "//api/gen/proto/go/teleport/header/v1:header",
        "//api/gen/proto/go/teleport/machineid/v1:machineid",
        "//api/gen/proto/go/teleport/workloadidentity/v1:workloadidentity",
        "//api/types",
        "//api/utils",
        "//api/utils/keys",
        "//api/utils/sshutils",
        "//integration/helpers",
        "//lib/auth/authclient",
        "//lib/client",
        "//lib/cryptosuites",
        "//lib/defaults",
        "//lib/fixtures",
        "//lib/service",
        "//lib/service/servicecfg",
        "//lib/services",
        "//lib/srv/db/common",
        "//lib/srv/db/postgres",
        "//lib/sshutils",
        "//lib/tbot/bot",
        "//lib/tbot/botfs",
        "//lib/tbot/config",
        "//lib/tbot/identity",
        "//lib/tbot/ssh",
        "//lib/tbot/workloadidentity",
        "//lib/tbot/workloadidentity/attrs",
        "//lib/tlsca",
        "//lib/utils",
        "//lib/utils/log/logtest",
        "//lib/utils/testutils",
        "//lib/utils/testutils/golden",
        "//tool/teleport/testenv",
        "@com_github_envoyproxy_go_control_plane_envoy//extensions/transport_sockets/tls/v3:tls",
        "@com_github_envoyproxy_go_control_plane_envoy//service/discovery/v3:discovery",
        "@com_github_envoyproxy_go_control_plane_envoy//service/secret/v3:secret",
        "@com_github_google_go_cmp//cmp",
        "@com_github_gravitational_trace//:trace",
        "@com_github_jackc_pgconn//:pgconn",
        "@com_github_jonboulle_clockwork//:clockwork",
        "@com_github_spiffe_aws_spiffe_workload_helper//vendoredaws",
        "@com_github_spiffe_go_spiffe_v2//bundle/spiffebundle",
        "@com_github_spiffe_go_spiffe_v2//bundle/x509bundle",
        "@com_github_spiffe_go_spiffe_v2//proto/spiffe/workload",
        "@com_github_spiffe_go_spiffe_v2//spiffeid",
        "@com_github_spiffe_go_spiffe_v2//svid/jwtsvid",
        "@com_github_spiffe_go_spiffe_v2//svid/x509svid",
        "@com_github_spiffe_go_spiffe_v2//workloadapi",
        "@com_github_stretchr_testify//assert",
        "@com_github_stretchr_testify//require",
        "@org_golang_google_grpc//:grpc",
        "@org_golang_google_grpc//credentials/insecure",
        "@org_golang_google_protobuf//encoding/protojson",
        "@org_golang_google_protobuf//testing/protocmp",
        "@org_golang_google_protobuf//types/known/anypb",
        "@org_golang_google_protobuf//types/known/durationpb",
        "@org_golang_google_protobuf//types/known/timestamppb",
        "@org_golang_x_crypto//ssh",
        "@org_golang_x_crypto//ssh/agent",
        "@org_golang_x_crypto//ssh/knownhosts",
    ],
)
