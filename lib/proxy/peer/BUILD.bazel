load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")

go_library(
    name = "peer",
    srcs = [
        "client.go",
        "clientmetrics.go",
        "credentials.go",
        "reporter.go",
        "server.go",
        "servermetrics.go",
        "service.go",
        "stats.go",
    ],
    importpath = "github.com/gravitational/teleport/lib/proxy/peer",
    visibility = ["//visibility:public"],
    deps = [
        "//:teleport",
        "//api/client/proto",
        "//api/metadata",
        "//api/types",
        "//api/utils",
        "//api/utils/grpc/interceptors",
        "//api/utils/grpc/stream",
        "//lib/auth/authclient",
        "//lib/defaults",
        "//lib/observability/metrics",
        "//lib/proxy/peer/dial",
        "//lib/proxy/peer/internal",
        "//lib/proxy/peer/quic",
        "//lib/services",
        "//lib/tlsca",
        "//lib/utils",
        "@com_github_gravitational_trace//:trace",
        "@com_github_jonboulle_clockwork//:clockwork",
        "@com_github_prometheus_client_golang//prometheus",
        "@com_github_quic_go_quic_go//:quic-go",
        "@org_golang_google_grpc//:grpc",
        "@org_golang_google_grpc//codes",
        "@org_golang_google_grpc//connectivity",
        "@org_golang_google_grpc//credentials",
        "@org_golang_google_grpc//keepalive",
        "@org_golang_google_grpc//stats",
        "@org_golang_google_grpc//status",
    ],
)

go_test(
    name = "peer_test",
    srcs = [
        "client_test.go",
        "credentials_test.go",
        "helpers_test.go",
        "server_test.go",
        "service_test.go",
    ],
    embed = [":peer"],
    deps = [
        "//api/client/proto",
        "//api/types",
        "//api/utils",
        "//api/utils/keys",
        "//lib/auth/authclient",
        "//lib/cryptosuites",
        "//lib/defaults",
        "//lib/fixtures",
        "//lib/proxy/peer/dial",
        "//lib/proxy/peer/internal",
        "//lib/tlsca",
        "//lib/utils",
        "//lib/utils/log/logtest",
        "@com_github_gravitational_trace//:trace",
        "@com_github_jonboulle_clockwork//:clockwork",
        "@com_github_stretchr_testify//require",
        "@org_golang_google_grpc//:grpc",
        "@org_golang_google_grpc//connectivity",
        "@org_golang_google_grpc//credentials",
        "@org_golang_google_grpc//credentials/insecure",
        "@org_golang_x_crypto//ssh",
    ],
)
