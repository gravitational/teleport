load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")

go_library(
    name = "workloadidentityv1",
    srcs = [
        "decision.go",
        "issuer_service.go",
        "resource_service.go",
        "revocation_service.go",
        "sigstore_policy_service.go",
        "x509_overrides_service.go",
    ],
    importpath = "github.com/gravitational/teleport/lib/auth/machineid/workloadidentityv1",
    visibility = ["//visibility:public"],
    deps = [
        "//:teleport",
        "//api/gen/proto/go/teleport/trait/v1:trait",
        "//api/gen/proto/go/teleport/workloadidentity/v1:workloadidentity",
        "//api/observability/tracing",
        "//api/types",
        "//api/types/events",
        "//api/utils/retryutils",
        "//lib/auth/machineid/workloadidentityv1/expression",
        "//lib/authz",
        "//lib/events",
        "//lib/jwt",
        "//lib/services",
        "//lib/tlsca",
        "//lib/utils",
        "//lib/utils/oidc",
        "@com_github_gogo_protobuf//types",
        "@com_github_gravitational_trace//:trace",
        "@com_github_jonboulle_clockwork//:clockwork",
        "@com_github_spiffe_go_spiffe_v2//spiffeid",
        "@io_opentelemetry_go_otel//:otel",
        "@org_golang_google_grpc//:grpc",
        "@org_golang_google_protobuf//encoding/protojson",
        "@org_golang_google_protobuf//proto",
        "@org_golang_google_protobuf//reflect/protoreflect",
        "@org_golang_google_protobuf//types/known/durationpb",
        "@org_golang_google_protobuf//types/known/emptypb",
        "@org_golang_google_protobuf//types/known/structpb",
        "@org_golang_google_protobuf//types/known/timestamppb",
    ],
)

go_test(
    name = "workloadidentityv1_test",
    srcs = [
        "decision_test.go",
        "workloadidentityv1_test.go",
    ],
    embed = [":workloadidentityv1"],
    deps = [
        "//api/client/proto",
        "//api/gen/proto/go/teleport/header/v1:header",
        "//api/gen/proto/go/teleport/machineid/v1:machineid",
        "//api/gen/proto/go/teleport/workloadidentity/v1:workloadidentity",
        "//api/types",
        "//api/types/events",
        "//api/utils",
        "//api/utils/keys",
        "//integrations/lib/testing/fakejoin",
        "//lib/auth",
        "//lib/auth/authclient",
        "//lib/auth/join",
        "//lib/auth/state",
        "//lib/cryptosuites",
        "//lib/events",
        "//lib/events/eventstest",
        "//lib/jwt",
        "//lib/modules",
        "//lib/services",
        "//lib/tlsca",
        "//lib/utils",
        "@com_github_go_jose_go_jose_v3//jwt",
        "@com_github_google_go_cmp//cmp",
        "@com_github_google_go_cmp//cmp/cmpopts",
        "@com_github_gravitational_trace//:trace",
        "@com_github_jonboulle_clockwork//:clockwork",
        "@com_github_stretchr_testify//mock",
        "@com_github_stretchr_testify//require",
        "@org_golang_google_protobuf//proto",
        "@org_golang_google_protobuf//testing/protocmp",
        "@org_golang_google_protobuf//types/known/durationpb",
        "@org_golang_google_protobuf//types/known/structpb",
        "@org_golang_google_protobuf//types/known/timestamppb",
        "@org_golang_x_crypto//ssh",
    ],
)
