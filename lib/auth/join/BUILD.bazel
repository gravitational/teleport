load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")

go_library(
    name = "join",
    srcs = ["join.go"],
    importpath = "github.com/gravitational/teleport/lib/auth/join",
    visibility = ["//visibility:public"],
    deps = [
        "//:teleport",
        "//api/breaker",
        "//api/client",
        "//api/client/proto",
        "//api/client/webclient",
        "//api/observability/tracing",
        "//api/types",
        "//api/utils/aws",
        "//api/utils/keys",
        "//lib/auth/authclient",
        "//lib/auth/join/iam",
        "//lib/auth/join/oracle",
        "//lib/auth/state",
        "//lib/azuredevops",
        "//lib/bitbucket",
        "//lib/circleci",
        "//lib/client/proxy/insecure",
        "//lib/cloud/imds/azure",
        "//lib/cloud/imds/gcp",
        "//lib/cryptosuites",
        "//lib/defaults",
        "//lib/githubactions",
        "//lib/gitlab",
        "//lib/jwt",
        "//lib/kube/token",
        "//lib/spacelift",
        "//lib/terraformcloud",
        "//lib/tlsca",
        "//lib/tpm",
        "//lib/utils",
        "@com_github_go_jose_go_jose_v3//:go-jose",
        "@com_github_gravitational_trace//:trace",
        "@com_github_jonboulle_clockwork//:clockwork",
        "@io_opentelemetry_go_otel//:otel",
        "@org_golang_x_crypto//ssh",
    ],
)

go_test(
    name = "join_test",
    srcs = ["join_test.go"],
    embed = [":join"],
    deps = [
        "//api/client/proto",
        "//api/gen/proto/go/teleport/header/v1:header",
        "//api/gen/proto/go/teleport/machineid/v1:machineid",
        "//api/types",
        "//api/types/events",
        "//api/utils/sshutils",
        "//lib/auth",
        "//lib/auth/machineid/machineidv1",
        "//lib/auth/state",
        "//lib/defaults",
        "//lib/events",
        "//lib/modules",
        "//lib/tlsca",
        "//lib/utils",
        "@com_github_google_go_cmp//cmp",
        "@com_github_google_go_cmp//cmp/cmpopts",
        "@com_github_google_uuid//:uuid",
        "@com_github_gravitational_trace//:trace",
        "@com_github_jonboulle_clockwork//:clockwork",
        "@com_github_stretchr_testify//assert",
        "@com_github_stretchr_testify//require",
        "@org_golang_x_crypto//ssh",
    ],
)
