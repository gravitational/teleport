/*
Copyright 2025 Gravitational, Inc.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

package provider

// TODO(kopiczko) Uncomment when the teleport_access_list_member resource is generated. For now the linter complains about unused functions.
/*
import (
	"strings"

	"github.com/gravitational/trace"
)

// formatID takes the prefix and the name of the resource and converts it to a string ID.
func formatID(prefix, name string) string {
	return prefix + "/" + name
}

// parseID takes the ID generated by [formatID] and splits it back to the prefix and resource name.
func parseID(id string) (prefix, name string, err error) {
	split := strings.Split(id, "/")
	if len(split) != 2 {
		return "", "", trace.BadParameter("expected id %q to have a single %q separator", id, "/")
	}
	prefix = split[0]
	name = split[1]
	if prefix == "" {
		return "", "", trace.BadParameter("expected id %q prefix to be non-empty", id)
	}
	if name == "" {
		return "", "", trace.BadParameter("expected id %q name to be non-empty", id)
	}
	return prefix, name, nil
}
*/
