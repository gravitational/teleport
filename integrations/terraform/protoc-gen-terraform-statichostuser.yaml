---
target_package_name: "v2"
default_package_name: "github.com/gravitational/teleport/api/gen/proto/go/teleport/userprovisioning/v2"
duration_custom_type: Duration
use_state_for_unknown_by_default: true

# Top-level type names to export
types:
  - "StaticHostUser"

# These import paths were not being automatically picked up by
# protoc-gen-terraform without these overrides
import_path_overrides:
    "types": "github.com/gravitational/teleport/api/types"
    "wrappers": "github.com/gravitational/teleport/api/types/wrappers"
    "durationpb": "google.golang.org/protobuf/types/known/durationpb"
    "timestamppb": "google.golang.org/protobuf/types/known/timestamppb"
    "v1": "github.com/gravitational/teleport/api/gen/proto/go/teleport/header/v1"
    "v11": "github.com/gravitational/teleport/api/gen/proto/go/teleport/label/v1"


# id field is required for integration tests. It is not used by provider.
# We have to add it manually (might be removed in the future versions).
injected_fields:
  StaticHostUser:
    - name: id
      type: github.com/hashicorp/terraform-plugin-framework/types.StringType
      computed: true
      plan_modifiers:
        - "github.com/hashicorp/terraform-plugin-framework/tfsdk.UseStateForUnknown()"

# These fields will be excluded
exclude_fields:
  # Metadata (we id resources by name on our side)
  - "StaticHostUser.metadata.id"

# These fields will be marked as Computed: true
computed_fields:
  # Metadata
  - "StaticHostUser.metadata.namespace"
  - "StaticHostUser.kind"

# These fields will be marked as Required: true
required_fields:
  - "StaticHostUser.version"
  - "StaticHostUser.metadata"
  - "StaticHostUser.metadata.name"
  - "StaticHostUser.spec"
  - "StaticHostUser.spec.matchers"
  - "StaticHostUser.spec.matchers.node_labels.name"
  - "StaticHostUser.spec.matchers.node_labels.values"

plan_modifiers:
    # Force to recreate resource if it's name changes
    Metadata.name:
      - "github.com/hashicorp/terraform-plugin-framework/tfsdk.RequiresReplace()"

# This must be defined for the generator to be happy, but in reality all time
# fields are overridden (because the protobuf timestamps contain locks and the
# linter gets mad if we use raw structs instead of pointers).
time_type:
  type: "PlaceholderType"
duration_type:
  type: "PlaceholderType"

validators:
  # Expires must be in the future
  Metadata.expires:
    - github_com_gravitational_teleport_integrations_terraform_tfschema.MustTimeBeInFuture()

custom_types:
  "StaticHostUser.metadata.expires": Timestamp