load("@io_bazel_rules_go//go:def.bzl", "go_test")

go_test(
    name = "testlib_test",
    srcs = [
        "access_list_test.go",
        "access_monitoring_rule_test.go",
        "app_test.go",
        "auth_preference_test.go",
        "autoupdate_config_test.go",
        "autoupdate_version_test.go",
        "bot_test.go",
        "cluster_maintenance_config_test.go",
        "cluster_networking_config_test.go",
        "configuration_test.go",
        "database_test.go",
        "device_trust_test.go",
        "dynamic_windows_desktop_test.go",
        "github_connector_test.go",
        "health_check_config_test.go",
        "installer_test.go",
        "loginrule_test.go",
        "machineid_join_test.go",
        "main_test.go",
        "oidc_connector_test.go",
        "okta_import_rule_test.go",
        "provision_token_test.go",
        "role_test.go",
        "saml_connector_test.go",
        "server_test.go",
        "session_recording_config_test.go",
        "static_host_user_test.go",
        "terraform_oss_test.go",
        "user_test.go",
        "workload_identity_test.go",
    ],
    embedsrcs = [
        "fixtures/access_list_0_create.tf",
        "fixtures/access_list_1_update.tf",
        "fixtures/access_list_2_expiring.tf",
        "fixtures/access_monitoring_rule_0_create.tf",
        "fixtures/access_monitoring_rule_1_update.tf",
        "fixtures/app_0_create.tf",
        "fixtures/app_0_create_auth_b64.tf",
        "fixtures/app_0_create_auth_files.tf",
        "fixtures/app_0_create_with_cache.tf",
        "fixtures/app_1_update.tf",
        "fixtures/auth_preference_0_cluster.tf",
        "fixtures/auth_preference_0_set.tf",
        "fixtures/auth_preference_1_cluster.tf",
        "fixtures/auth_preference_1_update.tf",
        "fixtures/autoupdate_config_0_create.tf",
        "fixtures/autoupdate_config_1_update.tf",
        "fixtures/autoupdate_version_0_create.tf",
        "fixtures/autoupdate_version_1_update.tf",
        "fixtures/bot_0_create.tf",
        "fixtures/bot_1_update.tf",
        "fixtures/database_0_create.tf",
        "fixtures/database_1_update.tf",
        "fixtures/device_trust_0_create.tf",
        "fixtures/device_trust_1_update.tf",
        "fixtures/dynamic_windows_desktop_0_create.tf",
        "fixtures/dynamic_windows_desktop_1_update.tf",
        "fixtures/github_connector_0_create.tf",
        "fixtures/github_connector_1_update.tf",
        "fixtures/github_connector_teams_to_roles.tf",
        "fixtures/github_connector_without_mapping.tf",
        "fixtures/health_check_config_0_create.tf",
        "fixtures/health_check_config_1_update.tf",
        "fixtures/installer_0_create.tf",
        "fixtures/installer_1_update.tf",
        "fixtures/login_rule_0_create.tf",
        "fixtures/login_rule_0_update.tf",
        "fixtures/maintenance_config_0_set.tf",
        "fixtures/maintenance_config_1_update.tf",
        "fixtures/networking_config_0_set.tf",
        "fixtures/networking_config_1_update.tf",
        "fixtures/networking_config_data_source.tf",
        "fixtures/oidc_connector_0_create.tf",
        "fixtures/oidc_connector_1_update.tf",
        "fixtures/oidc_connector_without_max_age.tf",
        "fixtures/okta_import_rule_0_create.tf",
        "fixtures/okta_import_rule_1_update.tf",
        "fixtures/provision_token_0_create.tf",
        "fixtures/provision_token_1_update.tf",
        "fixtures/provision_token_iam_create.tf",
        "fixtures/provision_token_no_expiry_0_create.tf",
        "fixtures/provision_token_secret_0_create.tf",
        "fixtures/provision_token_v2_0_create.tf",
        "fixtures/provision_token_v2_1_update.tf",
        "fixtures/provision_token_v2_gitlab_0_create.tf",
        "fixtures/provision_token_v2_gitlab_1_update.tf",
        "fixtures/provision_token_v2_gitlab_2_update.tf",
        "fixtures/role_0_create.tf",
        "fixtures/role_1_update.tf",
        "fixtures/role_2_update.tf",
        "fixtures/role_3_update.tf",
        "fixtures/role_data_source.tf",
        "fixtures/role_drift_0.tf",
        "fixtures/role_no_version.tf",
        "fixtures/role_reviewers_0_two_roles.tf",
        "fixtures/role_reviewers_1_one_role.tf",
        "fixtures/role_upgrade_v4.tf",
        "fixtures/role_upgrade_v5.tf",
        "fixtures/role_upgrade_v6.tf",
        "fixtures/role_upgrade_v7.tf",
        "fixtures/role_with_kube_resources.tf",
        "fixtures/role_with_kube_verbs.tf",
        "fixtures/saml_connector_0_create.tf",
        "fixtures/saml_connector_0_create_with_entitydescriptorurl.tf",
        "fixtures/saml_connector_0_create_without_entitydescriptor.tf",
        "fixtures/saml_connector_1_update.tf",
        "fixtures/server_openssh_0_create.tf",
        "fixtures/server_openssh_1_update.tf",
        "fixtures/server_openssh_nameless_0_create.tf",
        "fixtures/server_openssh_nameless_1_update.tf",
        "fixtures/server_openssheice_0_create.tf",
        "fixtures/server_openssheice_1_update.tf",
        "fixtures/session_recording_config_0_set.tf",
        "fixtures/session_recording_config_1_update.tf",
        "fixtures/static_host_user_0_create.tf",
        "fixtures/static_host_user_1_update.tf",
        "fixtures/user_0_create.tf",
        "fixtures/user_1_update.tf",
        "fixtures/workload_identity_0_create.tf",
        "fixtures/workload_identity_1_update.tf",
    ],
    deps = [
        "//:teleport",
        "//api/client",
        "//api/client/proto",
        "//api/constants",
        "//api/defaults",
        "//api/gen/proto/go/teleport/accessmonitoringrules/v1:accessmonitoringrules",
        "//api/gen/proto/go/teleport/autoupdate/v1:autoupdate",
        "//api/gen/proto/go/teleport/clusterconfig/v1:clusterconfig",
        "//api/gen/proto/go/teleport/header/v1:header",
        "//api/gen/proto/go/teleport/healthcheckconfig/v1:healthcheckconfig",
        "//api/gen/proto/go/teleport/label/v1:label",
        "//api/gen/proto/go/teleport/loginrule/v1:loginrule",
        "//api/gen/proto/go/teleport/machineid/v1:machineid",
        "//api/gen/proto/go/teleport/userprovisioning/v2:userprovisioning",
        "//api/gen/proto/go/teleport/workloadidentity/v1:workloadidentity",
        "//api/types",
        "//api/types/autoupdate",
        "//api/types/healthcheckconfig",
        "//api/types/wrappers",
        "//api/utils/keys",
        "//entitlements",
        "//integrations/lib",
        "//integrations/lib/testing/fakejoin",
        "//integrations/lib/testing/integration",
        "//integrations/terraform/provider",
        "//lib/auth",
        "//lib/auth/authclient",
        "//lib/client",
        "//lib/client/identityfile",
        "//lib/cryptosuites",
        "//lib/kube/token",
        "//lib/modules",
        "//lib/services",
        "//tool/teleport/testenv",
        "@com_github_google_go_cmp//cmp",
        "@com_github_google_go_cmp//cmp/cmpopts",
        "@com_github_gravitational_trace//:trace",
        "@com_github_hashicorp_terraform_plugin_framework//providerserver:go_default_library",
        "@com_github_hashicorp_terraform_plugin_framework//tfsdk:go_default_library",
        "@com_github_hashicorp_terraform_plugin_go//tfprotov6:go_default_library",
        "@com_github_hashicorp_terraform_plugin_sdk_v2//helper/resource:go_default_library",
        "@com_github_hashicorp_terraform_plugin_sdk_v2//terraform:go_default_library",
        "@com_github_jonboulle_clockwork//:clockwork",
        "@com_github_stretchr_testify//require",
        "@com_github_stretchr_testify//suite",
        "@org_golang_google_protobuf//types/known/durationpb",
    ],
)
