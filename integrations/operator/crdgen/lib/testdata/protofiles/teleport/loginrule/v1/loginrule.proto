/*
 * Teleport
 * Copyright (C) 2023  Gravitational, Inc.
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */

syntax = "proto3";

package teleport.loginrule.v1;

import "teleport/legacy/types/types.proto";
import "teleport/legacy/types/wrappers/wrappers.proto";

option go_package = "github.com/gravitational/teleport/api/gen/proto/go/teleport/loginrule/v1;loginrulev1";

// LoginRule is a resource to configure rules and logic which should run during
// Teleport user login.
message LoginRule {
  // Metadata is resource metadata.
  types.Metadata metadata = 1;

  // Version is the resource version.
  string version = 2;

  // Priority is the priority of the login rule relative to other login rules
  // in the same cluster. Login rules with a lower numbered priority will be
  // evaluated first.
  int32 priority = 3;

  // TraitsMap is a map of trait keys to lists of predicate expressions which
  // should evaluate to the desired values for that trait.
  map<string, wrappers.StringValues> traits_map = 4;

  // TraitsExpression is a predicate expression which should return the
  // desired traits for the user upon login.
  string traits_expression = 5;
}
