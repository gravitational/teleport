apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  name: teleportsamlconnectors.resources.teleport.dev
spec:
  group: resources.teleport.dev
  names:
    kind: TeleportSAMLConnector
    listKind: TeleportSAMLConnectorList
    plural: teleportsamlconnectors
    shortNames:
    - samlconnector
    - samlconnectors
    singular: teleportsamlconnector
  scope: Namespaced
  versions:
  - name: v2
    schema:
      openAPIV3Schema:
        description: SAMLConnector is the Schema for the samlconnectors API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: SAMLConnector resource definition v2 from Teleport
            properties:
              acs:
                description: AssertionConsumerService is a URL for assertion consumer
                  service on the service provider (Teleport's side).
                type: string
              allow_idp_initiated:
                description: AllowIDPInitiated is a flag that indicates if the connector
                  can be used for IdP-initiated logins.
                type: boolean
              assertion_key_pair:
                description: EncryptionKeyPair is a key pair used for decrypting SAML
                  assertions.
                nullable: true
                properties:
                  cert:
                    description: Cert is a PEM-encoded x509 certificate.
                    type: string
                  private_key:
                    description: PrivateKey is a PEM encoded x509 private key.
                    type: string
                type: object
              attributes_to_roles:
                description: AttributesToRoles is a list of mappings of attribute
                  statements to roles.
                items:
                  properties:
                    name:
                      description: Name is an attribute statement name.
                      type: string
                    roles:
                      description: Roles is a list of static teleport roles to map
                        to.
                      items:
                        type: string
                      nullable: true
                      type: array
                    value:
                      description: Value is an attribute statement value to match.
                      type: string
                  type: object
                type: array
              audience:
                description: Audience uniquely identifies our service provider.
                type: string
              cert:
                description: Cert is the identity provider certificate PEM. IDP signs
                  <Response> responses using this certificate.
                type: string
              display:
                description: Display controls how this connector is displayed.
                type: string
              entity_descriptor:
                description: EntityDescriptor is XML with descriptor. It can be used
                  to supply configuration parameters in one XML file rather than supplying
                  them in the individual elements.
                type: string
              entity_descriptor_url:
                description: EntityDescriptorURL is a URL that supplies a configuration
                  XML.
                type: string
              issuer:
                description: Issuer is the identity provider issuer.
                type: string
              provider:
                description: Provider is the external identity provider.
                type: string
              service_provider_issuer:
                description: ServiceProviderIssuer is the issuer of the service provider
                  (Teleport).
                type: string
              signing_key_pair:
                description: SigningKeyPair is an x509 key pair used to sign AuthnRequest.
                nullable: true
                properties:
                  cert:
                    description: Cert is a PEM-encoded x509 certificate.
                    type: string
                  private_key:
                    description: PrivateKey is a PEM encoded x509 private key.
                    type: string
                type: object
              sso:
                description: SSO is the URL of the identity provider's SSO service.
                type: string
            type: object
          status:
            description: Status defines the observed state of the Teleport resource
            properties:
              conditions:
                description: Conditions represent the latest available observations
                  of an object's state
                items:
                  description: "Condition contains details for one aspect of the current
                    state of this API Resource.\n---\nThis struct is intended for
                    direct use as an array at the field path .status.conditions.  For
                    example,\n\n\n\ttype FooStatus struct{\n\t    // Represents the
                    observations of a foo's current state.\n\t    // Known .status.conditions.type
                    are: \"Available\", \"Progressing\", and \"Degraded\"\n\t    //
                    +patchMergeKey=type\n\t    // +patchStrategy=merge\n\t    // +listType=map\n\t
                    \   // +listMapKey=type\n\t    Conditions []metav1.Condition `json:\"conditions,omitempty\"
                    patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"`\n\n\n\t
                    \   // other fields\n\t}"
                  properties:
                    lastTransitionTime:
                      description: |-
                        lastTransitionTime is the last time the condition transitioned from one status to another.
                        This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        message is a human readable message indicating details about the transition.
                        This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: |-
                        observedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: |-
                        reason contains a programmatic identifier indicating the reason for the condition's last transition.
                        Producers of specific condition types may define expected values and meanings for this field,
                        and whether the values are considered a guaranteed API.
                        The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: |-
                        type of condition in CamelCase or in foo.example.com/CamelCase.
                        ---
                        Many .condition.type values are consistent across resources like Available, but because arbitrary conditions can be
                        useful (see .node.status.conditions), the ability to deconflict is important.
                        The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              teleportResourceID:
                format: int64
                type: integer
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: null
  storedVersions: null
