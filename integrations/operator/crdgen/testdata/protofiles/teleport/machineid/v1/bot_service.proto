// Copyright 2023 Gravitational, Inc
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

package teleport.machineid.v1;

import "google/protobuf/empty.proto";
import "google/protobuf/field_mask.proto";
import "teleport/machineid/v1/bot.proto";

option go_package = "github.com/gravitational/teleport/api/gen/proto/go/teleport/machineid/v1;machineidv1";

// BotService provides methods to manage Teleport Bots
service BotService {
  // GetBot is used to query a Bot resource by its name.
  //
  // This will return a NotFound error if the specified Bot does not exist.
  rpc GetBot(GetBotRequest) returns (Bot);
  // ListBots is used to query Bots.
  //
  // Follows the pagination semantics of
  // https://cloud.google.com/apis/design/standard_methods#list.
  rpc ListBots(ListBotsRequest) returns (ListBotsResponse);
  // CreateBot is used to create a Bot.
  //
  // This will return an error if a Bot by that name already exists.
  rpc CreateBot(CreateBotRequest) returns (Bot);
  // UpdateBot is used to modify an existing Bot.
  rpc UpdateBot(UpdateBotRequest) returns (Bot);
  // UpsertBot is used to create or replace an existing Bot.
  //
  // Prefer using CreateBot and UpdateBot.
  rpc UpsertBot(UpsertBotRequest) returns (Bot);
  // DeleteBot is used to delete a specific Bot.
  //
  // This will return a NotFound error if the specified Bot does not exist.
  rpc DeleteBot(DeleteBotRequest) returns (google.protobuf.Empty);
}

// The request for CreateBot.
message CreateBotRequest {
  // The bot to create.
  Bot bot = 1;
}

// The request for GetBot.
message GetBotRequest {
  // The name of the bot to fetch.
  string bot_name = 1;
}

// The request for ListBots.
message ListBotsRequest {
  // The maximum number of items to return.
  // The server may impose a different page size at its discretion.
  int32 page_size = 1;
  // The next_page_token value returned from a previous List request, if any.
  string page_token = 2;
}

// The response for ListBots.
message ListBotsResponse {
  // The page of Bots that matched the request.
  repeated Bot bots = 1;
  // Token to retrieve the next page of results, or empty if there are no
  // more results in the list.
  string next_page_token = 2;
}

// The request for UpdateBot.
message UpdateBotRequest {
  // The values to apply based on the update mask. The name must be specified.
  Bot bot = 1;
  // The update mask applied to a Bot.
  // Fields are masked according to their proto name.
  google.protobuf.FieldMask update_mask = 2;
}

// The request for UpsertBot.
message UpsertBotRequest {
  // The bot to create or replace.
  Bot bot = 1;
}

// The request for DeleteBot.
message DeleteBotRequest {
  // The name of the bot to delete.
  string bot_name = 1;
}
