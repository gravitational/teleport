// Copyright 2023 Gravitational, Inc
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

package teleport.machineid.v1;

import "teleport/header/v1/metadata.proto";

option go_package = "github.com/gravitational/teleport/api/gen/proto/go/teleport/machineid/v1;machineidv1";

// A Bot is a Teleport identity intended to be used by Machines. The Bot
// resource defines a Bot and configures its properties.
message Bot {
  // The kind of resource represented.
  string kind = 1;
  // Differentiates variations of the same kind. All resources should
  // contain one, even if it is never populated.
  string sub_kind = 2;
  // The version of the resource being represented.
  string version = 3;
  // Common metadata that all resources share.
  teleport.header.v1.Metadata metadata = 4;
  // The configured properties of a Bot.
  BotSpec spec = 5;
  // Fields that are set by the server as results of operations. These should
  // not be modified by users.
  BotStatus status = 6;
}

// Trait is an individual trait that will be applied to the bot user.
message Trait {
  // The name of the trait. This is what allows the trait to be queried in
  // role templates.
  string name = 1;
  // The values associated with the named trait.
  repeated string values = 2;
}

// The configured properties of a Bot.
message BotSpec {
  // The roles that the bot should be able to impersonate.
  repeated string roles = 1;
  // The traits that will be associated with the bot for the purposes of role
  // templating.
  //
  // Where multiple specified with the same name, these will be merged by the
  // server.
  repeated Trait traits = 2;
}

// Fields that are set by the server as results of operations. These should not
// be modified by users.
message BotStatus {
  reserved 2;
  reserved "role_role";

  // The name of the user associated with the bot.
  string user_name = 1;
  // The name of the role associated with the bot.
  string role_name = 3;
}
