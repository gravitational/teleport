// Copyright 2024 Gravitational, Inc
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

package teleport.kubewaitingcontainer.v1;

import "google/protobuf/empty.proto";
import "teleport/kubewaitingcontainer/v1/kubewaitingcontainer.proto";

option go_package = "github.com/gravitational/teleport/api/gen/proto/go/teleport/kubewaitingcontainer/v1;kubewaitingcontainerv1";

// KubeWaitingContainersService manages Kubernetes ephemeral
// containers that are waiting to be created until moderated
// session conditions are met.
service KubeWaitingContainersService {
  // ListKubernetesWaitingContainers returns a Kubernetes ephemeral
  // container that is waiting to be created.
  rpc ListKubernetesWaitingContainers(ListKubernetesWaitingContainersRequest) returns (ListKubernetesWaitingContainersResponse);
  // GetKubernetesWaitingContainer returns a Kubernetes ephemeral
  // container that is waiting to be created.
  rpc GetKubernetesWaitingContainer(GetKubernetesWaitingContainerRequest) returns (KubernetesWaitingContainer);
  // CreateKubernetesWaitingContainer creates a Kubernetes ephemeral
  // container that is waiting to be created.
  rpc CreateKubernetesWaitingContainer(CreateKubernetesWaitingContainerRequest) returns (KubernetesWaitingContainer);
  // DeleteKubernetesWaitingContainer deletes a Kubernetes ephemeral
  // container that is waiting to be created.
  rpc DeleteKubernetesWaitingContainer(DeleteKubernetesWaitingContainerRequest) returns (google.protobuf.Empty);
}

// ListKubernetesWaitingContainersRequest is the request for ListKubernetesWaitingContainers.
message ListKubernetesWaitingContainersRequest {
  // The maximum number of items to return.
  // The server may impose a different page size at its discretion.
  int32 page_size = 1;
  // The next_page_token value returned from a previous ListFoo request, if any.
  string page_token = 2;
}

// ListKubernetesWaitingContainersResponse is the response for ListKubernetesWaitingContainers.
message ListKubernetesWaitingContainersResponse {
  repeated KubernetesWaitingContainer waiting_containers = 1;
  // Token to retrieve the next page of results, or empty if there are no
  // more results exist.
  string next_page_token = 2;
}

// GetKubernetesWaitingContainerRequest is the request for GetKubernetesWaitingContainer.
message GetKubernetesWaitingContainerRequest {
  // username is the Teleport user that attempted to create the container
  string username = 1;
  // cluster is the Kubernetes cluster of this container
  string cluster = 2;
  // namespace is the Kubernetes namespace of this container
  string namespace = 3;
  // pod_name is the name of the parent pod
  string pod_name = 4;
  // container_name is the name of the ephemeral container
  string container_name = 5;
}

// CreateKubernetesWaitingContainerRequest is the request for CreateKubernetesWaitingContainer.
message CreateKubernetesWaitingContainerRequest {
  // waiting_container is the waiting container resource.
  KubernetesWaitingContainer waiting_container = 1;
}

// DeleteKubernetesWaitingContainerRequest is the request for DeleteKubernetesWaitingContainer.
message DeleteKubernetesWaitingContainerRequest {
  // username is the Teleport user that attempted to create the container
  string username = 1;
  // cluster is the Kubernetes cluster of this container
  string cluster = 2;
  // namespace is the Kubernetes namespace of this container
  string namespace = 3;
  // pod_name is the name of the parent pod
  string pod_name = 4;
  // container_name is the name of the ephemeral container
  string container_name = 5;
}
