// Copyright 2024 Gravitational, Inc
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

package teleport.kubewaitingcontainer.v1;

import "teleport/header/v1/metadata.proto";

option go_package = "github.com/gravitational/teleport/api/gen/proto/go/teleport/kubewaitingcontainer/v1;kubewaitingcontainerv1";

// KubernetesWaitingContainer is a Kubernetes pod that has ephemeral containers
// waiting to be created until moderated session requirements are met.
message KubernetesWaitingContainer {
  // kind is a resource kind
  string kind = 1;
  // sub_kind is an optional resource sub kind, used in some resources
  string sub_kind = 2;
  // version is the resource version. It must be specified.
  // Supported values are: `v1`.
  string version = 3;
  // metadata is resource metadata
  teleport.header.v1.Metadata metadata = 4;
  // spec is the Kubernetes waiting container spec.
  KubernetesWaitingContainerSpec spec = 5;
}

// KubernetesWaitingContainerSpec is the Kubernetes waiting ephemeral container spec.
message KubernetesWaitingContainerSpec {
  // username is the Teleport user that attempted to create the container
  string username = 1;
  // cluster is the Kubernetes cluster of this container
  string cluster = 2;
  // namespace is the Kubernetes namespace of this container
  string namespace = 3;
  // pod_name is the name of the parent pod
  string pod_name = 4;
  // container_name is the name of the ephemeral container
  string container_name = 5;
  // patch is the patch that should be applied to the parent pod
  // to create this ephemeral container
  bytes patch = 6;
  // patch_type identifies the patch model to be applied.
  string patch_type = 7;
}
