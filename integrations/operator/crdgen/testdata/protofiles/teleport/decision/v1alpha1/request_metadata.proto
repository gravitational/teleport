// Copyright 2024 Gravitational, Inc
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

package teleport.decision.v1alpha1;

option go_package = "github.com/gravitational/teleport/api/gen/proto/go/teleport/decision/v1alpha1;decisionpb";

// Metadata for evaluation requests.
message RequestMetadata {
  // FeatureAssertions is a list of DecisionFeature that the PDP (Policy
  // Decision Point) *must* implement in order to correctly evaluate the
  // decision request. Note that changes that require new features in the PDP in
  // order for it to understand a decision request are rare and should be
  // avoided if possible.
  repeated DecisionFeature feature_assertions = 1;

  // PepVersionHint is the *likely* version of the PEP that will enforce the
  // decision. Not all decision requests can guarantee that the expected PEP
  // (Policy Enforcement Point) version will actually be the version that ends
  // up enforcing the decision. Hard compatibility requirements must be enforced
  // via feature assertions so that PEPs can correctly reject decisions that
  // they cannot enforce.
  string pep_version_hint = 2;

  // DryRun indicates that the request is a dry-run if set to true. Decisions returned by
  // dry run requests are for informational/audit purposes only and must not be used to make
  // access-control decisions.
  bool dry_run = 3;

  // DryRunOptions customize the behavior of dry-run decision requests. Specification of any
  // dry run options when the dry run flag is false is an error.
  DryRunOptions dry_run_options = 4;
}

// DecisionFeature represents supported PDP (Policy Decision Point) features.
enum DecisionFeature {
  // DECISION_FEATURE_UNSPECIFIED is the default/unspecified value for
  // DecisionFeature. Asserting this feature has no effect.
  DECISION_FEATURE_UNSPECIFIED = 0;
}

// DryRunOptions customize the behavior of dry-run decision requests.
message DryRunOptions {
  // GenerateIdentity customizes a dry run by having the PDP generate an identity locally
  // rather than using a caller-provided identity derived from a cert.
  DryRunIdentity generate_identity = 1;
}

// DryRunIdentity is a dry run option that allows the caller to request a fake identity be used
// for the decision request.
message DryRunIdentity {
  // Username is the teleport username of the identity to be used.
  string username = 1;
}
