// Copyright 2024 Gravitational, Inc
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

package teleport.accessmonitoringrules.v1;

import "teleport/header/v1/metadata.proto";

option go_package = "github.com/gravitational/teleport/api/gen/proto/go/teleport/accessmonitoringrules/v1;accessmonitoringrulesv1";

// AccessMonitoringRule represents an access monitoring rule resources.
message AccessMonitoringRule {
  // metadata is the rules's metadata.
  teleport.header.v1.Metadata metadata = 1;
  // kind is a resource kind
  string kind = 2;
  // sub_kind is an optional resource sub kind, used in some resources
  string sub_kind = 3;
  // version is version
  string version = 4;
  // Spec is an AccessMonitoringRule specification
  AccessMonitoringRuleSpec spec = 5;
}

// AccessMonitoringRuleSpec is the access monitoring rule spec
message AccessMonitoringRuleSpec {
  // subjects the rule operates on, can be a resource kind or a particular resource property.
  repeated string subjects = 1;
  // states are the desired state which the monitoring rule is attempting to bring the subjects matching the condition to.
  repeated string states = 2;
  // condition is a predicate expression that operates on the specified subject resources,
  // and determines whether the subject will be moved into desired state.
  string condition = 3;
  // notification defines the plugin configuration for notifications if rule is triggered.
  Notification notification = 4;
}

// Notification contains configurations for plugin notification rules.
message Notification {
  // name is the name of the plugin to which this configuration should apply.
  string name = 1;
  // recipients is the list of recipients the plugin should notify.
  repeated string recipients = 2;
}

// CreateAccessMonitoringRuleRequest is the request for CreateAccessMonitoringRule.
message CreateAccessMonitoringRuleRequest {
  // access_monitoring_rule is the specification of the rule to be created.
  AccessMonitoringRule rule = 1;
}

// UpdateAccessMonitoringRuleRequest is the request for UpdateAccessMonitoringRule.
message UpdateAccessMonitoringRuleRequest {
  // access_monitoring_rule is the specification of the rule to be updated.
  AccessMonitoringRule rule = 1;
}

// UpsertAccessMonitoringRuleRequest is the request for UpsertAccessMonitoringRule.
message UpsertAccessMonitoringRuleRequest {
  // access_monitoring_rule is the specification of the rule to be upserted.
  AccessMonitoringRule rule = 1;
}

// GetAccessMonitoringRuleRequest is the request for GetAccessMonitoringRule.
message GetAccessMonitoringRuleRequest {
  // resource_name is the name of the rule to be returned.
  string name = 1;
}

// DeleteAccessMonitoringRuleRequest is the request for DeleteAccessMonitoringRule.
message DeleteAccessMonitoringRuleRequest {
  // resource_name is the name of the rule to be removed.
  string name = 1;
}

// ListAccessMonitoringRulesRequest is the request for ListAccessMonitoringRules.
message ListAccessMonitoringRulesRequest {
  // page_size is the maximum number of items to return.
  // The server may impose a different page size at its discretion.
  int64 page_size = 1;
  // page_token is the next_page_token value returned from a previous List request, if any.
  string page_token = 2;
}

// ListAccessMonitoringRulesWithFilterRequest is the request for ListAccessMonitoringRulesWithFilter.
message ListAccessMonitoringRulesWithFilterRequest {
  // page_size is the maximum number of items to return.
  // The server may impose a different page size at its discretion.
  int64 page_size = 1;
  // page_token is the next_page_token value returned from a previous List request, if any.
  string page_token = 2;
  // subjects are the subjects the access monitoring rules must have. This field is optional.
  repeated string subjects = 3;
  // notification_name is the value of the notification name field the rule must have. This field is optional.
  string notification_name = 4;
}

// ListAccessMonitoringRulesResponse is the response from ListAccessMonitoringRules.
message ListAccessMonitoringRulesResponse {
  // The page of AccessMonitoringRule that matched the request.
  repeated AccessMonitoringRule rules = 1;
  // Token to retrieve the next page of results, or empty if there are no
  // more results in the list.
  string next_page_token = 2;
}

// ListAccessMonitoringRulesWithFilterResponse is the response from ListAccessMonitoringRulesWithFilter.
message ListAccessMonitoringRulesWithFilterResponse {
  // The page of AccessMonitoringRule that matched the request.
  repeated AccessMonitoringRule rules = 1;
  // Token to retrieve the next page of results, or empty if there are no
  // more results in the list.
  string next_page_token = 2;
}
