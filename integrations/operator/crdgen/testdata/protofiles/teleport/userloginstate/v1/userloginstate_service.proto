// Copyright 2023 Gravitational, Inc
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

package teleport.userloginstate.v1;

import "google/protobuf/empty.proto";
import "teleport/userloginstate/v1/userloginstate.proto";

option go_package = "github.com/gravitational/teleport/api/gen/proto/go/teleport/userloginstate/v1;userloginstatev1";

// UserLoginStateService provides CRUD methods for user login state resources.
service UserLoginStateService {
  // GetUserLoginStates returns a list of all user login states.
  rpc GetUserLoginStates(GetUserLoginStatesRequest) returns (GetUserLoginStatesResponse);
  // GetUserLoginState returns the specified user login state resource.
  rpc GetUserLoginState(GetUserLoginStateRequest) returns (UserLoginState);
  // UpsertUserLoginState creates or updates a user login state resource.
  rpc UpsertUserLoginState(UpsertUserLoginStateRequest) returns (UserLoginState);
  // DeleteUserLoginState hard deletes the specified user login state resource.
  rpc DeleteUserLoginState(DeleteUserLoginStateRequest) returns (google.protobuf.Empty);
  // DeleteAllUserLoginStates hard deletes all user login states.
  rpc DeleteAllUserLoginStates(DeleteAllUserLoginStatesRequest) returns (google.protobuf.Empty);
}

// GetUserLoginStatesRequest is the request for getting all user login states.
message GetUserLoginStatesRequest {}

// GetUserLoginStatesResponse is the response for getting all user login states.
message GetUserLoginStatesResponse {
  // user_login_states is the list of user login states.
  repeated UserLoginState user_login_states = 1;
}

// GetUserLoginStateRequest is the request for retrieving a user login state.
message GetUserLoginStateRequest {
  // name is the name of the user login state to retrieve.
  string name = 1;
}

// UpsertUserLoginStateRequest is the request for upserting a user login state.
message UpsertUserLoginStateRequest {
  // user_login_state is the user login state to upsert.
  UserLoginState user_login_state = 1;
}

// DeleteUserLoginStateRequest is the request for deleting a user login state.
message DeleteUserLoginStateRequest {
  // name is the name of the user login state to delete.
  string name = 1;
}

// DeleteAllUserLoginStatesRequest is the request for deleting all user login states.
message DeleteAllUserLoginStatesRequest {}
