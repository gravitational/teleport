// Copyright 2024 Gravitational, Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

package teleport.scim.v1;

import "google/protobuf/empty.proto";
import "google/protobuf/struct.proto";
import "google/protobuf/timestamp.proto";

option go_package = "github.com/gravitational/teleport/api/gen/proto/go/teleport/scim/v1;scimv1";

// SCIMService implements a SCIM gateway for external IDPs for user provisioning
service SCIMService {
  // List fetches all (or a subset of all) resources resources of a given type
  rpc ListSCIMResources(ListSCIMResourcesRequest) returns (ResourceList);

  // GetSCIMResource fetches a single SCIM resource from the server by name
  rpc GetSCIMResource(GetSCIMResourceRequest) returns (Resource);

  // CreateSCIResource creates a new SCIM resource based on a supplied
  // resource description
  rpc CreateSCIMResource(CreateSCIMResourceRequest) returns (Resource);

  // UpdateResource handles a request to update a resource, returning a
  // representation of the updated resource
  rpc UpdateSCIMResource(UpdateSCIMResourceRequest) returns (Resource);

  // DeleteSCIMResource deletes a SCIM-managed resource
  rpc DeleteSCIMResource(DeleteSCIMResourceRequest) returns (google.protobuf.Empty);
}

// ListSCIMResourcesRequest represents a request to fetch multiple resources
message ListSCIMResourcesRequest {
  // Target describes the set of requested by the client, vy integration and
  // resource type.
  RequestTarget target = 1;

  // Page is an optional request to retrieve a page of results. Returns all
  // appropriate results if not set.
  Page page = 2;

  // Filter is an optional filter to apply to any retrieved results.
  string filter = 3;
}

// GetSCIMResourceRequest describes a request to fetch a specific resource
message GetSCIMResourceRequest {
  // Target is the owner, type and ID if the resource targeted by the request.
  RequestTarget target = 1;
}

// CreateSCIMResourceRequest contains a request for the SCIM server to create a
// new resource
message CreateSCIMResourceRequest {
  // Target is the owner & type of the resource targeted by the request.
  RequestTarget target = 1;

  // Resource describes the resource to be created
  Resource resource = 2;
}

// UpdateSCIMResourceRequest describes an update to a given resource
message UpdateSCIMResourceRequest {
  // Target is the owner, type and ID if the resource targeted by the request.
  RequestTarget target = 1;

  // Resource is a representation of the updated resource that the server needs
  // to conform with
  Resource resource = 2;
}

// DeleteSCIMResourceRequest describes a request to delete a SCIM-mamanged
// resource
message DeleteSCIMResourceRequest {
  // Target is the owner, type and ID if the resource targeted by the request.
  RequestTarget target = 1;
}

// Resource represents an arbitrary SCIM resource, as per RFC7643
// Section 3.1.
//
// See https://datatracker.ietf.org/doc/html/rfc7643#section-3.1
message Resource {
  repeated string schemas = 1;
  string id = 2;
  string external_id = 3;
  Meta meta = 4;
  google.protobuf.Struct attributes = 5;
}

// Meta holds resource metadata as per RFC7643 Section 3.1.
//
// See https://datatracker.ietf.org/doc/html/rfc7643#section-3.1
message Meta {
  string resource_type = 1;
  google.protobuf.Timestamp created = 2;
  google.protobuf.Timestamp modified = 3;
  string location = 4;
  string version = 5;
}

// ResourceList encapsulates a list of resources as per RFC7644
// Section 3.4.2
//
// See https://datatracker.ietf.org/doc/html/rfc7644#section-3.4.2
message ResourceList {
  int32 total_results = 1;
  int32 start_index = 2;
  int32 items_per_page = 3;
  repeated Resource resources = 4;
}

// RequestTarget describes the target resource set of a given request. Common to
// all request types.
message RequestTarget {
  // Authorization is the contents of the HTTP Authorization header supplied by
  // the SCIM client, used to authenticate the request against the targeted
  // interation.
  string authorization = 1;

  // PluginID is the name of the integration to interact with
  string plugin_id = 2;

  // ResourceType is the name of the type of resource to interact with.
  // Expecting either "User" or "Group"
  string resource_type = 3;

  // ResourceID is the name of a specific resource to interact with. If blank,
  // treat the request as a bulk query
  string resource_id = 4;
}

// Page represents an optional range to set in GET request
message Page {
  uint64 start_index = 1;
  uint64 count = 2;
}
