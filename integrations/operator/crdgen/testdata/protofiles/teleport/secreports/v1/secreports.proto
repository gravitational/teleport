// Copyright 2023 Gravitational, Inc
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

package teleport.secreports.v1;

import "teleport/header/v1/resourceheader.proto";

option go_package = "github.com/gravitational/teleport/api/gen/proto/go/teleport/secreports/v1;secreportsv1";

// AuditQuery is audit query resource.
message AuditQuery {
  // header is the header for //the resource.
  teleport.header.v1.ResourceHeader header = 1;
  // spec is audit query spec.
  AuditQuerySpec spec = 2;
}

// AuditQuerySpec is audit query spec.
message AuditQuerySpec {
  // name is the name of the audit query.
  string name = 1;
  // title is the title of the audit query.
  string title = 2;
  // query is the SQL Query for the audit query.
  string query = 3;
  // description is the description of the audit query.
  string description = 4;
}

// Report is security report resource.
message Report {
  // header is the header for the resource.
  teleport.header.v1.ResourceHeader header = 1;
  // spec is the security report spec.
  ReportSpec spec = 2;
}

// ReportSpec is security report spec.
message ReportSpec {
  // name is the name of the security report.
  string name = 1;
  // title is the title of the security report.
  string description = 2;
  // description is the description of the security report
  repeated AuditQuerySpec audit_queries = 3;
  // title is the title of the security report.
  string title = 4;
  // version is the version of the security report.
  string version = 5;
}

// ReportState is security report state resource.
message ReportState {
  // header is the header for the resource.
  teleport.header.v1.ResourceHeader header = 1;
  // spec is the security report state spec.
  ReportStateSpec spec = 2;
}

// ReportStateSpec is security report state spec.
message ReportStateSpec {
  // state is the state of the security report.
  string state = 1;
  // updated_at is the time when the security report state was updated.
  string updated_at = 2;
}
