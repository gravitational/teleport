// Copyright 2023 Gravitational, Inc
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

package teleport.discoveryconfig.v1;

import "google/protobuf/empty.proto";
import "teleport/discoveryconfig/v1/discoveryconfig.proto";

option go_package = "github.com/gravitational/teleport/api/gen/proto/go/teleport/discoveryconfig/v1;discoveryconfigv1";

// DiscoveryConfigService provides methods to manage Discovery Configs.
//
// Each Discovery Config has a set of matchers and a DiscoveryGroup.
// DiscoveryServices also have a DiscoveryGroup which will be used to load all the matchers from
// all the DiscoveryConfigs that have the same Group.
service DiscoveryConfigService {
  // ListDiscoveryConfigs returns a paginated list of Discovery Config resources.
  rpc ListDiscoveryConfigs(ListDiscoveryConfigsRequest) returns (ListDiscoveryConfigsResponse);

  // GetDiscoveryConfig returns the specified DiscoveryConfig resource.
  rpc GetDiscoveryConfig(GetDiscoveryConfigRequest) returns (DiscoveryConfig);

  // CreateDiscoveryConfig creates a new DiscoveryConfig resource.
  rpc CreateDiscoveryConfig(CreateDiscoveryConfigRequest) returns (DiscoveryConfig);

  // UpdateDiscoveryConfig updates an existing DiscoveryConfig resource.
  rpc UpdateDiscoveryConfig(UpdateDiscoveryConfigRequest) returns (DiscoveryConfig);

  // UpsertDiscoveryConfig creates or updates a DiscoveryConfig resource.
  rpc UpsertDiscoveryConfig(UpsertDiscoveryConfigRequest) returns (DiscoveryConfig);

  // DeleteDiscoveryConfig removes the specified DiscoveryConfig resource.
  rpc DeleteDiscoveryConfig(DeleteDiscoveryConfigRequest) returns (google.protobuf.Empty);

  // DeleteAllDiscoveryConfigs removes all DiscoveryConfigs.
  rpc DeleteAllDiscoveryConfigs(DeleteAllDiscoveryConfigsRequest) returns (google.protobuf.Empty);

  // UpdateDiscoveryConfigStatus updates an existing DiscoveryConfig resource status object.
  rpc UpdateDiscoveryConfigStatus(UpdateDiscoveryConfigStatusRequest) returns (DiscoveryConfig);
}

// ListDiscoveryConfigsRequest is a request for a paginated list of DiscoveryConfigs.
message ListDiscoveryConfigsRequest {
  // page_size is the size of the page to request.
  int32 page_size = 1;

  // next_token is the page token.
  string next_token = 2;
}

// ListDiscoveryConfigsResponse is the response for ListDiscoveryConfigsRequest.
message ListDiscoveryConfigsResponse {
  // DiscoveryConfigs is a list of DiscoveryConfigs.
  repeated DiscoveryConfig discovery_configs = 1;
  // NextKey is the key for the next page of DiscoveryConfigs.
  string next_key = 2;
  // TotalCount is the total number of discovery_config in all pages.
  int32 total_count = 3;
}

// GetDiscoveryConfigRequest is a request for a specific DiscoveryConfig resource.
message GetDiscoveryConfigRequest {
  // Name is the name of the DiscoveryConfig to be requested.
  string name = 1;
}

// CreateDiscoveryConfigRequest is the request to create the provided DiscoveryConfig.
message CreateDiscoveryConfigRequest {
  // DiscoveryConfig is the DiscoveryConfig to be created.
  DiscoveryConfig discovery_config = 1;
}

// UpdateDiscoveryConfigRequest is the request to update the provided DiscoveryConfig.
message UpdateDiscoveryConfigRequest {
  // DiscoveryConfig is the DiscoveryConfig to be updated.
  DiscoveryConfig discovery_config = 1;
}

// UpsertDiscoveryConfigRequest is the request to upsert the provided DiscoveryConfig.
message UpsertDiscoveryConfigRequest {
  // DiscoveryConfig is the DiscoveryConfig to be upserted.
  DiscoveryConfig discovery_config = 1;
}

// DeleteDiscoveryConfigRequest is a request for deleting a specific DiscoveryConfig resource.
message DeleteDiscoveryConfigRequest {
  // Name is the name of the DiscoveryConfig to be deleted.
  string name = 1;
}

// DeleteAllDiscoveryConfigsRequest is the request for deleting all DiscoveryConfigs.
message DeleteAllDiscoveryConfigsRequest {}

// UpdateDiscoveryConfigStatusRequest is the request to update the status field of the provided
// Discovery Config.
message UpdateDiscoveryConfigStatusRequest {
  // Name is the name of the DiscoveryConfig to receive the status update.
  string name = 1;
  // status is the status payload to be persisted.
  DiscoveryConfigStatus status = 2;
}
