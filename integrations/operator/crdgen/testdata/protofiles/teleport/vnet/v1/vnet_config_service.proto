// Copyright 2024 Gravitational, Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

package teleport.vnet.v1;

import "google/protobuf/empty.proto";
import "teleport/vnet/v1/vnet_config.proto";

option go_package = "github.com/gravitational/teleport/api/gen/proto/go/teleport/vnet/v1;vnet";

// VnetConfigService provides an API to manage the singleton VnetConfig.
service VnetConfigService {
  // GetVnetConfig returns the specified VnetConfig.
  rpc GetVnetConfig(GetVnetConfigRequest) returns (VnetConfig);

  // CreateVnetConfig creates a new VnetConfig.
  rpc CreateVnetConfig(CreateVnetConfigRequest) returns (VnetConfig);

  // UpdateVnetConfig updates an existing VnetConfig.
  rpc UpdateVnetConfig(UpdateVnetConfigRequest) returns (VnetConfig);

  // UpsertVnetConfig creates a new VnetConfig or replaces an existing VnetConfig.
  rpc UpsertVnetConfig(UpsertVnetConfigRequest) returns (VnetConfig);

  // DeleteVnetConfig hard deletes the specified VnetConfig.
  rpc DeleteVnetConfig(DeleteVnetConfigRequest) returns (google.protobuf.Empty);
}

// Request for GetVnetConfig.
message GetVnetConfigRequest {}

// Request for CreateVnetConfig.
message CreateVnetConfigRequest {
  // The VnetConfig resource to create.
  VnetConfig vnet_config = 1;
}

// Request for UpdateVnetConfig.
message UpdateVnetConfigRequest {
  // The VnetConfig resource to create.
  VnetConfig vnet_config = 1;
}

// Request for UpsertVnetConfig.
message UpsertVnetConfigRequest {
  // The VnetConfig resource to create.
  VnetConfig vnet_config = 1;
}

// Request for DeleteVnetConfig.
message DeleteVnetConfigRequest {}
