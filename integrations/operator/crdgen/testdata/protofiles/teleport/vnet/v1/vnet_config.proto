// Copyright 2024 Gravitational, Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

package teleport.vnet.v1;

import "teleport/header/v1/metadata.proto";

option go_package = "github.com/gravitational/teleport/api/gen/proto/go/teleport/vnet/v1;vnet";

// VnetConfig is a resource that holds configuration parameters for Teleport VNet.
message VnetConfig {
  string kind = 1;
  string sub_kind = 2;
  string version = 3;
  teleport.header.v1.Metadata metadata = 4;

  VnetConfigSpec spec = 5;
}

// VnetConfigSpec defines configuration parameters for VNet.
message VnetConfigSpec {
  // Ipv4CidrRange defines the IPv4 CIDR range that all IPv4 addresses for VNet
  // apps in this cluster will be assigned from. The default is "100.64.0.0/10".
  string ipv4_cidr_range = 1;
  // CustomDnsZones defines a list of DNS zones that VNet should resolve requests for in addition to the
  // cluster's public proxy address.
  repeated CustomDNSZone custom_dns_zones = 2;
}

// CustomDNSZone defines parameters for custom DNS zones.
message CustomDNSZone {
  // Suffix is the hostname suffix that defines this zone.
  string suffix = 1;
}
