// Copyright 2023 Gravitational, Inc
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

package teleport.externalauditstorage.v1;

import "google/protobuf/empty.proto";
import "teleport/externalauditstorage/v1/externalauditstorage.proto";

option go_package = "github.com/gravitational/teleport/api/gen/proto/go/teleport/externalauditstorage/v1;externalauditstoragev1";

// ExternalAuditStorageService provides methods to manage External Audit Storage.
//
// The service supports singleton "draft" and "cluster" configurations, allowing
// us to store state for an in-progress configuring and to test the connection
// before enabling the feature in the cluster.
//
// After creating and testing a draft configuration call
// PromoteToClusterExternalAuditStorage, which will clone the existing draft
// ExternalAuditStorage into a new resource and upsert it as the new cluster
// ExternalAuditStorage.
// The promoted cluster resource can't be mutated, it can only be deleted or
// replaced by promoting a new draft.
service ExternalAuditStorageService {
  // GetDraftExternalAuditStorage returns the draft external audit storage configuration resource.
  rpc GetDraftExternalAuditStorage(GetDraftExternalAuditStorageRequest) returns (GetDraftExternalAuditStorageResponse);

  // CreateDraftExternalAuditStorage creates a draft External Audit Storage
  // resource if one does not already exist.
  rpc CreateDraftExternalAuditStorage(CreateDraftExternalAuditStorageRequest) returns (CreateDraftExternalAuditStorageResponse);

  // UpsertDraftExternalAuditStorage upserts a draft External Audit Storage resource.
  rpc UpsertDraftExternalAuditStorage(UpsertDraftExternalAuditStorageRequest) returns (UpsertDraftExternalAuditStorageResponse);

  // DeleteDraftExternalAuditStorage removes draft External Audit Storage resource.
  rpc DeleteDraftExternalAuditStorage(DeleteDraftExternalAuditStorageRequest) returns (google.protobuf.Empty);

  // PromoteToClusterExternalAuditStorage promotes the current draft External
  // Audit Storage configuration to be used in the cluster.
  // This method causes the Teleport Auth service to reload.
  rpc PromoteToClusterExternalAuditStorage(PromoteToClusterExternalAuditStorageRequest) returns (PromoteToClusterExternalAuditStorageResponse);

  // GetClusterExternalAuditStorage gets cluster external audit storage.
  rpc GetClusterExternalAuditStorage(GetClusterExternalAuditStorageRequest) returns (GetClusterExternalAuditStorageResponse);

  // DisableClusterExternalAuditStorage disables the external audit storage feature.
  // This method causes the Teleport Auth service to reload.
  rpc DisableClusterExternalAuditStorage(DisableClusterExternalAuditStorageRequest) returns (google.protobuf.Empty);

  // GenerateDraftExternalAuditStorage generates a new external audit storage
  // resource with randomized resource names and upserts it as the current
  // draft.
  rpc GenerateDraftExternalAuditStorage(GenerateDraftExternalAuditStorageRequest) returns (GenerateDraftExternalAuditStorageResponse);

  // TestDraftExternalAuditStorageBuckets tests the connection to the current draft buckets.
  rpc TestDraftExternalAuditStorageBuckets(TestDraftExternalAuditStorageBucketsRequest) returns (TestDraftExternalAuditStorageBucketsResponse);

  // TestDraftExternalAuditStorageGlue tests the configuration to the current draft glue table and database.
  rpc TestDraftExternalAuditStorageGlue(TestDraftExternalAuditStorageGlueRequest) returns (TestDraftExternalAuditStorageGlueResponse);

  // TestDraftExternalAuditStorageAthena tests the configuration to the current draft athena.
  rpc TestDraftExternalAuditStorageAthena(TestDraftExternalAuditStorageAthenaRequest) returns (TestDraftExternalAuditStorageAthenaResponse);
}

// GetDraftExternalAuditStorageRequest is a request to get the draft external
// audit storage configuration.
message GetDraftExternalAuditStorageRequest {}

// GetDraftExternalAuditStorageResponse is a response to getting the draft
// external audit storage configuration.
message GetDraftExternalAuditStorageResponse {
  // ExternalAuditStorage is the current draft ExternalAuditStorage.
  ExternalAuditStorage external_audit_storage = 1;
}

// CreateDraftExternalAuditStorageRequest is a request to create the provided
// draft external audit storage configuration if one does not already exist.
message CreateDraftExternalAuditStorageRequest {
  // ExternalAuditStorage is the ExternalAuditStorage to be created.
  ExternalAuditStorage external_audit_storage = 1;
}

// CreateDraftExternalAuditStorageResponse is a response to creating the draft
// external audit storage configuration.
message CreateDraftExternalAuditStorageResponse {
  // ExternalAuditStorage is the ExternalAuditStorage that was created.
  ExternalAuditStorage external_audit_storage = 1;
}

// UpsertDraftExternalAuditStorageRequest is a request to upsert the provided
// draft external audit storage configuration.
message UpsertDraftExternalAuditStorageRequest {
  // ExternalAuditStorage is the ExternalAuditStorage to be upserted.
  ExternalAuditStorage external_audit_storage = 1;
}

// UpsertDraftExternalAuditStorageResponse is a response to upserting the draft
// external audit storage configuration.
message UpsertDraftExternalAuditStorageResponse {
  // ExternalAuditStorage is the ExternalAuditStorage that was upserted.
  ExternalAuditStorage external_audit_storage = 1;
}

// DeleteDraftExternalAuditStorageRequest is a request to delete a draft External
// Audit Storage configuration.
message DeleteDraftExternalAuditStorageRequest {}

// PromoteToClusterExternalAuditStorageRequest is a request to promote the current
// draft to cluster external audit storage.
message PromoteToClusterExternalAuditStorageRequest {}

// PromoteToClusterExternalAuditStorageResponse is a response of promote the
// current draft to cluster external audit storage.
message PromoteToClusterExternalAuditStorageResponse {
  // ClusterExternalAuditStorage is the ExternalAuditStorage will be used in cluster.
  ExternalAuditStorage cluster_external_audit_storage = 1;
}

// GetClusterExternalAuditStorageRequest is a request to get an cluster External
// Audit Storage configuration.
message GetClusterExternalAuditStorageRequest {}

// GetClusterExternalAuditStorageResponse is a response of getting an cluster
// external audit storage configuration.
message GetClusterExternalAuditStorageResponse {
  // ClusterExternalAuditStorage contains name of external audit storage.
  ExternalAuditStorage cluster_external_audit_storage = 1;
}

// DisableClusterExternalAuditStorageRequest is a request for disabling cluster
// external audit storage.
message DisableClusterExternalAuditStorageRequest {}

// GenerateDraftExternalAuditStorageRequest is a request for
// GenerateDraftExternalAuditStorage.
message GenerateDraftExternalAuditStorageRequest {
  // IntegrationName is name of existing AWS OIDC integration used to get AWS
  // credentials.
  string integration_name = 1;
  // Region is the AWS region where infrastructure is hosted.
  string region = 2;
}

// GenerateDraftExternalAuditStorageResponse is a response for
// GenerateDraftExternalAuditStorage.
message GenerateDraftExternalAuditStorageResponse {
  // ExternalAuditStorage is the generated ExternalAuditStorage that has been set as
  // the current draft.
  ExternalAuditStorage external_audit_storage = 1;
}

// TestDraftExternalAuditStorageBucketsRequest is a request to test the connection of
// the current draft external audit storage configuration buckets.
message TestDraftExternalAuditStorageBucketsRequest {}

// TestDraftExternalAuditStorageBucketsResponse is a response from testing the connection
// of the current draft external audit storage configuration buckets.
message TestDraftExternalAuditStorageBucketsResponse {}

// TestDraftExternalAuditStorageGlueRequest is a request to test the connection of
// the current draft external audit storage configuration glue table.
message TestDraftExternalAuditStorageGlueRequest {}

// TestDraftExternalAuditStorageGlueResponse is a response from testing the connection
// of the current draft external audit storage configuration glue table.
message TestDraftExternalAuditStorageGlueResponse {}

// TestDraftExternalAuditStorageAthenaRequest is a request to test the connection of
// the current draft external audit storage configuration athena.
message TestDraftExternalAuditStorageAthenaRequest {}

// TestDraftExternalAuditStorageAthenaResponse is a response from testing the connection
// of the current draft external audit storage configuration athena.
message TestDraftExternalAuditStorageAthenaResponse {}
