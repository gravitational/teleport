// Copyright 2022 Gravitational, Inc
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

package teleport.users.v1;

import "google/protobuf/empty.proto";
import "teleport/legacy/types/types.proto";

option go_package = "github.com/gravitational/teleport/api/gen/proto/go/teleport/users/v1;usersv1";

// UsersService provides methods to manage Teleport users.
service UsersService {
  // GetUser retrieves a user by name or looks up the current user if requested.
  rpc GetUser(GetUserRequest) returns (GetUserResponse);
  // ListUsers gets all existing users.
  rpc ListUsers(ListUsersRequest) returns (ListUsersResponse);
  // CreateUser creates a user if one does not already exist.
  rpc CreateUser(CreateUserRequest) returns (CreateUserResponse);
  // UpdateUser updates an existing user.
  rpc UpdateUser(UpdateUserRequest) returns (UpdateUserResponse);
  // UpsertUser creates a new user or forcefully updates an existing user.
  rpc UpsertUser(UpsertUserRequest) returns (UpsertUserResponse);
  // DeleteUser removes an existing user by name.
  rpc DeleteUser(DeleteUserRequest) returns (google.protobuf.Empty);
}

// Request for GetUser.
message GetUserRequest {
  // Name of the user to retrieve, this take priority over current_user.
  string name = 1;

  // Whether to return the current user. If the name is provided
  // then this field is ignored.
  bool current_user = 2;

  // Specifies whether to load associated secrets(password, mfa devices, etc.).
  bool with_secrets = 3;
}

// Response for GetUser.
message GetUserResponse {
  // The user matching the request filters.
  types.UserV2 user = 1;
}

// Request for ListUsers.
//
// Follows the pagination semantics of
// https://cloud.google.com/apis/design/standard_methods#list.
message ListUsersRequest {
  // The maximum number of items to return.
  // The server may impose a different page size at its discretion.
  int32 page_size = 1;

  // The next_page_token value returned from a previous List request, if any.
  string page_token = 2;

  // Specifies whether to load associated secrets(password, mfa devices, etc.).
  bool with_secrets = 3;

  // Filter matches users.
  types.UserFilter filter = 4;
}

// Response for ListUsers.
message ListUsersResponse {
  // Users that matched the search.
  repeated types.UserV2 users = 1;

  // Token to retrieve the next page of results, or empty if there are no
  // more results in the list.
  string next_page_token = 2;
}

// Request for CreateUser.
message CreateUserRequest {
  // The user resource to create.
  types.UserV2 user = 1;
}

// Response for CreateUser.
message CreateUserResponse {
  // The created user with any server side generated fields populated.
  types.UserV2 user = 1;
}

// Request for UpdateUser.
message UpdateUserRequest {
  // The user resource to update.
  types.UserV2 user = 2;
}

// Response for UpdateUser.
message UpdateUserResponse {
  // The updated user with any server side generated fields populated.
  types.UserV2 user = 1;
}

// Request for UpsertUser.
message UpsertUserRequest {
  // The user resource to upsert.
  types.UserV2 user = 2;
}

// Response for UpsertUser.
message UpsertUserResponse {
  // The upserted user with any server side generated fields populated.
  types.UserV2 user = 1;
}

// Request for DeleteUser.
message DeleteUserRequest {
  // Name of the user to remove.
  string name = 1;
}
