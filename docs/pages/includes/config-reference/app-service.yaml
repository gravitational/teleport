app_service:
    # Turns 'app' role on. Default is 'no'
    enabled: yes
    # Teleport contains a small debug app that can be used to make sure the
    # Application Service is working correctly. The app outputs JWTs so it can
    # be useful when extending your application.
    debug_app: true

    # Matchers for dynamic application resources
    #
    # All application resources have a predefined "teleport.dev/origin" label with
    # one of the following values:
    # "dynamic": application resources created via an Auth Service API 
    # client like `tctl` or the Teleport Terraform provider
    # "config": application resources defined in the "apps" array below
    resources:
      - labels:
          "*": "*"

    apps:
    - name: "kubernetes-dashboard"
      # Optional: For access to cloud provider APIs, specify the cloud
      # provider. Allowed values are "AWS", "Azure", and "GCP".
      cloud: ""
      # URI of Application. For TCP applications
      # use tcp, ex: tcp://localhost:5432.
      uri: "http://10.0.1.27:8000"
      # Optionally skip TLS verification. default false
      # insecure_skip_verify: true
      # Optional Public Addr
      public_addr: "example.com"
      # Optional Label: These can be used in combination with RBAC rules
      # to limit access to applications
      labels:
         env: "prod"
      # Optional Dynamic Labels
      commands:
      - name: "os"
        command: ["/usr/bin/uname"]
        period: "5s"
      ## Optional list of rewrite rules to apply to requests and responses
      # rewrite:
        ## Optional simple rewriting of Location header
        ## Rewrite the "Location" header on redirect responses replacing the
        ## host with the public address of this application.
        # redirect:
        #   - "localhost"
        #   - "jenkins.internal.dev"
        ## Optional list of extra headers to inject in to requests.
        # headers:
        #   For example:
        #   - "Host: jenkins.example.com"
        ## Optional rewrite to remove parts of the JWT token.
        ## Can be one of three options:
        ## - roles-and-traits: include both roles and traits in the JWT token
        ## - roles: include only roles in the JWT token
        ## - traits: include only traits in the JWT token
        ## - none: include neither roles nor traits in the JWT token
        ## Default: roles-and-traits
        # jwt_claims: roles-and-traits

