// Copyright 2025 Gravitational, Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: teleport/legacy/client/proto/inventory.proto

// buf:lint:ignore PACKAGE_DIRECTORY_MATCH
// buf:lint:ignore PACKAGE_VERSION_SUFFIX

package proto

import (
	types "github.com/gravitational/teleport/api/types"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// LabelUpdateKind is the type of service to update labels for.
// buf:lint:ignore ENUM_VALUE_PREFIX
// buf:lint:ignore ENUM_VALUE_UPPER_SNAKE_CASE
type LabelUpdateKind int32

const (
	// SSHServer is a label update for an SSH server.
	// buf:lint:ignore ENUM_ZERO_VALUE_SUFFIX
	LabelUpdateKind_SSHServer LabelUpdateKind = 0
	// SSHServerCloudLabels is a label update for an SSH server coming from a
	// cloud provider.
	LabelUpdateKind_SSHServerCloudLabels LabelUpdateKind = 1
)

// Enum value maps for LabelUpdateKind.
var (
	LabelUpdateKind_name = map[int32]string{
		0: "SSHServer",
		1: "SSHServerCloudLabels",
	}
	LabelUpdateKind_value = map[string]int32{
		"SSHServer":            0,
		"SSHServerCloudLabels": 1,
	}
)

func (x LabelUpdateKind) Enum() *LabelUpdateKind {
	p := new(LabelUpdateKind)
	*p = x
	return p
}

func (x LabelUpdateKind) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (LabelUpdateKind) Descriptor() protoreflect.EnumDescriptor {
	return file_teleport_legacy_client_proto_inventory_proto_enumTypes[0].Descriptor()
}

func (LabelUpdateKind) Type() protoreflect.EnumType {
	return &file_teleport_legacy_client_proto_inventory_proto_enumTypes[0]
}

func (x LabelUpdateKind) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use LabelUpdateKind.Descriptor instead.
func (LabelUpdateKind) EnumDescriptor() ([]byte, []int) {
	return file_teleport_legacy_client_proto_inventory_proto_rawDescGZIP(), []int{0}
}

// UpstreamInventoryOneOf is the upstream message for the inventory control stream,
// sent from teleport instances to the auth server.
type UpstreamInventoryOneOf struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// buf:lint:ignore ONEOF_LOWER_SNAKE_CASE
	//
	// Types that are valid to be assigned to Msg:
	//
	//	*UpstreamInventoryOneOf_Hello
	//	*UpstreamInventoryOneOf_Heartbeat
	//	*UpstreamInventoryOneOf_Pong
	//	*UpstreamInventoryOneOf_AgentMetadata
	//	*UpstreamInventoryOneOf_Goodbye
	Msg           isUpstreamInventoryOneOf_Msg `protobuf_oneof:"Msg"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpstreamInventoryOneOf) Reset() {
	*x = UpstreamInventoryOneOf{}
	mi := &file_teleport_legacy_client_proto_inventory_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpstreamInventoryOneOf) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpstreamInventoryOneOf) ProtoMessage() {}

func (x *UpstreamInventoryOneOf) ProtoReflect() protoreflect.Message {
	mi := &file_teleport_legacy_client_proto_inventory_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpstreamInventoryOneOf.ProtoReflect.Descriptor instead.
func (*UpstreamInventoryOneOf) Descriptor() ([]byte, []int) {
	return file_teleport_legacy_client_proto_inventory_proto_rawDescGZIP(), []int{0}
}

func (x *UpstreamInventoryOneOf) GetMsg() isUpstreamInventoryOneOf_Msg {
	if x != nil {
		return x.Msg
	}
	return nil
}

func (x *UpstreamInventoryOneOf) GetHello() *UpstreamInventoryHello {
	if x != nil {
		if x, ok := x.Msg.(*UpstreamInventoryOneOf_Hello); ok {
			return x.Hello
		}
	}
	return nil
}

func (x *UpstreamInventoryOneOf) GetHeartbeat() *InventoryHeartbeat {
	if x != nil {
		if x, ok := x.Msg.(*UpstreamInventoryOneOf_Heartbeat); ok {
			return x.Heartbeat
		}
	}
	return nil
}

func (x *UpstreamInventoryOneOf) GetPong() *UpstreamInventoryPong {
	if x != nil {
		if x, ok := x.Msg.(*UpstreamInventoryOneOf_Pong); ok {
			return x.Pong
		}
	}
	return nil
}

func (x *UpstreamInventoryOneOf) GetAgentMetadata() *UpstreamInventoryAgentMetadata {
	if x != nil {
		if x, ok := x.Msg.(*UpstreamInventoryOneOf_AgentMetadata); ok {
			return x.AgentMetadata
		}
	}
	return nil
}

func (x *UpstreamInventoryOneOf) GetGoodbye() *UpstreamInventoryGoodbye {
	if x != nil {
		if x, ok := x.Msg.(*UpstreamInventoryOneOf_Goodbye); ok {
			return x.Goodbye
		}
	}
	return nil
}

type isUpstreamInventoryOneOf_Msg interface {
	isUpstreamInventoryOneOf_Msg()
}

type UpstreamInventoryOneOf_Hello struct {
	// Hello is the first message sent up the control stream.
	Hello *UpstreamInventoryHello `protobuf:"bytes,1,opt,name=Hello,proto3,oneof"`
}

type UpstreamInventoryOneOf_Heartbeat struct {
	// Heartbeat advertises instance status/liveness.
	Heartbeat *InventoryHeartbeat `protobuf:"bytes,2,opt,name=Heartbeat,proto3,oneof"`
}

type UpstreamInventoryOneOf_Pong struct {
	// UpstreamInventoryPong is a response to a ping (used for testing/debug).
	Pong *UpstreamInventoryPong `protobuf:"bytes,3,opt,name=Pong,proto3,oneof"`
}

type UpstreamInventoryOneOf_AgentMetadata struct {
	// UpstreamInventoryAgentMetadata advertises instance metadata.
	AgentMetadata *UpstreamInventoryAgentMetadata `protobuf:"bytes,4,opt,name=AgentMetadata,proto3,oneof"`
}

type UpstreamInventoryOneOf_Goodbye struct {
	// UpstreamInventoryGoodbye advertises that the instance is terminating.
	Goodbye *UpstreamInventoryGoodbye `protobuf:"bytes,5,opt,name=Goodbye,proto3,oneof"`
}

func (*UpstreamInventoryOneOf_Hello) isUpstreamInventoryOneOf_Msg() {}

func (*UpstreamInventoryOneOf_Heartbeat) isUpstreamInventoryOneOf_Msg() {}

func (*UpstreamInventoryOneOf_Pong) isUpstreamInventoryOneOf_Msg() {}

func (*UpstreamInventoryOneOf_AgentMetadata) isUpstreamInventoryOneOf_Msg() {}

func (*UpstreamInventoryOneOf_Goodbye) isUpstreamInventoryOneOf_Msg() {}

// DownstreamInventoryOneOf is the downstream message for the inventory control stream,
// sent from auth servers to teleport instances.
type DownstreamInventoryOneOf struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// buf:lint:ignore ONEOF_LOWER_SNAKE_CASE
	//
	// Types that are valid to be assigned to Msg:
	//
	//	*DownstreamInventoryOneOf_Hello
	//	*DownstreamInventoryOneOf_Ping
	//	*DownstreamInventoryOneOf_UpdateLabels
	Msg           isDownstreamInventoryOneOf_Msg `protobuf_oneof:"Msg"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DownstreamInventoryOneOf) Reset() {
	*x = DownstreamInventoryOneOf{}
	mi := &file_teleport_legacy_client_proto_inventory_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DownstreamInventoryOneOf) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DownstreamInventoryOneOf) ProtoMessage() {}

func (x *DownstreamInventoryOneOf) ProtoReflect() protoreflect.Message {
	mi := &file_teleport_legacy_client_proto_inventory_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DownstreamInventoryOneOf.ProtoReflect.Descriptor instead.
func (*DownstreamInventoryOneOf) Descriptor() ([]byte, []int) {
	return file_teleport_legacy_client_proto_inventory_proto_rawDescGZIP(), []int{1}
}

func (x *DownstreamInventoryOneOf) GetMsg() isDownstreamInventoryOneOf_Msg {
	if x != nil {
		return x.Msg
	}
	return nil
}

func (x *DownstreamInventoryOneOf) GetHello() *DownstreamInventoryHello {
	if x != nil {
		if x, ok := x.Msg.(*DownstreamInventoryOneOf_Hello); ok {
			return x.Hello
		}
	}
	return nil
}

func (x *DownstreamInventoryOneOf) GetPing() *DownstreamInventoryPing {
	if x != nil {
		if x, ok := x.Msg.(*DownstreamInventoryOneOf_Ping); ok {
			return x.Ping
		}
	}
	return nil
}

func (x *DownstreamInventoryOneOf) GetUpdateLabels() *DownstreamInventoryUpdateLabels {
	if x != nil {
		if x, ok := x.Msg.(*DownstreamInventoryOneOf_UpdateLabels); ok {
			return x.UpdateLabels
		}
	}
	return nil
}

type isDownstreamInventoryOneOf_Msg interface {
	isDownstreamInventoryOneOf_Msg()
}

type DownstreamInventoryOneOf_Hello struct {
	// Hello is the first message sent down the control stream.
	Hello *DownstreamInventoryHello `protobuf:"bytes,1,opt,name=Hello,proto3,oneof"`
}

type DownstreamInventoryOneOf_Ping struct {
	// Ping triggers an upstream pong (used for testing/debug).
	Ping *DownstreamInventoryPing `protobuf:"bytes,2,opt,name=Ping,proto3,oneof"`
}

type DownstreamInventoryOneOf_UpdateLabels struct {
	// UpdateLabels updates the instance's labels.
	UpdateLabels *DownstreamInventoryUpdateLabels `protobuf:"bytes,3,opt,name=UpdateLabels,proto3,oneof"`
}

func (*DownstreamInventoryOneOf_Hello) isDownstreamInventoryOneOf_Msg() {}

func (*DownstreamInventoryOneOf_Ping) isDownstreamInventoryOneOf_Msg() {}

func (*DownstreamInventoryOneOf_UpdateLabels) isDownstreamInventoryOneOf_Msg() {}

// DownstreamInventoryPing is sent down the inventory control stream.
type DownstreamInventoryPing struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ID            uint64                 `protobuf:"varint,1,opt,name=ID,proto3" json:"ID,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DownstreamInventoryPing) Reset() {
	*x = DownstreamInventoryPing{}
	mi := &file_teleport_legacy_client_proto_inventory_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DownstreamInventoryPing) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DownstreamInventoryPing) ProtoMessage() {}

func (x *DownstreamInventoryPing) ProtoReflect() protoreflect.Message {
	mi := &file_teleport_legacy_client_proto_inventory_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DownstreamInventoryPing.ProtoReflect.Descriptor instead.
func (*DownstreamInventoryPing) Descriptor() ([]byte, []int) {
	return file_teleport_legacy_client_proto_inventory_proto_rawDescGZIP(), []int{2}
}

func (x *DownstreamInventoryPing) GetID() uint64 {
	if x != nil {
		return x.ID
	}
	return 0
}

// UpstreamInventoryPong is sent up the inventory control stream in response to a downstream
// ping including the system clock of the downstream.
type UpstreamInventoryPong struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	ID    uint64                 `protobuf:"varint,1,opt,name=ID,proto3" json:"ID,omitempty"`
	// SystemClock advertises the system clock of the upstream.
	SystemClock   *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=SystemClock,proto3" json:"SystemClock,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpstreamInventoryPong) Reset() {
	*x = UpstreamInventoryPong{}
	mi := &file_teleport_legacy_client_proto_inventory_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpstreamInventoryPong) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpstreamInventoryPong) ProtoMessage() {}

func (x *UpstreamInventoryPong) ProtoReflect() protoreflect.Message {
	mi := &file_teleport_legacy_client_proto_inventory_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpstreamInventoryPong.ProtoReflect.Descriptor instead.
func (*UpstreamInventoryPong) Descriptor() ([]byte, []int) {
	return file_teleport_legacy_client_proto_inventory_proto_rawDescGZIP(), []int{3}
}

func (x *UpstreamInventoryPong) GetID() uint64 {
	if x != nil {
		return x.ID
	}
	return 0
}

func (x *UpstreamInventoryPong) GetSystemClock() *timestamppb.Timestamp {
	if x != nil {
		return x.SystemClock
	}
	return nil
}

// UpstreamInventoryHello is the hello message sent up the inventory control stream.
type UpstreamInventoryHello struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Version advertises the teleport version of the instance.
	Version string `protobuf:"bytes,1,opt,name=Version,proto3" json:"Version,omitempty"`
	// ServerID advertises the server ID of the instance.
	ServerID string `protobuf:"bytes,2,opt,name=ServerID,proto3" json:"ServerID,omitempty"`
	// Services advertises the currently live services of the instance. note: this is
	// distinct from the SystemRoles associated with a certificate in that a service may
	// hold a system role that is not currently in use if it was granted that role by
	// its auth token. i.e. Services is the subset of SystemRoles that are currently
	// active.
	Services []string `protobuf:"bytes,3,rep,name=Services,proto3" json:"Services,omitempty"`
	// Hostname is the hostname associated with the instance. This value is not required or guaranteed
	// to be unique and its validity is not enforceable (i.e. join tokens do not constrain what an
	// instance can claim its hostname to be). This value exists only to assist users in correlating
	// instance resources with hosts.
	Hostname string `protobuf:"bytes,4,opt,name=Hostname,proto3" json:"Hostname,omitempty"`
	// ExternalUpgrader identifies the external upgrader that the instance is configured to
	// export schedules to (e.g. 'kube'). Empty if no upgrader is defined.
	ExternalUpgrader string `protobuf:"bytes,5,opt,name=ExternalUpgrader,proto3" json:"ExternalUpgrader,omitempty"`
	// ExternalUpgraderVersion identifies the external upgrader version. Empty if no upgrader is defined.
	ExternalUpgraderVersion string `protobuf:"bytes,6,opt,name=ExternalUpgraderVersion,proto3" json:"ExternalUpgraderVersion,omitempty"`
	// UpdaterInfo is used by Teleport to send information about how the Teleport updater is doing.
	UpdaterInfo   *types.UpdaterV2Info `protobuf:"bytes,8,opt,name=UpdaterInfo,proto3" json:"UpdaterInfo,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpstreamInventoryHello) Reset() {
	*x = UpstreamInventoryHello{}
	mi := &file_teleport_legacy_client_proto_inventory_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpstreamInventoryHello) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpstreamInventoryHello) ProtoMessage() {}

func (x *UpstreamInventoryHello) ProtoReflect() protoreflect.Message {
	mi := &file_teleport_legacy_client_proto_inventory_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpstreamInventoryHello.ProtoReflect.Descriptor instead.
func (*UpstreamInventoryHello) Descriptor() ([]byte, []int) {
	return file_teleport_legacy_client_proto_inventory_proto_rawDescGZIP(), []int{4}
}

func (x *UpstreamInventoryHello) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *UpstreamInventoryHello) GetServerID() string {
	if x != nil {
		return x.ServerID
	}
	return ""
}

func (x *UpstreamInventoryHello) GetServices() []string {
	if x != nil {
		return x.Services
	}
	return nil
}

func (x *UpstreamInventoryHello) GetHostname() string {
	if x != nil {
		return x.Hostname
	}
	return ""
}

func (x *UpstreamInventoryHello) GetExternalUpgrader() string {
	if x != nil {
		return x.ExternalUpgrader
	}
	return ""
}

func (x *UpstreamInventoryHello) GetExternalUpgraderVersion() string {
	if x != nil {
		return x.ExternalUpgraderVersion
	}
	return ""
}

func (x *UpstreamInventoryHello) GetUpdaterInfo() *types.UpdaterV2Info {
	if x != nil {
		return x.UpdaterInfo
	}
	return nil
}

// UpstreamInventoryAgentMetadata is the message sent up the inventory control stream containing
// metadata about the instance.
type UpstreamInventoryAgentMetadata struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// OS advertises the instance OS ("darwin" or "linux").
	OS string `protobuf:"bytes,1,opt,name=OS,proto3" json:"OS,omitempty"`
	// OSVersion advertises the instance OS version (e.g. "ubuntu 22.04").
	OSVersion string `protobuf:"bytes,2,opt,name=OSVersion,proto3" json:"OSVersion,omitempty"`
	// HostArchitecture advertises the instance host architecture (e.g. "x86_64" or "arm64").
	HostArchitecture string `protobuf:"bytes,3,opt,name=HostArchitecture,proto3" json:"HostArchitecture,omitempty"`
	// GlibcVersion advertises the instance glibc version of linux instances (e.g. "2.35").
	GlibcVersion string `protobuf:"bytes,4,opt,name=GlibcVersion,proto3" json:"GlibcVersion,omitempty"`
	// InstallMethods advertises the install methods used for the instance (e.g. "dockerfile").
	InstallMethods []string `protobuf:"bytes,5,rep,name=InstallMethods,proto3" json:"InstallMethods,omitempty"`
	// ContainerRuntime advertises the container runtime for the instance, if any (e.g. "docker").
	ContainerRuntime string `protobuf:"bytes,6,opt,name=ContainerRuntime,proto3" json:"ContainerRuntime,omitempty"`
	// ContainerOrchestrator advertises the container orchestrator for the instance, if any
	// (e.g. "kubernetes-v1.24.8-eks-ffeb93d").
	ContainerOrchestrator string `protobuf:"bytes,7,opt,name=ContainerOrchestrator,proto3" json:"ContainerOrchestrator,omitempty"`
	// CloudEnvironment advertises the cloud environment for the instance, if any (e.g. "aws").
	CloudEnvironment string `protobuf:"bytes,8,opt,name=CloudEnvironment,proto3" json:"CloudEnvironment,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *UpstreamInventoryAgentMetadata) Reset() {
	*x = UpstreamInventoryAgentMetadata{}
	mi := &file_teleport_legacy_client_proto_inventory_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpstreamInventoryAgentMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpstreamInventoryAgentMetadata) ProtoMessage() {}

func (x *UpstreamInventoryAgentMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_teleport_legacy_client_proto_inventory_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpstreamInventoryAgentMetadata.ProtoReflect.Descriptor instead.
func (*UpstreamInventoryAgentMetadata) Descriptor() ([]byte, []int) {
	return file_teleport_legacy_client_proto_inventory_proto_rawDescGZIP(), []int{5}
}

func (x *UpstreamInventoryAgentMetadata) GetOS() string {
	if x != nil {
		return x.OS
	}
	return ""
}

func (x *UpstreamInventoryAgentMetadata) GetOSVersion() string {
	if x != nil {
		return x.OSVersion
	}
	return ""
}

func (x *UpstreamInventoryAgentMetadata) GetHostArchitecture() string {
	if x != nil {
		return x.HostArchitecture
	}
	return ""
}

func (x *UpstreamInventoryAgentMetadata) GetGlibcVersion() string {
	if x != nil {
		return x.GlibcVersion
	}
	return ""
}

func (x *UpstreamInventoryAgentMetadata) GetInstallMethods() []string {
	if x != nil {
		return x.InstallMethods
	}
	return nil
}

func (x *UpstreamInventoryAgentMetadata) GetContainerRuntime() string {
	if x != nil {
		return x.ContainerRuntime
	}
	return ""
}

func (x *UpstreamInventoryAgentMetadata) GetContainerOrchestrator() string {
	if x != nil {
		return x.ContainerOrchestrator
	}
	return ""
}

func (x *UpstreamInventoryAgentMetadata) GetCloudEnvironment() string {
	if x != nil {
		return x.CloudEnvironment
	}
	return ""
}

// DownstreamInventoryHello is the hello message sent down the inventory control stream.
type DownstreamInventoryHello struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Version advertises the version of the auth server.
	Version string `protobuf:"bytes,1,opt,name=Version,proto3" json:"Version,omitempty"`
	// ServerID advertises the server ID of the auth server.
	ServerID string `protobuf:"bytes,2,opt,name=ServerID,proto3" json:"ServerID,omitempty"`
	// SupportedCapabilities advertises the supported features of the auth server.
	Capabilities  *DownstreamInventoryHello_SupportedCapabilities `protobuf:"bytes,3,opt,name=Capabilities,proto3" json:"Capabilities,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DownstreamInventoryHello) Reset() {
	*x = DownstreamInventoryHello{}
	mi := &file_teleport_legacy_client_proto_inventory_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DownstreamInventoryHello) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DownstreamInventoryHello) ProtoMessage() {}

func (x *DownstreamInventoryHello) ProtoReflect() protoreflect.Message {
	mi := &file_teleport_legacy_client_proto_inventory_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DownstreamInventoryHello.ProtoReflect.Descriptor instead.
func (*DownstreamInventoryHello) Descriptor() ([]byte, []int) {
	return file_teleport_legacy_client_proto_inventory_proto_rawDescGZIP(), []int{6}
}

func (x *DownstreamInventoryHello) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *DownstreamInventoryHello) GetServerID() string {
	if x != nil {
		return x.ServerID
	}
	return ""
}

func (x *DownstreamInventoryHello) GetCapabilities() *DownstreamInventoryHello_SupportedCapabilities {
	if x != nil {
		return x.Capabilities
	}
	return nil
}

// InventoryUpdateLabelsRequest is used to request that a specified instance
// update its labels.
type InventoryUpdateLabelsRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ServerID advertises the server ID of the instance.
	ServerID string `protobuf:"bytes,1,opt,name=ServerID,proto3" json:"ServerID,omitempty"`
	// Kind is the type of service to update labels for.
	Kind LabelUpdateKind `protobuf:"varint,2,opt,name=Kind,proto3,enum=proto.LabelUpdateKind" json:"Kind,omitempty"`
	// Labels is the new set of labels for the instance.
	Labels        map[string]string `protobuf:"bytes,3,rep,name=Labels,proto3" json:"Labels,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *InventoryUpdateLabelsRequest) Reset() {
	*x = InventoryUpdateLabelsRequest{}
	mi := &file_teleport_legacy_client_proto_inventory_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InventoryUpdateLabelsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InventoryUpdateLabelsRequest) ProtoMessage() {}

func (x *InventoryUpdateLabelsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_teleport_legacy_client_proto_inventory_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InventoryUpdateLabelsRequest.ProtoReflect.Descriptor instead.
func (*InventoryUpdateLabelsRequest) Descriptor() ([]byte, []int) {
	return file_teleport_legacy_client_proto_inventory_proto_rawDescGZIP(), []int{7}
}

func (x *InventoryUpdateLabelsRequest) GetServerID() string {
	if x != nil {
		return x.ServerID
	}
	return ""
}

func (x *InventoryUpdateLabelsRequest) GetKind() LabelUpdateKind {
	if x != nil {
		return x.Kind
	}
	return LabelUpdateKind_SSHServer
}

func (x *InventoryUpdateLabelsRequest) GetLabels() map[string]string {
	if x != nil {
		return x.Labels
	}
	return nil
}

// DownstreamInventoryUpdateLabels is the message sent down the inventory
// control stream to update the instance's labels.
type DownstreamInventoryUpdateLabels struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Kind is the type of service to update labels for.
	Kind LabelUpdateKind `protobuf:"varint,1,opt,name=Kind,proto3,enum=proto.LabelUpdateKind" json:"Kind,omitempty"`
	// Labels is the new set of labels for the instance.
	Labels        map[string]string `protobuf:"bytes,2,rep,name=Labels,proto3" json:"Labels,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DownstreamInventoryUpdateLabels) Reset() {
	*x = DownstreamInventoryUpdateLabels{}
	mi := &file_teleport_legacy_client_proto_inventory_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DownstreamInventoryUpdateLabels) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DownstreamInventoryUpdateLabels) ProtoMessage() {}

func (x *DownstreamInventoryUpdateLabels) ProtoReflect() protoreflect.Message {
	mi := &file_teleport_legacy_client_proto_inventory_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DownstreamInventoryUpdateLabels.ProtoReflect.Descriptor instead.
func (*DownstreamInventoryUpdateLabels) Descriptor() ([]byte, []int) {
	return file_teleport_legacy_client_proto_inventory_proto_rawDescGZIP(), []int{8}
}

func (x *DownstreamInventoryUpdateLabels) GetKind() LabelUpdateKind {
	if x != nil {
		return x.Kind
	}
	return LabelUpdateKind_SSHServer
}

func (x *DownstreamInventoryUpdateLabels) GetLabels() map[string]string {
	if x != nil {
		return x.Labels
	}
	return nil
}

// InventoryHeartbeat announces information about instance state.
type InventoryHeartbeat struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// SSHServer is a complete ssh server spec to be heartbeated (note: the full spec is heartbeated
	// in the interest of simple conversion from the old logic of heartbeating via UpsertNode, but
	// we should be able to cut down on network usage fairly significantly by moving static values
	// to the hello message and only heartbeating dynamic values here).
	SSHServer *types.ServerV2 `protobuf:"bytes,1,opt,name=SSHServer,proto3" json:"SSHServer,omitempty"`
	// AppServer is a complete app server spec to be heartbeated.
	AppServer *types.AppServerV3 `protobuf:"bytes,2,opt,name=AppServer,proto3" json:"AppServer,omitempty"`
	// DatabaseServer is a complete db server spec to be heartbeated.
	DatabaseServer *types.DatabaseServerV3 `protobuf:"bytes,3,opt,name=DatabaseServer,proto3" json:"DatabaseServer,omitempty"`
	// KubeServer is a complete kube server spec to be heartbeated.
	KubernetesServer *types.KubernetesServerV3 `protobuf:"bytes,4,opt,name=KubernetesServer,proto3" json:"KubernetesServer,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *InventoryHeartbeat) Reset() {
	*x = InventoryHeartbeat{}
	mi := &file_teleport_legacy_client_proto_inventory_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InventoryHeartbeat) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InventoryHeartbeat) ProtoMessage() {}

func (x *InventoryHeartbeat) ProtoReflect() protoreflect.Message {
	mi := &file_teleport_legacy_client_proto_inventory_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InventoryHeartbeat.ProtoReflect.Descriptor instead.
func (*InventoryHeartbeat) Descriptor() ([]byte, []int) {
	return file_teleport_legacy_client_proto_inventory_proto_rawDescGZIP(), []int{9}
}

func (x *InventoryHeartbeat) GetSSHServer() *types.ServerV2 {
	if x != nil {
		return x.SSHServer
	}
	return nil
}

func (x *InventoryHeartbeat) GetAppServer() *types.AppServerV3 {
	if x != nil {
		return x.AppServer
	}
	return nil
}

func (x *InventoryHeartbeat) GetDatabaseServer() *types.DatabaseServerV3 {
	if x != nil {
		return x.DatabaseServer
	}
	return nil
}

func (x *InventoryHeartbeat) GetKubernetesServer() *types.KubernetesServerV3 {
	if x != nil {
		return x.KubernetesServer
	}
	return nil
}

// UpstreamInventoryGoodbye informs the upstream service that instance
// is terminating
type UpstreamInventoryGoodbye struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// DeleteResources indicates that any heartbeats received from
	// the instance should be terminated when the stream is closed.
	DeleteResources bool `protobuf:"varint,1,opt,name=DeleteResources,proto3" json:"DeleteResources,omitempty"`
	// SoftReload indicates that the instance started a new Teleport process
	// and will gracefully exit once all the currently served sessions are over.
	SoftReload    bool `protobuf:"varint,2,opt,name=SoftReload,proto3" json:"SoftReload,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpstreamInventoryGoodbye) Reset() {
	*x = UpstreamInventoryGoodbye{}
	mi := &file_teleport_legacy_client_proto_inventory_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpstreamInventoryGoodbye) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpstreamInventoryGoodbye) ProtoMessage() {}

func (x *UpstreamInventoryGoodbye) ProtoReflect() protoreflect.Message {
	mi := &file_teleport_legacy_client_proto_inventory_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpstreamInventoryGoodbye.ProtoReflect.Descriptor instead.
func (*UpstreamInventoryGoodbye) Descriptor() ([]byte, []int) {
	return file_teleport_legacy_client_proto_inventory_proto_rawDescGZIP(), []int{10}
}

func (x *UpstreamInventoryGoodbye) GetDeleteResources() bool {
	if x != nil {
		return x.DeleteResources
	}
	return false
}

func (x *UpstreamInventoryGoodbye) GetSoftReload() bool {
	if x != nil {
		return x.SoftReload
	}
	return false
}

// InventoryStatusRequest requests inventory status info.
type InventoryStatusRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Connected requests summary of the inventory control streams registered with
	// the auth server that handles the request.
	Connected     bool `protobuf:"varint,1,opt,name=Connected,proto3" json:"Connected,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *InventoryStatusRequest) Reset() {
	*x = InventoryStatusRequest{}
	mi := &file_teleport_legacy_client_proto_inventory_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InventoryStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InventoryStatusRequest) ProtoMessage() {}

func (x *InventoryStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_teleport_legacy_client_proto_inventory_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InventoryStatusRequest.ProtoReflect.Descriptor instead.
func (*InventoryStatusRequest) Descriptor() ([]byte, []int) {
	return file_teleport_legacy_client_proto_inventory_proto_rawDescGZIP(), []int{11}
}

func (x *InventoryStatusRequest) GetConnected() bool {
	if x != nil {
		return x.Connected
	}
	return false
}

// InventoryStatusSummary is the status summary returned by the GetInventoryStatus rpc.
type InventoryStatusSummary struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Connected is a summary of the instances connected to the current auth server.  Only set if
	// the Connected flag in the status request is true.
	Connected []*UpstreamInventoryHello `protobuf:"bytes,1,rep,name=Connected,proto3" json:"Connected,omitempty"`
	// InstanceCount is the total number of instance resources aggregated.
	InstanceCount uint32 `protobuf:"varint,2,opt,name=InstanceCount,proto3" json:"InstanceCount,omitempty"`
	// VersionCounts aggregates unique version counts.
	VersionCounts map[string]uint32 `protobuf:"bytes,3,rep,name=VersionCounts,proto3" json:"VersionCounts,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"varint,2,opt,name=value"`
	// UpgraderCounts aggregates the unique upgrader counts.
	UpgraderCounts map[string]uint32 `protobuf:"bytes,4,rep,name=UpgraderCounts,proto3" json:"UpgraderCounts,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"varint,2,opt,name=value"`
	// ServiceCounts aggregates the number of services.
	ServiceCounts map[string]uint32 `protobuf:"bytes,5,rep,name=ServiceCounts,proto3" json:"ServiceCounts,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"varint,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *InventoryStatusSummary) Reset() {
	*x = InventoryStatusSummary{}
	mi := &file_teleport_legacy_client_proto_inventory_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InventoryStatusSummary) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InventoryStatusSummary) ProtoMessage() {}

func (x *InventoryStatusSummary) ProtoReflect() protoreflect.Message {
	mi := &file_teleport_legacy_client_proto_inventory_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InventoryStatusSummary.ProtoReflect.Descriptor instead.
func (*InventoryStatusSummary) Descriptor() ([]byte, []int) {
	return file_teleport_legacy_client_proto_inventory_proto_rawDescGZIP(), []int{12}
}

func (x *InventoryStatusSummary) GetConnected() []*UpstreamInventoryHello {
	if x != nil {
		return x.Connected
	}
	return nil
}

func (x *InventoryStatusSummary) GetInstanceCount() uint32 {
	if x != nil {
		return x.InstanceCount
	}
	return 0
}

func (x *InventoryStatusSummary) GetVersionCounts() map[string]uint32 {
	if x != nil {
		return x.VersionCounts
	}
	return nil
}

func (x *InventoryStatusSummary) GetUpgraderCounts() map[string]uint32 {
	if x != nil {
		return x.UpgraderCounts
	}
	return nil
}

func (x *InventoryStatusSummary) GetServiceCounts() map[string]uint32 {
	if x != nil {
		return x.ServiceCounts
	}
	return nil
}

// SupportedCapabilities indicate which features of the ICS that
// the connect auth server supports. This allows agents to determine
// how they should interact with the auth server to maintain compatibility.
type DownstreamInventoryHello_SupportedCapabilities struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ProxyHeartbeats indicates the ICS supports heartbeating proxy servers.
	ProxyHeartbeats bool `protobuf:"varint,1,opt,name=ProxyHeartbeats,proto3" json:"ProxyHeartbeats,omitempty"`
	// ProxyCleanup indicates the ICS supports deleting proxies when UpstreamInventoryGoodbye.DeleteResources is set.
	ProxyCleanup bool `protobuf:"varint,2,opt,name=ProxyCleanup,proto3" json:"ProxyCleanup,omitempty"`
	// ProxyHeartbeats indicates the ICS supports heartbeating proxy servers.
	AuthHeartbeats bool `protobuf:"varint,3,opt,name=AuthHeartbeats,proto3" json:"AuthHeartbeats,omitempty"`
	// ProxyCleanup indicates the ICS supports deleting proxies when UpstreamInventoryGoodbye.DeleteResources is set.
	AuthCleanup bool `protobuf:"varint,4,opt,name=AuthCleanup,proto3" json:"AuthCleanup,omitempty"`
	// NodeHeartbeats indicates the ICS supports heartbeating ssh servers.
	NodeHeartbeats bool `protobuf:"varint,5,opt,name=NodeHeartbeats,proto3" json:"NodeHeartbeats,omitempty"`
	// NodeCleanup indicates the ICS supports deleting nodes when UpstreamInventoryGoodbye.DeleteResources is set.
	NodeCleanup bool `protobuf:"varint,6,opt,name=NodeCleanup,proto3" json:"NodeCleanup,omitempty"`
	// AppHeartbeats indicates the ICS supports heartbeating app servers.
	AppHeartbeats bool `protobuf:"varint,7,opt,name=AppHeartbeats,proto3" json:"AppHeartbeats,omitempty"`
	// AppCleanup indicates the ICS supports deleting apps when UpstreamInventoryGoodbye.DeleteResources is set.
	AppCleanup bool `protobuf:"varint,8,opt,name=AppCleanup,proto3" json:"AppCleanup,omitempty"`
	// DatabaseHeartbeats indicates the ICS supports heartbeating databases.
	DatabaseHeartbeats bool `protobuf:"varint,9,opt,name=DatabaseHeartbeats,proto3" json:"DatabaseHeartbeats,omitempty"`
	// DatabaseCleanup indicates the ICS supports deleting databases when UpstreamInventoryGoodbye.DeleteResources is set.
	DatabaseCleanup bool `protobuf:"varint,10,opt,name=DatabaseCleanup,proto3" json:"DatabaseCleanup,omitempty"`
	// DatabaseServiceHeartbeats indicates the ICS supports heartbeating databse services.
	DatabaseServiceHeartbeats bool `protobuf:"varint,11,opt,name=DatabaseServiceHeartbeats,proto3" json:"DatabaseServiceHeartbeats,omitempty"`
	// DatabaseServiceCleanup indicates the ICS supports deleting database services when UpstreamInventoryGoodbye.DeleteResources is set.
	DatabaseServiceCleanup bool `protobuf:"varint,12,opt,name=DatabaseServiceCleanup,proto3" json:"DatabaseServiceCleanup,omitempty"`
	// WindowsDesktopHeartbeats indicates the ICS supports heartbeating windows desktop servers.
	WindowsDesktopHeartbeats bool `protobuf:"varint,13,opt,name=WindowsDesktopHeartbeats,proto3" json:"WindowsDesktopHeartbeats,omitempty"`
	// WindowsDesktopCleanup indicates the ICS supports deleting windows desktops when UpstreamInventoryGoodbye.DeleteResources is set.
	WindowsDesktopCleanup bool `protobuf:"varint,14,opt,name=WindowsDesktopCleanup,proto3" json:"WindowsDesktopCleanup,omitempty"`
	// WindowsDesktopHeartbeats indicates the ICS supports heartbeating windows desktop services.
	WindowsDesktopServiceHeartbeats bool `protobuf:"varint,15,opt,name=WindowsDesktopServiceHeartbeats,proto3" json:"WindowsDesktopServiceHeartbeats,omitempty"`
	// WindowsDesktopCleanup indicates the ICS supports deleting windows desktop services when UpstreamInventoryGoodbye.DeleteResources is set.
	WindowsDesktopServiceCleanup bool `protobuf:"varint,16,opt,name=WindowsDesktopServiceCleanup,proto3" json:"WindowsDesktopServiceCleanup,omitempty"`
	// KubernetesHeartbeats indicates the ICS supports heartbeating kubernetes clusters.
	KubernetesHeartbeats bool `protobuf:"varint,17,opt,name=KubernetesHeartbeats,proto3" json:"KubernetesHeartbeats,omitempty"`
	// KubernetesCleanup indicates the ICS supports deleting kubernetes clusters when UpstreamInventoryGoodbye.DeleteResources is set.
	KubernetesCleanup bool `protobuf:"varint,18,opt,name=KubernetesCleanup,proto3" json:"KubernetesCleanup,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *DownstreamInventoryHello_SupportedCapabilities) Reset() {
	*x = DownstreamInventoryHello_SupportedCapabilities{}
	mi := &file_teleport_legacy_client_proto_inventory_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DownstreamInventoryHello_SupportedCapabilities) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DownstreamInventoryHello_SupportedCapabilities) ProtoMessage() {}

func (x *DownstreamInventoryHello_SupportedCapabilities) ProtoReflect() protoreflect.Message {
	mi := &file_teleport_legacy_client_proto_inventory_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DownstreamInventoryHello_SupportedCapabilities.ProtoReflect.Descriptor instead.
func (*DownstreamInventoryHello_SupportedCapabilities) Descriptor() ([]byte, []int) {
	return file_teleport_legacy_client_proto_inventory_proto_rawDescGZIP(), []int{6, 0}
}

func (x *DownstreamInventoryHello_SupportedCapabilities) GetProxyHeartbeats() bool {
	if x != nil {
		return x.ProxyHeartbeats
	}
	return false
}

func (x *DownstreamInventoryHello_SupportedCapabilities) GetProxyCleanup() bool {
	if x != nil {
		return x.ProxyCleanup
	}
	return false
}

func (x *DownstreamInventoryHello_SupportedCapabilities) GetAuthHeartbeats() bool {
	if x != nil {
		return x.AuthHeartbeats
	}
	return false
}

func (x *DownstreamInventoryHello_SupportedCapabilities) GetAuthCleanup() bool {
	if x != nil {
		return x.AuthCleanup
	}
	return false
}

func (x *DownstreamInventoryHello_SupportedCapabilities) GetNodeHeartbeats() bool {
	if x != nil {
		return x.NodeHeartbeats
	}
	return false
}

func (x *DownstreamInventoryHello_SupportedCapabilities) GetNodeCleanup() bool {
	if x != nil {
		return x.NodeCleanup
	}
	return false
}

func (x *DownstreamInventoryHello_SupportedCapabilities) GetAppHeartbeats() bool {
	if x != nil {
		return x.AppHeartbeats
	}
	return false
}

func (x *DownstreamInventoryHello_SupportedCapabilities) GetAppCleanup() bool {
	if x != nil {
		return x.AppCleanup
	}
	return false
}

func (x *DownstreamInventoryHello_SupportedCapabilities) GetDatabaseHeartbeats() bool {
	if x != nil {
		return x.DatabaseHeartbeats
	}
	return false
}

func (x *DownstreamInventoryHello_SupportedCapabilities) GetDatabaseCleanup() bool {
	if x != nil {
		return x.DatabaseCleanup
	}
	return false
}

func (x *DownstreamInventoryHello_SupportedCapabilities) GetDatabaseServiceHeartbeats() bool {
	if x != nil {
		return x.DatabaseServiceHeartbeats
	}
	return false
}

func (x *DownstreamInventoryHello_SupportedCapabilities) GetDatabaseServiceCleanup() bool {
	if x != nil {
		return x.DatabaseServiceCleanup
	}
	return false
}

func (x *DownstreamInventoryHello_SupportedCapabilities) GetWindowsDesktopHeartbeats() bool {
	if x != nil {
		return x.WindowsDesktopHeartbeats
	}
	return false
}

func (x *DownstreamInventoryHello_SupportedCapabilities) GetWindowsDesktopCleanup() bool {
	if x != nil {
		return x.WindowsDesktopCleanup
	}
	return false
}

func (x *DownstreamInventoryHello_SupportedCapabilities) GetWindowsDesktopServiceHeartbeats() bool {
	if x != nil {
		return x.WindowsDesktopServiceHeartbeats
	}
	return false
}

func (x *DownstreamInventoryHello_SupportedCapabilities) GetWindowsDesktopServiceCleanup() bool {
	if x != nil {
		return x.WindowsDesktopServiceCleanup
	}
	return false
}

func (x *DownstreamInventoryHello_SupportedCapabilities) GetKubernetesHeartbeats() bool {
	if x != nil {
		return x.KubernetesHeartbeats
	}
	return false
}

func (x *DownstreamInventoryHello_SupportedCapabilities) GetKubernetesCleanup() bool {
	if x != nil {
		return x.KubernetesCleanup
	}
	return false
}

var File_teleport_legacy_client_proto_inventory_proto protoreflect.FileDescriptor

const file_teleport_legacy_client_proto_inventory_proto_rawDesc = "" +
	"\n" +
	",teleport/legacy/client/proto/inventory.proto\x12\x05proto\x1a\x1fgoogle/protobuf/timestamp.proto\x1a!teleport/legacy/types/types.proto\"\xd1\x02\n" +
	"\x16UpstreamInventoryOneOf\x125\n" +
	"\x05Hello\x18\x01 \x01(\v2\x1d.proto.UpstreamInventoryHelloH\x00R\x05Hello\x129\n" +
	"\tHeartbeat\x18\x02 \x01(\v2\x19.proto.InventoryHeartbeatH\x00R\tHeartbeat\x122\n" +
	"\x04Pong\x18\x03 \x01(\v2\x1c.proto.UpstreamInventoryPongH\x00R\x04Pong\x12M\n" +
	"\rAgentMetadata\x18\x04 \x01(\v2%.proto.UpstreamInventoryAgentMetadataH\x00R\rAgentMetadata\x12;\n" +
	"\aGoodbye\x18\x05 \x01(\v2\x1f.proto.UpstreamInventoryGoodbyeH\x00R\aGoodbyeB\x05\n" +
	"\x03Msg\"\xde\x01\n" +
	"\x18DownstreamInventoryOneOf\x127\n" +
	"\x05Hello\x18\x01 \x01(\v2\x1f.proto.DownstreamInventoryHelloH\x00R\x05Hello\x124\n" +
	"\x04Ping\x18\x02 \x01(\v2\x1e.proto.DownstreamInventoryPingH\x00R\x04Ping\x12L\n" +
	"\fUpdateLabels\x18\x03 \x01(\v2&.proto.DownstreamInventoryUpdateLabelsH\x00R\fUpdateLabelsB\x05\n" +
	"\x03Msg\")\n" +
	"\x17DownstreamInventoryPing\x12\x0e\n" +
	"\x02ID\x18\x01 \x01(\x04R\x02ID\"e\n" +
	"\x15UpstreamInventoryPong\x12\x0e\n" +
	"\x02ID\x18\x01 \x01(\x04R\x02ID\x12<\n" +
	"\vSystemClock\x18\x02 \x01(\v2\x1a.google.protobuf.TimestampR\vSystemClock\"\xb9\x02\n" +
	"\x16UpstreamInventoryHello\x12\x18\n" +
	"\aVersion\x18\x01 \x01(\tR\aVersion\x12\x1a\n" +
	"\bServerID\x18\x02 \x01(\tR\bServerID\x12\x1a\n" +
	"\bServices\x18\x03 \x03(\tR\bServices\x12\x1a\n" +
	"\bHostname\x18\x04 \x01(\tR\bHostname\x12*\n" +
	"\x10ExternalUpgrader\x18\x05 \x01(\tR\x10ExternalUpgrader\x128\n" +
	"\x17ExternalUpgraderVersion\x18\x06 \x01(\tR\x17ExternalUpgraderVersion\x126\n" +
	"\vUpdaterInfo\x18\b \x01(\v2\x14.types.UpdaterV2InfoR\vUpdaterInfoJ\x04\b\a\x10\bR\rUpdaterV2Info\"\xd4\x02\n" +
	"\x1eUpstreamInventoryAgentMetadata\x12\x0e\n" +
	"\x02OS\x18\x01 \x01(\tR\x02OS\x12\x1c\n" +
	"\tOSVersion\x18\x02 \x01(\tR\tOSVersion\x12*\n" +
	"\x10HostArchitecture\x18\x03 \x01(\tR\x10HostArchitecture\x12\"\n" +
	"\fGlibcVersion\x18\x04 \x01(\tR\fGlibcVersion\x12&\n" +
	"\x0eInstallMethods\x18\x05 \x03(\tR\x0eInstallMethods\x12*\n" +
	"\x10ContainerRuntime\x18\x06 \x01(\tR\x10ContainerRuntime\x124\n" +
	"\x15ContainerOrchestrator\x18\a \x01(\tR\x15ContainerOrchestrator\x12*\n" +
	"\x10CloudEnvironment\x18\b \x01(\tR\x10CloudEnvironment\"\x9f\b\n" +
	"\x18DownstreamInventoryHello\x12\x18\n" +
	"\aVersion\x18\x01 \x01(\tR\aVersion\x12\x1a\n" +
	"\bServerID\x18\x02 \x01(\tR\bServerID\x12Y\n" +
	"\fCapabilities\x18\x03 \x01(\v25.proto.DownstreamInventoryHello.SupportedCapabilitiesR\fCapabilities\x1a\xf1\x06\n" +
	"\x15SupportedCapabilities\x12(\n" +
	"\x0fProxyHeartbeats\x18\x01 \x01(\bR\x0fProxyHeartbeats\x12\"\n" +
	"\fProxyCleanup\x18\x02 \x01(\bR\fProxyCleanup\x12&\n" +
	"\x0eAuthHeartbeats\x18\x03 \x01(\bR\x0eAuthHeartbeats\x12 \n" +
	"\vAuthCleanup\x18\x04 \x01(\bR\vAuthCleanup\x12&\n" +
	"\x0eNodeHeartbeats\x18\x05 \x01(\bR\x0eNodeHeartbeats\x12 \n" +
	"\vNodeCleanup\x18\x06 \x01(\bR\vNodeCleanup\x12$\n" +
	"\rAppHeartbeats\x18\a \x01(\bR\rAppHeartbeats\x12\x1e\n" +
	"\n" +
	"AppCleanup\x18\b \x01(\bR\n" +
	"AppCleanup\x12.\n" +
	"\x12DatabaseHeartbeats\x18\t \x01(\bR\x12DatabaseHeartbeats\x12(\n" +
	"\x0fDatabaseCleanup\x18\n" +
	" \x01(\bR\x0fDatabaseCleanup\x12<\n" +
	"\x19DatabaseServiceHeartbeats\x18\v \x01(\bR\x19DatabaseServiceHeartbeats\x126\n" +
	"\x16DatabaseServiceCleanup\x18\f \x01(\bR\x16DatabaseServiceCleanup\x12:\n" +
	"\x18WindowsDesktopHeartbeats\x18\r \x01(\bR\x18WindowsDesktopHeartbeats\x124\n" +
	"\x15WindowsDesktopCleanup\x18\x0e \x01(\bR\x15WindowsDesktopCleanup\x12H\n" +
	"\x1fWindowsDesktopServiceHeartbeats\x18\x0f \x01(\bR\x1fWindowsDesktopServiceHeartbeats\x12B\n" +
	"\x1cWindowsDesktopServiceCleanup\x18\x10 \x01(\bR\x1cWindowsDesktopServiceCleanup\x122\n" +
	"\x14KubernetesHeartbeats\x18\x11 \x01(\bR\x14KubernetesHeartbeats\x12,\n" +
	"\x11KubernetesCleanup\x18\x12 \x01(\bR\x11KubernetesCleanup\"\xea\x01\n" +
	"\x1cInventoryUpdateLabelsRequest\x12\x1a\n" +
	"\bServerID\x18\x01 \x01(\tR\bServerID\x12*\n" +
	"\x04Kind\x18\x02 \x01(\x0e2\x16.proto.LabelUpdateKindR\x04Kind\x12G\n" +
	"\x06Labels\x18\x03 \x03(\v2/.proto.InventoryUpdateLabelsRequest.LabelsEntryR\x06Labels\x1a9\n" +
	"\vLabelsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xd4\x01\n" +
	"\x1fDownstreamInventoryUpdateLabels\x12*\n" +
	"\x04Kind\x18\x01 \x01(\x0e2\x16.proto.LabelUpdateKindR\x04Kind\x12J\n" +
	"\x06Labels\x18\x02 \x03(\v22.proto.DownstreamInventoryUpdateLabels.LabelsEntryR\x06Labels\x1a9\n" +
	"\vLabelsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xfd\x01\n" +
	"\x12InventoryHeartbeat\x12-\n" +
	"\tSSHServer\x18\x01 \x01(\v2\x0f.types.ServerV2R\tSSHServer\x120\n" +
	"\tAppServer\x18\x02 \x01(\v2\x12.types.AppServerV3R\tAppServer\x12?\n" +
	"\x0eDatabaseServer\x18\x03 \x01(\v2\x17.types.DatabaseServerV3R\x0eDatabaseServer\x12E\n" +
	"\x10KubernetesServer\x18\x04 \x01(\v2\x19.types.KubernetesServerV3R\x10KubernetesServer\"d\n" +
	"\x18UpstreamInventoryGoodbye\x12(\n" +
	"\x0fDeleteResources\x18\x01 \x01(\bR\x0fDeleteResources\x12\x1e\n" +
	"\n" +
	"SoftReload\x18\x02 \x01(\bR\n" +
	"SoftReload\"6\n" +
	"\x16InventoryStatusRequest\x12\x1c\n" +
	"\tConnected\x18\x01 \x01(\bR\tConnected\"\xcd\x04\n" +
	"\x16InventoryStatusSummary\x12;\n" +
	"\tConnected\x18\x01 \x03(\v2\x1d.proto.UpstreamInventoryHelloR\tConnected\x12$\n" +
	"\rInstanceCount\x18\x02 \x01(\rR\rInstanceCount\x12V\n" +
	"\rVersionCounts\x18\x03 \x03(\v20.proto.InventoryStatusSummary.VersionCountsEntryR\rVersionCounts\x12Y\n" +
	"\x0eUpgraderCounts\x18\x04 \x03(\v21.proto.InventoryStatusSummary.UpgraderCountsEntryR\x0eUpgraderCounts\x12V\n" +
	"\rServiceCounts\x18\x05 \x03(\v20.proto.InventoryStatusSummary.ServiceCountsEntryR\rServiceCounts\x1a@\n" +
	"\x12VersionCountsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\rR\x05value:\x028\x01\x1aA\n" +
	"\x13UpgraderCountsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\rR\x05value:\x028\x01\x1a@\n" +
	"\x12ServiceCountsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\rR\x05value:\x028\x01*:\n" +
	"\x0fLabelUpdateKind\x12\r\n" +
	"\tSSHServer\x10\x00\x12\x18\n" +
	"\x14SSHServerCloudLabels\x10\x01B4Z2github.com/gravitational/teleport/api/client/protob\x06proto3"

var (
	file_teleport_legacy_client_proto_inventory_proto_rawDescOnce sync.Once
	file_teleport_legacy_client_proto_inventory_proto_rawDescData []byte
)

func file_teleport_legacy_client_proto_inventory_proto_rawDescGZIP() []byte {
	file_teleport_legacy_client_proto_inventory_proto_rawDescOnce.Do(func() {
		file_teleport_legacy_client_proto_inventory_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_teleport_legacy_client_proto_inventory_proto_rawDesc), len(file_teleport_legacy_client_proto_inventory_proto_rawDesc)))
	})
	return file_teleport_legacy_client_proto_inventory_proto_rawDescData
}

var file_teleport_legacy_client_proto_inventory_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_teleport_legacy_client_proto_inventory_proto_msgTypes = make([]protoimpl.MessageInfo, 19)
var file_teleport_legacy_client_proto_inventory_proto_goTypes = []any{
	(LabelUpdateKind)(0),                                   // 0: proto.LabelUpdateKind
	(*UpstreamInventoryOneOf)(nil),                         // 1: proto.UpstreamInventoryOneOf
	(*DownstreamInventoryOneOf)(nil),                       // 2: proto.DownstreamInventoryOneOf
	(*DownstreamInventoryPing)(nil),                        // 3: proto.DownstreamInventoryPing
	(*UpstreamInventoryPong)(nil),                          // 4: proto.UpstreamInventoryPong
	(*UpstreamInventoryHello)(nil),                         // 5: proto.UpstreamInventoryHello
	(*UpstreamInventoryAgentMetadata)(nil),                 // 6: proto.UpstreamInventoryAgentMetadata
	(*DownstreamInventoryHello)(nil),                       // 7: proto.DownstreamInventoryHello
	(*InventoryUpdateLabelsRequest)(nil),                   // 8: proto.InventoryUpdateLabelsRequest
	(*DownstreamInventoryUpdateLabels)(nil),                // 9: proto.DownstreamInventoryUpdateLabels
	(*InventoryHeartbeat)(nil),                             // 10: proto.InventoryHeartbeat
	(*UpstreamInventoryGoodbye)(nil),                       // 11: proto.UpstreamInventoryGoodbye
	(*InventoryStatusRequest)(nil),                         // 12: proto.InventoryStatusRequest
	(*InventoryStatusSummary)(nil),                         // 13: proto.InventoryStatusSummary
	(*DownstreamInventoryHello_SupportedCapabilities)(nil), // 14: proto.DownstreamInventoryHello.SupportedCapabilities
	nil,                              // 15: proto.InventoryUpdateLabelsRequest.LabelsEntry
	nil,                              // 16: proto.DownstreamInventoryUpdateLabels.LabelsEntry
	nil,                              // 17: proto.InventoryStatusSummary.VersionCountsEntry
	nil,                              // 18: proto.InventoryStatusSummary.UpgraderCountsEntry
	nil,                              // 19: proto.InventoryStatusSummary.ServiceCountsEntry
	(*timestamppb.Timestamp)(nil),    // 20: google.protobuf.Timestamp
	(*types.UpdaterV2Info)(nil),      // 21: types.UpdaterV2Info
	(*types.ServerV2)(nil),           // 22: types.ServerV2
	(*types.AppServerV3)(nil),        // 23: types.AppServerV3
	(*types.DatabaseServerV3)(nil),   // 24: types.DatabaseServerV3
	(*types.KubernetesServerV3)(nil), // 25: types.KubernetesServerV3
}
var file_teleport_legacy_client_proto_inventory_proto_depIdxs = []int32{
	5,  // 0: proto.UpstreamInventoryOneOf.Hello:type_name -> proto.UpstreamInventoryHello
	10, // 1: proto.UpstreamInventoryOneOf.Heartbeat:type_name -> proto.InventoryHeartbeat
	4,  // 2: proto.UpstreamInventoryOneOf.Pong:type_name -> proto.UpstreamInventoryPong
	6,  // 3: proto.UpstreamInventoryOneOf.AgentMetadata:type_name -> proto.UpstreamInventoryAgentMetadata
	11, // 4: proto.UpstreamInventoryOneOf.Goodbye:type_name -> proto.UpstreamInventoryGoodbye
	7,  // 5: proto.DownstreamInventoryOneOf.Hello:type_name -> proto.DownstreamInventoryHello
	3,  // 6: proto.DownstreamInventoryOneOf.Ping:type_name -> proto.DownstreamInventoryPing
	9,  // 7: proto.DownstreamInventoryOneOf.UpdateLabels:type_name -> proto.DownstreamInventoryUpdateLabels
	20, // 8: proto.UpstreamInventoryPong.SystemClock:type_name -> google.protobuf.Timestamp
	21, // 9: proto.UpstreamInventoryHello.UpdaterInfo:type_name -> types.UpdaterV2Info
	14, // 10: proto.DownstreamInventoryHello.Capabilities:type_name -> proto.DownstreamInventoryHello.SupportedCapabilities
	0,  // 11: proto.InventoryUpdateLabelsRequest.Kind:type_name -> proto.LabelUpdateKind
	15, // 12: proto.InventoryUpdateLabelsRequest.Labels:type_name -> proto.InventoryUpdateLabelsRequest.LabelsEntry
	0,  // 13: proto.DownstreamInventoryUpdateLabels.Kind:type_name -> proto.LabelUpdateKind
	16, // 14: proto.DownstreamInventoryUpdateLabels.Labels:type_name -> proto.DownstreamInventoryUpdateLabels.LabelsEntry
	22, // 15: proto.InventoryHeartbeat.SSHServer:type_name -> types.ServerV2
	23, // 16: proto.InventoryHeartbeat.AppServer:type_name -> types.AppServerV3
	24, // 17: proto.InventoryHeartbeat.DatabaseServer:type_name -> types.DatabaseServerV3
	25, // 18: proto.InventoryHeartbeat.KubernetesServer:type_name -> types.KubernetesServerV3
	5,  // 19: proto.InventoryStatusSummary.Connected:type_name -> proto.UpstreamInventoryHello
	17, // 20: proto.InventoryStatusSummary.VersionCounts:type_name -> proto.InventoryStatusSummary.VersionCountsEntry
	18, // 21: proto.InventoryStatusSummary.UpgraderCounts:type_name -> proto.InventoryStatusSummary.UpgraderCountsEntry
	19, // 22: proto.InventoryStatusSummary.ServiceCounts:type_name -> proto.InventoryStatusSummary.ServiceCountsEntry
	23, // [23:23] is the sub-list for method output_type
	23, // [23:23] is the sub-list for method input_type
	23, // [23:23] is the sub-list for extension type_name
	23, // [23:23] is the sub-list for extension extendee
	0,  // [0:23] is the sub-list for field type_name
}

func init() { file_teleport_legacy_client_proto_inventory_proto_init() }
func file_teleport_legacy_client_proto_inventory_proto_init() {
	if File_teleport_legacy_client_proto_inventory_proto != nil {
		return
	}
	file_teleport_legacy_client_proto_inventory_proto_msgTypes[0].OneofWrappers = []any{
		(*UpstreamInventoryOneOf_Hello)(nil),
		(*UpstreamInventoryOneOf_Heartbeat)(nil),
		(*UpstreamInventoryOneOf_Pong)(nil),
		(*UpstreamInventoryOneOf_AgentMetadata)(nil),
		(*UpstreamInventoryOneOf_Goodbye)(nil),
	}
	file_teleport_legacy_client_proto_inventory_proto_msgTypes[1].OneofWrappers = []any{
		(*DownstreamInventoryOneOf_Hello)(nil),
		(*DownstreamInventoryOneOf_Ping)(nil),
		(*DownstreamInventoryOneOf_UpdateLabels)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_teleport_legacy_client_proto_inventory_proto_rawDesc), len(file_teleport_legacy_client_proto_inventory_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   19,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_teleport_legacy_client_proto_inventory_proto_goTypes,
		DependencyIndexes: file_teleport_legacy_client_proto_inventory_proto_depIdxs,
		EnumInfos:         file_teleport_legacy_client_proto_inventory_proto_enumTypes,
		MessageInfos:      file_teleport_legacy_client_proto_inventory_proto_msgTypes,
	}.Build()
	File_teleport_legacy_client_proto_inventory_proto = out.File
	file_teleport_legacy_client_proto_inventory_proto_goTypes = nil
	file_teleport_legacy_client_proto_inventory_proto_depIdxs = nil
}
