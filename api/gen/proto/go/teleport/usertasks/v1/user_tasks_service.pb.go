// Copyright 2024 Gravitational, Inc
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: teleport/usertasks/v1/user_tasks_service.proto

package usertasksv1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// CreateUserTaskRequest is a request to create a User Task.
type CreateUserTaskRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserTask      *UserTask              `protobuf:"bytes,1,opt,name=user_task,json=userTask,proto3" json:"user_task,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateUserTaskRequest) Reset() {
	*x = CreateUserTaskRequest{}
	mi := &file_teleport_usertasks_v1_user_tasks_service_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateUserTaskRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateUserTaskRequest) ProtoMessage() {}

func (x *CreateUserTaskRequest) ProtoReflect() protoreflect.Message {
	mi := &file_teleport_usertasks_v1_user_tasks_service_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateUserTaskRequest.ProtoReflect.Descriptor instead.
func (*CreateUserTaskRequest) Descriptor() ([]byte, []int) {
	return file_teleport_usertasks_v1_user_tasks_service_proto_rawDescGZIP(), []int{0}
}

func (x *CreateUserTaskRequest) GetUserTask() *UserTask {
	if x != nil {
		return x.UserTask
	}
	return nil
}

// UpsertUserTaskRequest is a request to create or update a User Task.
type UpsertUserTaskRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserTask      *UserTask              `protobuf:"bytes,1,opt,name=user_task,json=userTask,proto3" json:"user_task,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpsertUserTaskRequest) Reset() {
	*x = UpsertUserTaskRequest{}
	mi := &file_teleport_usertasks_v1_user_tasks_service_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpsertUserTaskRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpsertUserTaskRequest) ProtoMessage() {}

func (x *UpsertUserTaskRequest) ProtoReflect() protoreflect.Message {
	mi := &file_teleport_usertasks_v1_user_tasks_service_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpsertUserTaskRequest.ProtoReflect.Descriptor instead.
func (*UpsertUserTaskRequest) Descriptor() ([]byte, []int) {
	return file_teleport_usertasks_v1_user_tasks_service_proto_rawDescGZIP(), []int{1}
}

func (x *UpsertUserTaskRequest) GetUserTask() *UserTask {
	if x != nil {
		return x.UserTask
	}
	return nil
}

// GetUserTaskRequest is a request to get a User Task by name.
type GetUserTaskRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Name is the name of the UserTask to get.
	Name          string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetUserTaskRequest) Reset() {
	*x = GetUserTaskRequest{}
	mi := &file_teleport_usertasks_v1_user_tasks_service_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetUserTaskRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserTaskRequest) ProtoMessage() {}

func (x *GetUserTaskRequest) ProtoReflect() protoreflect.Message {
	mi := &file_teleport_usertasks_v1_user_tasks_service_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserTaskRequest.ProtoReflect.Descriptor instead.
func (*GetUserTaskRequest) Descriptor() ([]byte, []int) {
	return file_teleport_usertasks_v1_user_tasks_service_proto_rawDescGZIP(), []int{2}
}

func (x *GetUserTaskRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

// ListUserTasksRequest is a request to get a list of User Tasks.
type ListUserTasksRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// page_size is the maximum number of items to return.
	// The server may impose a different page size at its discretion.
	PageSize int64 `protobuf:"varint,1,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	// page_token is the next_page_token value returned from a previous List request, if any.
	PageToken string `protobuf:"bytes,2,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
	// filters is the set of filters to apply when listing User Tasks.
	Filters       *ListUserTasksFilters `protobuf:"bytes,3,opt,name=filters,proto3" json:"filters,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListUserTasksRequest) Reset() {
	*x = ListUserTasksRequest{}
	mi := &file_teleport_usertasks_v1_user_tasks_service_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListUserTasksRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListUserTasksRequest) ProtoMessage() {}

func (x *ListUserTasksRequest) ProtoReflect() protoreflect.Message {
	mi := &file_teleport_usertasks_v1_user_tasks_service_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListUserTasksRequest.ProtoReflect.Descriptor instead.
func (*ListUserTasksRequest) Descriptor() ([]byte, []int) {
	return file_teleport_usertasks_v1_user_tasks_service_proto_rawDescGZIP(), []int{3}
}

func (x *ListUserTasksRequest) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListUserTasksRequest) GetPageToken() string {
	if x != nil {
		return x.PageToken
	}
	return ""
}

func (x *ListUserTasksRequest) GetFilters() *ListUserTasksFilters {
	if x != nil {
		return x.Filters
	}
	return nil
}

// ListUserTasksFilters is a set of filters to apply when listing User Tasks.
// All fields must match for a User Task to be included in the list.
type ListUserTasksFilters struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// integration is the integration name that will be used to filter the returned list.
	// If empty, this filter is not applied.
	Integration string `protobuf:"bytes,1,opt,name=integration,proto3" json:"integration,omitempty"`
	// task_state filters the returned tasks by their state.
	// If empty, this filter is not applied.
	TaskState     string `protobuf:"bytes,2,opt,name=task_state,json=taskState,proto3" json:"task_state,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListUserTasksFilters) Reset() {
	*x = ListUserTasksFilters{}
	mi := &file_teleport_usertasks_v1_user_tasks_service_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListUserTasksFilters) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListUserTasksFilters) ProtoMessage() {}

func (x *ListUserTasksFilters) ProtoReflect() protoreflect.Message {
	mi := &file_teleport_usertasks_v1_user_tasks_service_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListUserTasksFilters.ProtoReflect.Descriptor instead.
func (*ListUserTasksFilters) Descriptor() ([]byte, []int) {
	return file_teleport_usertasks_v1_user_tasks_service_proto_rawDescGZIP(), []int{4}
}

func (x *ListUserTasksFilters) GetIntegration() string {
	if x != nil {
		return x.Integration
	}
	return ""
}

func (x *ListUserTasksFilters) GetTaskState() string {
	if x != nil {
		return x.TaskState
	}
	return ""
}

// ListUserTasksByIntegrationRequest is a request to get a list of User Tasks filtered by an Integration.
type ListUserTasksByIntegrationRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// page_size is the maximum number of items to return.
	// The server may impose a different page size at its discretion.
	PageSize int64 `protobuf:"varint,1,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	// page_token is the next_page_token value returned from a previous List request, if any.
	PageToken string `protobuf:"bytes,2,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
	// integration is the integration name that will be used to filter the returned list.
	Integration   string `protobuf:"bytes,3,opt,name=integration,proto3" json:"integration,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListUserTasksByIntegrationRequest) Reset() {
	*x = ListUserTasksByIntegrationRequest{}
	mi := &file_teleport_usertasks_v1_user_tasks_service_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListUserTasksByIntegrationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListUserTasksByIntegrationRequest) ProtoMessage() {}

func (x *ListUserTasksByIntegrationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_teleport_usertasks_v1_user_tasks_service_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListUserTasksByIntegrationRequest.ProtoReflect.Descriptor instead.
func (*ListUserTasksByIntegrationRequest) Descriptor() ([]byte, []int) {
	return file_teleport_usertasks_v1_user_tasks_service_proto_rawDescGZIP(), []int{5}
}

func (x *ListUserTasksByIntegrationRequest) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListUserTasksByIntegrationRequest) GetPageToken() string {
	if x != nil {
		return x.PageToken
	}
	return ""
}

func (x *ListUserTasksByIntegrationRequest) GetIntegration() string {
	if x != nil {
		return x.Integration
	}
	return ""
}

// ListUserTasksResponse is a response to ListUserTasks.
type ListUserTasksResponse struct {
	state     protoimpl.MessageState `protogen:"open.v1"`
	UserTasks []*UserTask            `protobuf:"bytes,1,rep,name=user_tasks,json=userTasks,proto3" json:"user_tasks,omitempty"`
	// Token to retrieve the next page of results, or empty if there are no
	// more results in the list.
	NextPageToken string `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListUserTasksResponse) Reset() {
	*x = ListUserTasksResponse{}
	mi := &file_teleport_usertasks_v1_user_tasks_service_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListUserTasksResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListUserTasksResponse) ProtoMessage() {}

func (x *ListUserTasksResponse) ProtoReflect() protoreflect.Message {
	mi := &file_teleport_usertasks_v1_user_tasks_service_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListUserTasksResponse.ProtoReflect.Descriptor instead.
func (*ListUserTasksResponse) Descriptor() ([]byte, []int) {
	return file_teleport_usertasks_v1_user_tasks_service_proto_rawDescGZIP(), []int{6}
}

func (x *ListUserTasksResponse) GetUserTasks() []*UserTask {
	if x != nil {
		return x.UserTasks
	}
	return nil
}

func (x *ListUserTasksResponse) GetNextPageToken() string {
	if x != nil {
		return x.NextPageToken
	}
	return ""
}

// UpdateUserTaskRequest is a request to update an existing User Task.
type UpdateUserTaskRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserTask      *UserTask              `protobuf:"bytes,1,opt,name=user_task,json=userTask,proto3" json:"user_task,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateUserTaskRequest) Reset() {
	*x = UpdateUserTaskRequest{}
	mi := &file_teleport_usertasks_v1_user_tasks_service_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateUserTaskRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateUserTaskRequest) ProtoMessage() {}

func (x *UpdateUserTaskRequest) ProtoReflect() protoreflect.Message {
	mi := &file_teleport_usertasks_v1_user_tasks_service_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateUserTaskRequest.ProtoReflect.Descriptor instead.
func (*UpdateUserTaskRequest) Descriptor() ([]byte, []int) {
	return file_teleport_usertasks_v1_user_tasks_service_proto_rawDescGZIP(), []int{7}
}

func (x *UpdateUserTaskRequest) GetUserTask() *UserTask {
	if x != nil {
		return x.UserTask
	}
	return nil
}

// DeleteUserTaskRequest is a request to delete a User Task.
type DeleteUserTaskRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Name is the name of the User Task to delete.
	Name          string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteUserTaskRequest) Reset() {
	*x = DeleteUserTaskRequest{}
	mi := &file_teleport_usertasks_v1_user_tasks_service_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteUserTaskRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteUserTaskRequest) ProtoMessage() {}

func (x *DeleteUserTaskRequest) ProtoReflect() protoreflect.Message {
	mi := &file_teleport_usertasks_v1_user_tasks_service_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteUserTaskRequest.ProtoReflect.Descriptor instead.
func (*DeleteUserTaskRequest) Descriptor() ([]byte, []int) {
	return file_teleport_usertasks_v1_user_tasks_service_proto_rawDescGZIP(), []int{8}
}

func (x *DeleteUserTaskRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

var File_teleport_usertasks_v1_user_tasks_service_proto protoreflect.FileDescriptor

const file_teleport_usertasks_v1_user_tasks_service_proto_rawDesc = "" +
	"\n" +
	".teleport/usertasks/v1/user_tasks_service.proto\x12\x15teleport.usertasks.v1\x1a\x1bgoogle/protobuf/empty.proto\x1a&teleport/usertasks/v1/user_tasks.proto\"U\n" +
	"\x15CreateUserTaskRequest\x12<\n" +
	"\tuser_task\x18\x01 \x01(\v2\x1f.teleport.usertasks.v1.UserTaskR\buserTask\"U\n" +
	"\x15UpsertUserTaskRequest\x12<\n" +
	"\tuser_task\x18\x01 \x01(\v2\x1f.teleport.usertasks.v1.UserTaskR\buserTask\"(\n" +
	"\x12GetUserTaskRequest\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\"\x99\x01\n" +
	"\x14ListUserTasksRequest\x12\x1b\n" +
	"\tpage_size\x18\x01 \x01(\x03R\bpageSize\x12\x1d\n" +
	"\n" +
	"page_token\x18\x02 \x01(\tR\tpageToken\x12E\n" +
	"\afilters\x18\x03 \x01(\v2+.teleport.usertasks.v1.ListUserTasksFiltersR\afilters\"W\n" +
	"\x14ListUserTasksFilters\x12 \n" +
	"\vintegration\x18\x01 \x01(\tR\vintegration\x12\x1d\n" +
	"\n" +
	"task_state\x18\x02 \x01(\tR\ttaskState\"\x81\x01\n" +
	"!ListUserTasksByIntegrationRequest\x12\x1b\n" +
	"\tpage_size\x18\x01 \x01(\x03R\bpageSize\x12\x1d\n" +
	"\n" +
	"page_token\x18\x02 \x01(\tR\tpageToken\x12 \n" +
	"\vintegration\x18\x03 \x01(\tR\vintegration\"\x7f\n" +
	"\x15ListUserTasksResponse\x12>\n" +
	"\n" +
	"user_tasks\x18\x01 \x03(\v2\x1f.teleport.usertasks.v1.UserTaskR\tuserTasks\x12&\n" +
	"\x0fnext_page_token\x18\x02 \x01(\tR\rnextPageToken\"U\n" +
	"\x15UpdateUserTaskRequest\x12<\n" +
	"\tuser_task\x18\x01 \x01(\v2\x1f.teleport.usertasks.v1.UserTaskR\buserTask\"+\n" +
	"\x15DeleteUserTaskRequest\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name2\xdf\x05\n" +
	"\x0fUserTaskService\x12_\n" +
	"\x0eCreateUserTask\x12,.teleport.usertasks.v1.CreateUserTaskRequest\x1a\x1f.teleport.usertasks.v1.UserTask\x12_\n" +
	"\x0eUpsertUserTask\x12,.teleport.usertasks.v1.UpsertUserTaskRequest\x1a\x1f.teleport.usertasks.v1.UserTask\x12Y\n" +
	"\vGetUserTask\x12).teleport.usertasks.v1.GetUserTaskRequest\x1a\x1f.teleport.usertasks.v1.UserTask\x12j\n" +
	"\rListUserTasks\x12+.teleport.usertasks.v1.ListUserTasksRequest\x1a,.teleport.usertasks.v1.ListUserTasksResponse\x12\x89\x01\n" +
	"\x1aListUserTasksByIntegration\x128.teleport.usertasks.v1.ListUserTasksByIntegrationRequest\x1a,.teleport.usertasks.v1.ListUserTasksResponse\"\x03\x88\x02\x01\x12_\n" +
	"\x0eUpdateUserTask\x12,.teleport.usertasks.v1.UpdateUserTaskRequest\x1a\x1f.teleport.usertasks.v1.UserTask\x12V\n" +
	"\x0eDeleteUserTask\x12,.teleport.usertasks.v1.DeleteUserTaskRequest\x1a\x16.google.protobuf.EmptyBVZTgithub.com/gravitational/teleport/api/gen/proto/go/teleport/usertasks/v1;usertasksv1b\x06proto3"

var (
	file_teleport_usertasks_v1_user_tasks_service_proto_rawDescOnce sync.Once
	file_teleport_usertasks_v1_user_tasks_service_proto_rawDescData []byte
)

func file_teleport_usertasks_v1_user_tasks_service_proto_rawDescGZIP() []byte {
	file_teleport_usertasks_v1_user_tasks_service_proto_rawDescOnce.Do(func() {
		file_teleport_usertasks_v1_user_tasks_service_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_teleport_usertasks_v1_user_tasks_service_proto_rawDesc), len(file_teleport_usertasks_v1_user_tasks_service_proto_rawDesc)))
	})
	return file_teleport_usertasks_v1_user_tasks_service_proto_rawDescData
}

var file_teleport_usertasks_v1_user_tasks_service_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_teleport_usertasks_v1_user_tasks_service_proto_goTypes = []any{
	(*CreateUserTaskRequest)(nil),             // 0: teleport.usertasks.v1.CreateUserTaskRequest
	(*UpsertUserTaskRequest)(nil),             // 1: teleport.usertasks.v1.UpsertUserTaskRequest
	(*GetUserTaskRequest)(nil),                // 2: teleport.usertasks.v1.GetUserTaskRequest
	(*ListUserTasksRequest)(nil),              // 3: teleport.usertasks.v1.ListUserTasksRequest
	(*ListUserTasksFilters)(nil),              // 4: teleport.usertasks.v1.ListUserTasksFilters
	(*ListUserTasksByIntegrationRequest)(nil), // 5: teleport.usertasks.v1.ListUserTasksByIntegrationRequest
	(*ListUserTasksResponse)(nil),             // 6: teleport.usertasks.v1.ListUserTasksResponse
	(*UpdateUserTaskRequest)(nil),             // 7: teleport.usertasks.v1.UpdateUserTaskRequest
	(*DeleteUserTaskRequest)(nil),             // 8: teleport.usertasks.v1.DeleteUserTaskRequest
	(*UserTask)(nil),                          // 9: teleport.usertasks.v1.UserTask
	(*emptypb.Empty)(nil),                     // 10: google.protobuf.Empty
}
var file_teleport_usertasks_v1_user_tasks_service_proto_depIdxs = []int32{
	9,  // 0: teleport.usertasks.v1.CreateUserTaskRequest.user_task:type_name -> teleport.usertasks.v1.UserTask
	9,  // 1: teleport.usertasks.v1.UpsertUserTaskRequest.user_task:type_name -> teleport.usertasks.v1.UserTask
	4,  // 2: teleport.usertasks.v1.ListUserTasksRequest.filters:type_name -> teleport.usertasks.v1.ListUserTasksFilters
	9,  // 3: teleport.usertasks.v1.ListUserTasksResponse.user_tasks:type_name -> teleport.usertasks.v1.UserTask
	9,  // 4: teleport.usertasks.v1.UpdateUserTaskRequest.user_task:type_name -> teleport.usertasks.v1.UserTask
	0,  // 5: teleport.usertasks.v1.UserTaskService.CreateUserTask:input_type -> teleport.usertasks.v1.CreateUserTaskRequest
	1,  // 6: teleport.usertasks.v1.UserTaskService.UpsertUserTask:input_type -> teleport.usertasks.v1.UpsertUserTaskRequest
	2,  // 7: teleport.usertasks.v1.UserTaskService.GetUserTask:input_type -> teleport.usertasks.v1.GetUserTaskRequest
	3,  // 8: teleport.usertasks.v1.UserTaskService.ListUserTasks:input_type -> teleport.usertasks.v1.ListUserTasksRequest
	5,  // 9: teleport.usertasks.v1.UserTaskService.ListUserTasksByIntegration:input_type -> teleport.usertasks.v1.ListUserTasksByIntegrationRequest
	7,  // 10: teleport.usertasks.v1.UserTaskService.UpdateUserTask:input_type -> teleport.usertasks.v1.UpdateUserTaskRequest
	8,  // 11: teleport.usertasks.v1.UserTaskService.DeleteUserTask:input_type -> teleport.usertasks.v1.DeleteUserTaskRequest
	9,  // 12: teleport.usertasks.v1.UserTaskService.CreateUserTask:output_type -> teleport.usertasks.v1.UserTask
	9,  // 13: teleport.usertasks.v1.UserTaskService.UpsertUserTask:output_type -> teleport.usertasks.v1.UserTask
	9,  // 14: teleport.usertasks.v1.UserTaskService.GetUserTask:output_type -> teleport.usertasks.v1.UserTask
	6,  // 15: teleport.usertasks.v1.UserTaskService.ListUserTasks:output_type -> teleport.usertasks.v1.ListUserTasksResponse
	6,  // 16: teleport.usertasks.v1.UserTaskService.ListUserTasksByIntegration:output_type -> teleport.usertasks.v1.ListUserTasksResponse
	9,  // 17: teleport.usertasks.v1.UserTaskService.UpdateUserTask:output_type -> teleport.usertasks.v1.UserTask
	10, // 18: teleport.usertasks.v1.UserTaskService.DeleteUserTask:output_type -> google.protobuf.Empty
	12, // [12:19] is the sub-list for method output_type
	5,  // [5:12] is the sub-list for method input_type
	5,  // [5:5] is the sub-list for extension type_name
	5,  // [5:5] is the sub-list for extension extendee
	0,  // [0:5] is the sub-list for field type_name
}

func init() { file_teleport_usertasks_v1_user_tasks_service_proto_init() }
func file_teleport_usertasks_v1_user_tasks_service_proto_init() {
	if File_teleport_usertasks_v1_user_tasks_service_proto != nil {
		return
	}
	file_teleport_usertasks_v1_user_tasks_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_teleport_usertasks_v1_user_tasks_service_proto_rawDesc), len(file_teleport_usertasks_v1_user_tasks_service_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_teleport_usertasks_v1_user_tasks_service_proto_goTypes,
		DependencyIndexes: file_teleport_usertasks_v1_user_tasks_service_proto_depIdxs,
		MessageInfos:      file_teleport_usertasks_v1_user_tasks_service_proto_msgTypes,
	}.Build()
	File_teleport_usertasks_v1_user_tasks_service_proto = out.File
	file_teleport_usertasks_v1_user_tasks_service_proto_goTypes = nil
	file_teleport_usertasks_v1_user_tasks_service_proto_depIdxs = nil
}
