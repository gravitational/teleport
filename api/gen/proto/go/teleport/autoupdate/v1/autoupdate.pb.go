// Copyright 2024 Gravitational, Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: teleport/autoupdate/v1/autoupdate.proto

package autoupdate

import (
	v1 "github.com/gravitational/teleport/api/gen/proto/go/teleport/header/v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	durationpb "google.golang.org/protobuf/types/known/durationpb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// AutoUpdateAgentGroupState represents the agent group state. This state controls whether the agents from this group
// should install the start version, the target version, and if they should update immediately or wait.
type AutoUpdateAgentGroupState int32

const (
	// AUTO_UPDATE_AGENT_GROUP_STATE_UNSPECIFIED state
	AutoUpdateAgentGroupState_AUTO_UPDATE_AGENT_GROUP_STATE_UNSPECIFIED AutoUpdateAgentGroupState = 0
	// AUTO_UPDATE_AGENT_GROUP_STATE_UNSTARTED represents that the group update has not been started yet.
	AutoUpdateAgentGroupState_AUTO_UPDATE_AGENT_GROUP_STATE_UNSTARTED AutoUpdateAgentGroupState = 1
	// AUTO_UPDATE_AGENT_GROUP_STATE_ACTIVE represents that the group is actively getting updated.
	// New agents should run v2, existing agents are instructed to update to v2.
	AutoUpdateAgentGroupState_AUTO_UPDATE_AGENT_GROUP_STATE_ACTIVE AutoUpdateAgentGroupState = 2
	// AUTO_UPDATE_AGENT_GROUP_STATE_DONE represents that the group has been updated. New agents should run v2.
	AutoUpdateAgentGroupState_AUTO_UPDATE_AGENT_GROUP_STATE_DONE AutoUpdateAgentGroupState = 3
	// AUTO_UPDATE_AGENT_GROUP_STATE_ROLLEDBACK represents that the group has been rolled back.
	// New agents should run v1, existing agents should update to v1.
	AutoUpdateAgentGroupState_AUTO_UPDATE_AGENT_GROUP_STATE_ROLLEDBACK AutoUpdateAgentGroupState = 4
)

// Enum value maps for AutoUpdateAgentGroupState.
var (
	AutoUpdateAgentGroupState_name = map[int32]string{
		0: "AUTO_UPDATE_AGENT_GROUP_STATE_UNSPECIFIED",
		1: "AUTO_UPDATE_AGENT_GROUP_STATE_UNSTARTED",
		2: "AUTO_UPDATE_AGENT_GROUP_STATE_ACTIVE",
		3: "AUTO_UPDATE_AGENT_GROUP_STATE_DONE",
		4: "AUTO_UPDATE_AGENT_GROUP_STATE_ROLLEDBACK",
	}
	AutoUpdateAgentGroupState_value = map[string]int32{
		"AUTO_UPDATE_AGENT_GROUP_STATE_UNSPECIFIED": 0,
		"AUTO_UPDATE_AGENT_GROUP_STATE_UNSTARTED":   1,
		"AUTO_UPDATE_AGENT_GROUP_STATE_ACTIVE":      2,
		"AUTO_UPDATE_AGENT_GROUP_STATE_DONE":        3,
		"AUTO_UPDATE_AGENT_GROUP_STATE_ROLLEDBACK":  4,
	}
)

func (x AutoUpdateAgentGroupState) Enum() *AutoUpdateAgentGroupState {
	p := new(AutoUpdateAgentGroupState)
	*p = x
	return p
}

func (x AutoUpdateAgentGroupState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AutoUpdateAgentGroupState) Descriptor() protoreflect.EnumDescriptor {
	return file_teleport_autoupdate_v1_autoupdate_proto_enumTypes[0].Descriptor()
}

func (AutoUpdateAgentGroupState) Type() protoreflect.EnumType {
	return &file_teleport_autoupdate_v1_autoupdate_proto_enumTypes[0]
}

func (x AutoUpdateAgentGroupState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AutoUpdateAgentGroupState.Descriptor instead.
func (AutoUpdateAgentGroupState) EnumDescriptor() ([]byte, []int) {
	return file_teleport_autoupdate_v1_autoupdate_proto_rawDescGZIP(), []int{0}
}

// AutoUpdateAgentRolloutState represents the rollout state. This tells if Teleport started updating agents from the
// start version to the target version, if the update is done, still in progress
// or if the rollout was manually reverted.
type AutoUpdateAgentRolloutState int32

const (
	// AUTO_UPDATE_AGENT_ROLLOUT_STATE_UNSPECIFIED state
	AutoUpdateAgentRolloutState_AUTO_UPDATE_AGENT_ROLLOUT_STATE_UNSPECIFIED AutoUpdateAgentRolloutState = 0
	// AUTO_UPDATE_AGENT_ROLLOUT_STATE_UNSTARTED represents that no group in the rollout has been started yet.
	AutoUpdateAgentRolloutState_AUTO_UPDATE_AGENT_ROLLOUT_STATE_UNSTARTED AutoUpdateAgentRolloutState = 1
	// AUTO_UPDATE_AGENT_ROLLOUT_STATE_ACTIVE represents that at least one group of the rollout has started.
	// If every group is finished, the state will be AUTO_UPDATE_AGENT_ROLLOUT_STATE_DONE.
	AutoUpdateAgentRolloutState_AUTO_UPDATE_AGENT_ROLLOUT_STATE_ACTIVE AutoUpdateAgentRolloutState = 2
	// AUTO_UPDATE_AGENT_ROLLOUT_STATE_DONE represents that every group is in the DONE state, or has been in the done
	// state (groups might become active again in time-based strategy).
	AutoUpdateAgentRolloutState_AUTO_UPDATE_AGENT_ROLLOUT_STATE_DONE AutoUpdateAgentRolloutState = 3
	// AUTO_UPDATE_AGENT_ROLLOUT_STATE_ROLLEDBACK represents that at least one group is in the rolledback state.
	AutoUpdateAgentRolloutState_AUTO_UPDATE_AGENT_ROLLOUT_STATE_ROLLEDBACK AutoUpdateAgentRolloutState = 4
)

// Enum value maps for AutoUpdateAgentRolloutState.
var (
	AutoUpdateAgentRolloutState_name = map[int32]string{
		0: "AUTO_UPDATE_AGENT_ROLLOUT_STATE_UNSPECIFIED",
		1: "AUTO_UPDATE_AGENT_ROLLOUT_STATE_UNSTARTED",
		2: "AUTO_UPDATE_AGENT_ROLLOUT_STATE_ACTIVE",
		3: "AUTO_UPDATE_AGENT_ROLLOUT_STATE_DONE",
		4: "AUTO_UPDATE_AGENT_ROLLOUT_STATE_ROLLEDBACK",
	}
	AutoUpdateAgentRolloutState_value = map[string]int32{
		"AUTO_UPDATE_AGENT_ROLLOUT_STATE_UNSPECIFIED": 0,
		"AUTO_UPDATE_AGENT_ROLLOUT_STATE_UNSTARTED":   1,
		"AUTO_UPDATE_AGENT_ROLLOUT_STATE_ACTIVE":      2,
		"AUTO_UPDATE_AGENT_ROLLOUT_STATE_DONE":        3,
		"AUTO_UPDATE_AGENT_ROLLOUT_STATE_ROLLEDBACK":  4,
	}
)

func (x AutoUpdateAgentRolloutState) Enum() *AutoUpdateAgentRolloutState {
	p := new(AutoUpdateAgentRolloutState)
	*p = x
	return p
}

func (x AutoUpdateAgentRolloutState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AutoUpdateAgentRolloutState) Descriptor() protoreflect.EnumDescriptor {
	return file_teleport_autoupdate_v1_autoupdate_proto_enumTypes[1].Descriptor()
}

func (AutoUpdateAgentRolloutState) Type() protoreflect.EnumType {
	return &file_teleport_autoupdate_v1_autoupdate_proto_enumTypes[1]
}

func (x AutoUpdateAgentRolloutState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AutoUpdateAgentRolloutState.Descriptor instead.
func (AutoUpdateAgentRolloutState) EnumDescriptor() ([]byte, []int) {
	return file_teleport_autoupdate_v1_autoupdate_proto_rawDescGZIP(), []int{1}
}

// AutoUpdateConfig is a config singleton used to configure cluster
// autoupdate settings.
type AutoUpdateConfig struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Kind          string                 `protobuf:"bytes,1,opt,name=kind,proto3" json:"kind,omitempty"`
	SubKind       string                 `protobuf:"bytes,2,opt,name=sub_kind,json=subKind,proto3" json:"sub_kind,omitempty"`
	Version       string                 `protobuf:"bytes,3,opt,name=version,proto3" json:"version,omitempty"`
	Metadata      *v1.Metadata           `protobuf:"bytes,4,opt,name=metadata,proto3" json:"metadata,omitempty"`
	Spec          *AutoUpdateConfigSpec  `protobuf:"bytes,5,opt,name=spec,proto3" json:"spec,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AutoUpdateConfig) Reset() {
	*x = AutoUpdateConfig{}
	mi := &file_teleport_autoupdate_v1_autoupdate_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AutoUpdateConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AutoUpdateConfig) ProtoMessage() {}

func (x *AutoUpdateConfig) ProtoReflect() protoreflect.Message {
	mi := &file_teleport_autoupdate_v1_autoupdate_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AutoUpdateConfig.ProtoReflect.Descriptor instead.
func (*AutoUpdateConfig) Descriptor() ([]byte, []int) {
	return file_teleport_autoupdate_v1_autoupdate_proto_rawDescGZIP(), []int{0}
}

func (x *AutoUpdateConfig) GetKind() string {
	if x != nil {
		return x.Kind
	}
	return ""
}

func (x *AutoUpdateConfig) GetSubKind() string {
	if x != nil {
		return x.SubKind
	}
	return ""
}

func (x *AutoUpdateConfig) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *AutoUpdateConfig) GetMetadata() *v1.Metadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *AutoUpdateConfig) GetSpec() *AutoUpdateConfigSpec {
	if x != nil {
		return x.Spec
	}
	return nil
}

// AutoUpdateConfigSpec encodes the parameters of the autoupdate config object.
type AutoUpdateConfigSpec struct {
	state         protoimpl.MessageState      `protogen:"open.v1"`
	Tools         *AutoUpdateConfigSpecTools  `protobuf:"bytes,2,opt,name=tools,proto3" json:"tools,omitempty"`
	Agents        *AutoUpdateConfigSpecAgents `protobuf:"bytes,3,opt,name=agents,proto3" json:"agents,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AutoUpdateConfigSpec) Reset() {
	*x = AutoUpdateConfigSpec{}
	mi := &file_teleport_autoupdate_v1_autoupdate_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AutoUpdateConfigSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AutoUpdateConfigSpec) ProtoMessage() {}

func (x *AutoUpdateConfigSpec) ProtoReflect() protoreflect.Message {
	mi := &file_teleport_autoupdate_v1_autoupdate_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AutoUpdateConfigSpec.ProtoReflect.Descriptor instead.
func (*AutoUpdateConfigSpec) Descriptor() ([]byte, []int) {
	return file_teleport_autoupdate_v1_autoupdate_proto_rawDescGZIP(), []int{1}
}

func (x *AutoUpdateConfigSpec) GetTools() *AutoUpdateConfigSpecTools {
	if x != nil {
		return x.Tools
	}
	return nil
}

func (x *AutoUpdateConfigSpec) GetAgents() *AutoUpdateConfigSpecAgents {
	if x != nil {
		return x.Agents
	}
	return nil
}

// AutoUpdateConfigSpecTools encodes the parameters for client tools auto updates.
type AutoUpdateConfigSpecTools struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Mode defines state of the client tools auto update.
	Mode          string `protobuf:"bytes,1,opt,name=mode,proto3" json:"mode,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AutoUpdateConfigSpecTools) Reset() {
	*x = AutoUpdateConfigSpecTools{}
	mi := &file_teleport_autoupdate_v1_autoupdate_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AutoUpdateConfigSpecTools) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AutoUpdateConfigSpecTools) ProtoMessage() {}

func (x *AutoUpdateConfigSpecTools) ProtoReflect() protoreflect.Message {
	mi := &file_teleport_autoupdate_v1_autoupdate_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AutoUpdateConfigSpecTools.ProtoReflect.Descriptor instead.
func (*AutoUpdateConfigSpecTools) Descriptor() ([]byte, []int) {
	return file_teleport_autoupdate_v1_autoupdate_proto_rawDescGZIP(), []int{2}
}

func (x *AutoUpdateConfigSpecTools) GetMode() string {
	if x != nil {
		return x.Mode
	}
	return ""
}

// AutoUpdateConfigSpecAgents encodes the parameters of automatic agent updates.
type AutoUpdateConfigSpecAgents struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// mode specifies whether agent autoupdates are enabled, disabled, or paused.
	Mode string `protobuf:"bytes,1,opt,name=mode,proto3" json:"mode,omitempty"`
	// strategy to use for updating the agents.
	Strategy string `protobuf:"bytes,2,opt,name=strategy,proto3" json:"strategy,omitempty"`
	// maintenance_window_duration is the maintenance window duration. This can only be set if `strategy` is "time-based".
	// Once the window is over, the group transitions to the done state. Existing agents won't be updated until the next
	// maintenance window.
	MaintenanceWindowDuration *durationpb.Duration `protobuf:"bytes,3,opt,name=maintenance_window_duration,json=maintenanceWindowDuration,proto3" json:"maintenance_window_duration,omitempty"`
	// schedules specifies schedules for updates of grouped agents.
	Schedules     *AgentAutoUpdateSchedules `protobuf:"bytes,6,opt,name=schedules,proto3" json:"schedules,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AutoUpdateConfigSpecAgents) Reset() {
	*x = AutoUpdateConfigSpecAgents{}
	mi := &file_teleport_autoupdate_v1_autoupdate_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AutoUpdateConfigSpecAgents) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AutoUpdateConfigSpecAgents) ProtoMessage() {}

func (x *AutoUpdateConfigSpecAgents) ProtoReflect() protoreflect.Message {
	mi := &file_teleport_autoupdate_v1_autoupdate_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AutoUpdateConfigSpecAgents.ProtoReflect.Descriptor instead.
func (*AutoUpdateConfigSpecAgents) Descriptor() ([]byte, []int) {
	return file_teleport_autoupdate_v1_autoupdate_proto_rawDescGZIP(), []int{3}
}

func (x *AutoUpdateConfigSpecAgents) GetMode() string {
	if x != nil {
		return x.Mode
	}
	return ""
}

func (x *AutoUpdateConfigSpecAgents) GetStrategy() string {
	if x != nil {
		return x.Strategy
	}
	return ""
}

func (x *AutoUpdateConfigSpecAgents) GetMaintenanceWindowDuration() *durationpb.Duration {
	if x != nil {
		return x.MaintenanceWindowDuration
	}
	return nil
}

func (x *AutoUpdateConfigSpecAgents) GetSchedules() *AgentAutoUpdateSchedules {
	if x != nil {
		return x.Schedules
	}
	return nil
}

// AgentAutoUpdateSchedules specifies update scheduled for grouped agents.
type AgentAutoUpdateSchedules struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// regular schedules for non-critical versions.
	Regular       []*AgentAutoUpdateGroup `protobuf:"bytes,1,rep,name=regular,proto3" json:"regular,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AgentAutoUpdateSchedules) Reset() {
	*x = AgentAutoUpdateSchedules{}
	mi := &file_teleport_autoupdate_v1_autoupdate_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AgentAutoUpdateSchedules) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AgentAutoUpdateSchedules) ProtoMessage() {}

func (x *AgentAutoUpdateSchedules) ProtoReflect() protoreflect.Message {
	mi := &file_teleport_autoupdate_v1_autoupdate_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AgentAutoUpdateSchedules.ProtoReflect.Descriptor instead.
func (*AgentAutoUpdateSchedules) Descriptor() ([]byte, []int) {
	return file_teleport_autoupdate_v1_autoupdate_proto_rawDescGZIP(), []int{4}
}

func (x *AgentAutoUpdateSchedules) GetRegular() []*AgentAutoUpdateGroup {
	if x != nil {
		return x.Regular
	}
	return nil
}

// AgentAutoUpdateGroup specifies the update schedule for a group of agents.
type AgentAutoUpdateGroup struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// name of the group
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// days when the update can run. Supported values are "Mon", "Tue", "Wed", "Thu", "Fri", "Sat", "Sun" and "*"
	Days []string `protobuf:"bytes,2,rep,name=days,proto3" json:"days,omitempty"`
	// start_hour to initiate update
	StartHour int32 `protobuf:"varint,3,opt,name=start_hour,json=startHour,proto3" json:"start_hour,omitempty"`
	// wait_hours after last group succeeds before this group can run. This can only be used when the strategy is "halt-on-failure".
	// This field must be positive.
	WaitHours     int32 `protobuf:"varint,5,opt,name=wait_hours,json=waitHours,proto3" json:"wait_hours,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AgentAutoUpdateGroup) Reset() {
	*x = AgentAutoUpdateGroup{}
	mi := &file_teleport_autoupdate_v1_autoupdate_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AgentAutoUpdateGroup) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AgentAutoUpdateGroup) ProtoMessage() {}

func (x *AgentAutoUpdateGroup) ProtoReflect() protoreflect.Message {
	mi := &file_teleport_autoupdate_v1_autoupdate_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AgentAutoUpdateGroup.ProtoReflect.Descriptor instead.
func (*AgentAutoUpdateGroup) Descriptor() ([]byte, []int) {
	return file_teleport_autoupdate_v1_autoupdate_proto_rawDescGZIP(), []int{5}
}

func (x *AgentAutoUpdateGroup) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AgentAutoUpdateGroup) GetDays() []string {
	if x != nil {
		return x.Days
	}
	return nil
}

func (x *AgentAutoUpdateGroup) GetStartHour() int32 {
	if x != nil {
		return x.StartHour
	}
	return 0
}

func (x *AgentAutoUpdateGroup) GetWaitHours() int32 {
	if x != nil {
		return x.WaitHours
	}
	return 0
}

// AutoUpdateVersion is a resource singleton with version required for
// tools autoupdate.
type AutoUpdateVersion struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Kind          string                 `protobuf:"bytes,1,opt,name=kind,proto3" json:"kind,omitempty"`
	SubKind       string                 `protobuf:"bytes,2,opt,name=sub_kind,json=subKind,proto3" json:"sub_kind,omitempty"`
	Version       string                 `protobuf:"bytes,3,opt,name=version,proto3" json:"version,omitempty"`
	Metadata      *v1.Metadata           `protobuf:"bytes,4,opt,name=metadata,proto3" json:"metadata,omitempty"`
	Spec          *AutoUpdateVersionSpec `protobuf:"bytes,5,opt,name=spec,proto3" json:"spec,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AutoUpdateVersion) Reset() {
	*x = AutoUpdateVersion{}
	mi := &file_teleport_autoupdate_v1_autoupdate_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AutoUpdateVersion) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AutoUpdateVersion) ProtoMessage() {}

func (x *AutoUpdateVersion) ProtoReflect() protoreflect.Message {
	mi := &file_teleport_autoupdate_v1_autoupdate_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AutoUpdateVersion.ProtoReflect.Descriptor instead.
func (*AutoUpdateVersion) Descriptor() ([]byte, []int) {
	return file_teleport_autoupdate_v1_autoupdate_proto_rawDescGZIP(), []int{6}
}

func (x *AutoUpdateVersion) GetKind() string {
	if x != nil {
		return x.Kind
	}
	return ""
}

func (x *AutoUpdateVersion) GetSubKind() string {
	if x != nil {
		return x.SubKind
	}
	return ""
}

func (x *AutoUpdateVersion) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *AutoUpdateVersion) GetMetadata() *v1.Metadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *AutoUpdateVersion) GetSpec() *AutoUpdateVersionSpec {
	if x != nil {
		return x.Spec
	}
	return nil
}

// AutoUpdateVersionSpec encodes the parameters of the autoupdate versions.
type AutoUpdateVersionSpec struct {
	state         protoimpl.MessageState       `protogen:"open.v1"`
	Tools         *AutoUpdateVersionSpecTools  `protobuf:"bytes,2,opt,name=tools,proto3" json:"tools,omitempty"`
	Agents        *AutoUpdateVersionSpecAgents `protobuf:"bytes,3,opt,name=agents,proto3" json:"agents,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AutoUpdateVersionSpec) Reset() {
	*x = AutoUpdateVersionSpec{}
	mi := &file_teleport_autoupdate_v1_autoupdate_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AutoUpdateVersionSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AutoUpdateVersionSpec) ProtoMessage() {}

func (x *AutoUpdateVersionSpec) ProtoReflect() protoreflect.Message {
	mi := &file_teleport_autoupdate_v1_autoupdate_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AutoUpdateVersionSpec.ProtoReflect.Descriptor instead.
func (*AutoUpdateVersionSpec) Descriptor() ([]byte, []int) {
	return file_teleport_autoupdate_v1_autoupdate_proto_rawDescGZIP(), []int{7}
}

func (x *AutoUpdateVersionSpec) GetTools() *AutoUpdateVersionSpecTools {
	if x != nil {
		return x.Tools
	}
	return nil
}

func (x *AutoUpdateVersionSpec) GetAgents() *AutoUpdateVersionSpecAgents {
	if x != nil {
		return x.Agents
	}
	return nil
}

// AutoUpdateVersionSpecTools encodes the parameters for client tools auto updates.
type AutoUpdateVersionSpecTools struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// TargetVersion specifies the semantic version required for tools to establish a connection with the cluster.
	// Client tools after connection to the cluster going to be updated to this version automatically.
	TargetVersion string `protobuf:"bytes,1,opt,name=target_version,json=targetVersion,proto3" json:"target_version,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AutoUpdateVersionSpecTools) Reset() {
	*x = AutoUpdateVersionSpecTools{}
	mi := &file_teleport_autoupdate_v1_autoupdate_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AutoUpdateVersionSpecTools) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AutoUpdateVersionSpecTools) ProtoMessage() {}

func (x *AutoUpdateVersionSpecTools) ProtoReflect() protoreflect.Message {
	mi := &file_teleport_autoupdate_v1_autoupdate_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AutoUpdateVersionSpecTools.ProtoReflect.Descriptor instead.
func (*AutoUpdateVersionSpecTools) Descriptor() ([]byte, []int) {
	return file_teleport_autoupdate_v1_autoupdate_proto_rawDescGZIP(), []int{8}
}

func (x *AutoUpdateVersionSpecTools) GetTargetVersion() string {
	if x != nil {
		return x.TargetVersion
	}
	return ""
}

// AutoUpdateVersionSpecAgents is the spec for the autoupdate version.
type AutoUpdateVersionSpecAgents struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// start_version is the version to update from.
	StartVersion string `protobuf:"bytes,1,opt,name=start_version,json=startVersion,proto3" json:"start_version,omitempty"`
	// target_version is the version to update to.
	TargetVersion string `protobuf:"bytes,2,opt,name=target_version,json=targetVersion,proto3" json:"target_version,omitempty"`
	// schedule to use for the rollout
	Schedule string `protobuf:"bytes,3,opt,name=schedule,proto3" json:"schedule,omitempty"`
	// autoupdate_mode to use for the rollout
	Mode          string `protobuf:"bytes,4,opt,name=mode,proto3" json:"mode,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AutoUpdateVersionSpecAgents) Reset() {
	*x = AutoUpdateVersionSpecAgents{}
	mi := &file_teleport_autoupdate_v1_autoupdate_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AutoUpdateVersionSpecAgents) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AutoUpdateVersionSpecAgents) ProtoMessage() {}

func (x *AutoUpdateVersionSpecAgents) ProtoReflect() protoreflect.Message {
	mi := &file_teleport_autoupdate_v1_autoupdate_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AutoUpdateVersionSpecAgents.ProtoReflect.Descriptor instead.
func (*AutoUpdateVersionSpecAgents) Descriptor() ([]byte, []int) {
	return file_teleport_autoupdate_v1_autoupdate_proto_rawDescGZIP(), []int{9}
}

func (x *AutoUpdateVersionSpecAgents) GetStartVersion() string {
	if x != nil {
		return x.StartVersion
	}
	return ""
}

func (x *AutoUpdateVersionSpecAgents) GetTargetVersion() string {
	if x != nil {
		return x.TargetVersion
	}
	return ""
}

func (x *AutoUpdateVersionSpecAgents) GetSchedule() string {
	if x != nil {
		return x.Schedule
	}
	return ""
}

func (x *AutoUpdateVersionSpecAgents) GetMode() string {
	if x != nil {
		return x.Mode
	}
	return ""
}

// AutoUpdateAgentRollout is the resource the Teleport Auth Service uses to track and control the rollout of a new
// agent version. This resource is written by the automatic agent update controller in the Teleport Auth Service
// and read by the Teleport Proxy Service.
type AutoUpdateAgentRollout struct {
	state         protoimpl.MessageState        `protogen:"open.v1"`
	Kind          string                        `protobuf:"bytes,1,opt,name=kind,proto3" json:"kind,omitempty"`
	SubKind       string                        `protobuf:"bytes,2,opt,name=sub_kind,json=subKind,proto3" json:"sub_kind,omitempty"`
	Version       string                        `protobuf:"bytes,3,opt,name=version,proto3" json:"version,omitempty"`
	Metadata      *v1.Metadata                  `protobuf:"bytes,4,opt,name=metadata,proto3" json:"metadata,omitempty"`
	Spec          *AutoUpdateAgentRolloutSpec   `protobuf:"bytes,5,opt,name=spec,proto3" json:"spec,omitempty"`
	Status        *AutoUpdateAgentRolloutStatus `protobuf:"bytes,6,opt,name=status,proto3" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AutoUpdateAgentRollout) Reset() {
	*x = AutoUpdateAgentRollout{}
	mi := &file_teleport_autoupdate_v1_autoupdate_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AutoUpdateAgentRollout) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AutoUpdateAgentRollout) ProtoMessage() {}

func (x *AutoUpdateAgentRollout) ProtoReflect() protoreflect.Message {
	mi := &file_teleport_autoupdate_v1_autoupdate_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AutoUpdateAgentRollout.ProtoReflect.Descriptor instead.
func (*AutoUpdateAgentRollout) Descriptor() ([]byte, []int) {
	return file_teleport_autoupdate_v1_autoupdate_proto_rawDescGZIP(), []int{10}
}

func (x *AutoUpdateAgentRollout) GetKind() string {
	if x != nil {
		return x.Kind
	}
	return ""
}

func (x *AutoUpdateAgentRollout) GetSubKind() string {
	if x != nil {
		return x.SubKind
	}
	return ""
}

func (x *AutoUpdateAgentRollout) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *AutoUpdateAgentRollout) GetMetadata() *v1.Metadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *AutoUpdateAgentRollout) GetSpec() *AutoUpdateAgentRolloutSpec {
	if x != nil {
		return x.Spec
	}
	return nil
}

func (x *AutoUpdateAgentRollout) GetStatus() *AutoUpdateAgentRolloutStatus {
	if x != nil {
		return x.Status
	}
	return nil
}

// AutoUpdateAgentRolloutSpec describes the desired agent rollout.
// This is built by merging the user-provided AutoUpdateConfigSpecAgents and the operator-provided
// AutoUpdateVersionSpecAgents.
type AutoUpdateAgentRolloutSpec struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// start_version is the version to update from.
	StartVersion string `protobuf:"bytes,1,opt,name=start_version,json=startVersion,proto3" json:"start_version,omitempty"`
	// target_version is the version to update to.
	TargetVersion string `protobuf:"bytes,2,opt,name=target_version,json=targetVersion,proto3" json:"target_version,omitempty"`
	// schedule to use for the rollout. Supported values are "regular" and "immediate".
	// - "regular" follows the regular group schedule
	// - "immediate" updates all the agents immediately
	Schedule string `protobuf:"bytes,3,opt,name=schedule,proto3" json:"schedule,omitempty"`
	// autoupdate_mode to use for the rollout. Supported modes are:
	// - "enabled": Teleport will update existing agents.
	// - "disabled": Teleport will not update existing agents.
	// - "suspended": Teleport will temporarily stop updating existing agents.
	AutoupdateMode string `protobuf:"bytes,4,opt,name=autoupdate_mode,json=autoupdateMode,proto3" json:"autoupdate_mode,omitempty"`
	// strategy to use for updating the agents. Supported strategies are:
	//   - "time-based": agents update as soon as their maintenance window starts. There is no dependency between groups.
	//     This strategy allows Teleport users to setup reliable follow-the-sun updates and enforce the maintenance window
	//     more strictly. A group finishes its update at the end of the maintenance window, regardless of the new version
	//     adoption rate. Agents that missed the maintenance window will not attempt to update until the next maintenance
	//     window.
	//   - "halt-on-failure": the update proceeds from the first group to the last group, ensuring that each group
	//     successfully updates before allowing the next group to proceed. This is the strategy that offers the best
	//     availability. A group finishes its update once most of its agents are running the correct version. Agents that
	//     missed the group update will try to catch back as soon as possible.
	Strategy string `protobuf:"bytes,5,opt,name=strategy,proto3" json:"strategy,omitempty"`
	// maintenance_window_duration is the maintenance window duration. This can only be set if `strategy` is "time-based".
	// Once the window is over, the group transitions to the done state. Existing agents won't be updated until the next
	// maintenance window.
	MaintenanceWindowDuration *durationpb.Duration `protobuf:"bytes,6,opt,name=maintenance_window_duration,json=maintenanceWindowDuration,proto3" json:"maintenance_window_duration,omitempty"`
	unknownFields             protoimpl.UnknownFields
	sizeCache                 protoimpl.SizeCache
}

func (x *AutoUpdateAgentRolloutSpec) Reset() {
	*x = AutoUpdateAgentRolloutSpec{}
	mi := &file_teleport_autoupdate_v1_autoupdate_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AutoUpdateAgentRolloutSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AutoUpdateAgentRolloutSpec) ProtoMessage() {}

func (x *AutoUpdateAgentRolloutSpec) ProtoReflect() protoreflect.Message {
	mi := &file_teleport_autoupdate_v1_autoupdate_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AutoUpdateAgentRolloutSpec.ProtoReflect.Descriptor instead.
func (*AutoUpdateAgentRolloutSpec) Descriptor() ([]byte, []int) {
	return file_teleport_autoupdate_v1_autoupdate_proto_rawDescGZIP(), []int{11}
}

func (x *AutoUpdateAgentRolloutSpec) GetStartVersion() string {
	if x != nil {
		return x.StartVersion
	}
	return ""
}

func (x *AutoUpdateAgentRolloutSpec) GetTargetVersion() string {
	if x != nil {
		return x.TargetVersion
	}
	return ""
}

func (x *AutoUpdateAgentRolloutSpec) GetSchedule() string {
	if x != nil {
		return x.Schedule
	}
	return ""
}

func (x *AutoUpdateAgentRolloutSpec) GetAutoupdateMode() string {
	if x != nil {
		return x.AutoupdateMode
	}
	return ""
}

func (x *AutoUpdateAgentRolloutSpec) GetStrategy() string {
	if x != nil {
		return x.Strategy
	}
	return ""
}

func (x *AutoUpdateAgentRolloutSpec) GetMaintenanceWindowDuration() *durationpb.Duration {
	if x != nil {
		return x.MaintenanceWindowDuration
	}
	return nil
}

// AutoUpdateAgentRolloutStatus tracks the current agent rollout status.
// The status is reset if any spec field changes except the mode.
type AutoUpdateAgentRolloutStatus struct {
	state  protoimpl.MessageState               `protogen:"open.v1"`
	Groups []*AutoUpdateAgentRolloutStatusGroup `protobuf:"bytes,1,rep,name=groups,proto3" json:"groups,omitempty"`
	State  AutoUpdateAgentRolloutState          `protobuf:"varint,2,opt,name=state,proto3,enum=teleport.autoupdate.v1.AutoUpdateAgentRolloutState" json:"state,omitempty"`
	// The start time is set when the rollout is created or reset. Usually this is caused by a version change.
	// The timestamp allows the controller to detect that the rollout just changed.
	// The controller will not start any group that should have been active before the start_time to avoid a double-update
	// effect.
	// For example, a group updates every day between 13:00 and 14:00. If the target version changes to 13:30, the group
	// will not start updating to the new version directly. The controller sees that the group theoretical start time is
	// before the rollout start time and the maintenance window belongs to the previous rollout.
	// When the timestamp is nil, the controller will ignore the start time and check and allow groups to activate.
	StartTime *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	// Time override is an optional timestamp making the autoupdate_agent_rollout controller use a specific time instead
	// of the system clock when evaluating time-based criteria. This field is used for testing and troubleshooting
	// purposes.
	TimeOverride  *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=time_override,json=timeOverride,proto3" json:"time_override,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AutoUpdateAgentRolloutStatus) Reset() {
	*x = AutoUpdateAgentRolloutStatus{}
	mi := &file_teleport_autoupdate_v1_autoupdate_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AutoUpdateAgentRolloutStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AutoUpdateAgentRolloutStatus) ProtoMessage() {}

func (x *AutoUpdateAgentRolloutStatus) ProtoReflect() protoreflect.Message {
	mi := &file_teleport_autoupdate_v1_autoupdate_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AutoUpdateAgentRolloutStatus.ProtoReflect.Descriptor instead.
func (*AutoUpdateAgentRolloutStatus) Descriptor() ([]byte, []int) {
	return file_teleport_autoupdate_v1_autoupdate_proto_rawDescGZIP(), []int{12}
}

func (x *AutoUpdateAgentRolloutStatus) GetGroups() []*AutoUpdateAgentRolloutStatusGroup {
	if x != nil {
		return x.Groups
	}
	return nil
}

func (x *AutoUpdateAgentRolloutStatus) GetState() AutoUpdateAgentRolloutState {
	if x != nil {
		return x.State
	}
	return AutoUpdateAgentRolloutState_AUTO_UPDATE_AGENT_ROLLOUT_STATE_UNSPECIFIED
}

func (x *AutoUpdateAgentRolloutStatus) GetStartTime() *timestamppb.Timestamp {
	if x != nil {
		return x.StartTime
	}
	return nil
}

func (x *AutoUpdateAgentRolloutStatus) GetTimeOverride() *timestamppb.Timestamp {
	if x != nil {
		return x.TimeOverride
	}
	return nil
}

// AutoUpdateAgentRolloutStatusGroup tracks the current agent rollout status of a specific group.
type AutoUpdateAgentRolloutStatusGroup struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// name of the group
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// start_time of the rollout
	StartTime *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	// state is the current state of the rollout.
	State AutoUpdateAgentGroupState `protobuf:"varint,3,opt,name=state,proto3,enum=teleport.autoupdate.v1.AutoUpdateAgentGroupState" json:"state,omitempty"`
	// last_update_time is the time of the previous update for this group.
	LastUpdateTime *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=last_update_time,json=lastUpdateTime,proto3" json:"last_update_time,omitempty"`
	// last_update_reason is the trigger for the last update
	LastUpdateReason string `protobuf:"bytes,5,opt,name=last_update_reason,json=lastUpdateReason,proto3" json:"last_update_reason,omitempty"`
	// config_days when the update can run. Supported values are "Mon", "Tue", "Wed", "Thu", "Fri", "Sat", "Sun" and "*"
	ConfigDays []string `protobuf:"bytes,6,rep,name=config_days,json=configDays,proto3" json:"config_days,omitempty"`
	// config_start_hour to initiate update
	ConfigStartHour int32 `protobuf:"varint,7,opt,name=config_start_hour,json=configStartHour,proto3" json:"config_start_hour,omitempty"`
	// config_wait_hours after last group succeeds before this group can run. This can only be used when the strategy is "halt-on-failure".
	// This field must be positive.
	ConfigWaitHours int32 `protobuf:"varint,9,opt,name=config_wait_hours,json=configWaitHours,proto3" json:"config_wait_hours,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *AutoUpdateAgentRolloutStatusGroup) Reset() {
	*x = AutoUpdateAgentRolloutStatusGroup{}
	mi := &file_teleport_autoupdate_v1_autoupdate_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AutoUpdateAgentRolloutStatusGroup) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AutoUpdateAgentRolloutStatusGroup) ProtoMessage() {}

func (x *AutoUpdateAgentRolloutStatusGroup) ProtoReflect() protoreflect.Message {
	mi := &file_teleport_autoupdate_v1_autoupdate_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AutoUpdateAgentRolloutStatusGroup.ProtoReflect.Descriptor instead.
func (*AutoUpdateAgentRolloutStatusGroup) Descriptor() ([]byte, []int) {
	return file_teleport_autoupdate_v1_autoupdate_proto_rawDescGZIP(), []int{13}
}

func (x *AutoUpdateAgentRolloutStatusGroup) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AutoUpdateAgentRolloutStatusGroup) GetStartTime() *timestamppb.Timestamp {
	if x != nil {
		return x.StartTime
	}
	return nil
}

func (x *AutoUpdateAgentRolloutStatusGroup) GetState() AutoUpdateAgentGroupState {
	if x != nil {
		return x.State
	}
	return AutoUpdateAgentGroupState_AUTO_UPDATE_AGENT_GROUP_STATE_UNSPECIFIED
}

func (x *AutoUpdateAgentRolloutStatusGroup) GetLastUpdateTime() *timestamppb.Timestamp {
	if x != nil {
		return x.LastUpdateTime
	}
	return nil
}

func (x *AutoUpdateAgentRolloutStatusGroup) GetLastUpdateReason() string {
	if x != nil {
		return x.LastUpdateReason
	}
	return ""
}

func (x *AutoUpdateAgentRolloutStatusGroup) GetConfigDays() []string {
	if x != nil {
		return x.ConfigDays
	}
	return nil
}

func (x *AutoUpdateAgentRolloutStatusGroup) GetConfigStartHour() int32 {
	if x != nil {
		return x.ConfigStartHour
	}
	return 0
}

func (x *AutoUpdateAgentRolloutStatusGroup) GetConfigWaitHours() int32 {
	if x != nil {
		return x.ConfigWaitHours
	}
	return 0
}

var File_teleport_autoupdate_v1_autoupdate_proto protoreflect.FileDescriptor

const file_teleport_autoupdate_v1_autoupdate_proto_rawDesc = "" +
	"\n" +
	"'teleport/autoupdate/v1/autoupdate.proto\x12\x16teleport.autoupdate.v1\x1a\x1egoogle/protobuf/duration.proto\x1a\x1fgoogle/protobuf/timestamp.proto\x1a!teleport/header/v1/metadata.proto\"\xd7\x01\n" +
	"\x10AutoUpdateConfig\x12\x12\n" +
	"\x04kind\x18\x01 \x01(\tR\x04kind\x12\x19\n" +
	"\bsub_kind\x18\x02 \x01(\tR\asubKind\x12\x18\n" +
	"\aversion\x18\x03 \x01(\tR\aversion\x128\n" +
	"\bmetadata\x18\x04 \x01(\v2\x1c.teleport.header.v1.MetadataR\bmetadata\x12@\n" +
	"\x04spec\x18\x05 \x01(\v2,.teleport.autoupdate.v1.AutoUpdateConfigSpecR\x04spec\"\xc3\x01\n" +
	"\x14AutoUpdateConfigSpec\x12G\n" +
	"\x05tools\x18\x02 \x01(\v21.teleport.autoupdate.v1.AutoUpdateConfigSpecToolsR\x05tools\x12J\n" +
	"\x06agents\x18\x03 \x01(\v22.teleport.autoupdate.v1.AutoUpdateConfigSpecAgentsR\x06agentsJ\x04\b\x01\x10\x02R\x10tools_autoupdate\"/\n" +
	"\x19AutoUpdateConfigSpecTools\x12\x12\n" +
	"\x04mode\x18\x01 \x01(\tR\x04mode\"\x8e\x02\n" +
	"\x1aAutoUpdateConfigSpecAgents\x12\x12\n" +
	"\x04mode\x18\x01 \x01(\tR\x04mode\x12\x1a\n" +
	"\bstrategy\x18\x02 \x01(\tR\bstrategy\x12Y\n" +
	"\x1bmaintenance_window_duration\x18\x03 \x01(\v2\x19.google.protobuf.DurationR\x19maintenanceWindowDuration\x12N\n" +
	"\tschedules\x18\x06 \x01(\v20.teleport.autoupdate.v1.AgentAutoUpdateSchedulesR\tschedulesJ\x04\b\x05\x10\x06R\x0fagent_schedules\"b\n" +
	"\x18AgentAutoUpdateSchedules\x12F\n" +
	"\aregular\x18\x01 \x03(\v2,.teleport.autoupdate.v1.AgentAutoUpdateGroupR\aregular\"\x8d\x01\n" +
	"\x14AgentAutoUpdateGroup\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x12\n" +
	"\x04days\x18\x02 \x03(\tR\x04days\x12\x1d\n" +
	"\n" +
	"start_hour\x18\x03 \x01(\x05R\tstartHour\x12\x1d\n" +
	"\n" +
	"wait_hours\x18\x05 \x01(\x05R\twaitHoursJ\x04\b\x04\x10\x05R\twait_days\"\xd9\x01\n" +
	"\x11AutoUpdateVersion\x12\x12\n" +
	"\x04kind\x18\x01 \x01(\tR\x04kind\x12\x19\n" +
	"\bsub_kind\x18\x02 \x01(\tR\asubKind\x12\x18\n" +
	"\aversion\x18\x03 \x01(\tR\aversion\x128\n" +
	"\bmetadata\x18\x04 \x01(\v2\x1c.teleport.header.v1.MetadataR\bmetadata\x12A\n" +
	"\x04spec\x18\x05 \x01(\v2-.teleport.autoupdate.v1.AutoUpdateVersionSpecR\x04spec\"\xc3\x01\n" +
	"\x15AutoUpdateVersionSpec\x12H\n" +
	"\x05tools\x18\x02 \x01(\v22.teleport.autoupdate.v1.AutoUpdateVersionSpecToolsR\x05tools\x12K\n" +
	"\x06agents\x18\x03 \x01(\v23.teleport.autoupdate.v1.AutoUpdateVersionSpecAgentsR\x06agentsJ\x04\b\x01\x10\x02R\rtools_version\"C\n" +
	"\x1aAutoUpdateVersionSpecTools\x12%\n" +
	"\x0etarget_version\x18\x01 \x01(\tR\rtargetVersion\"\x99\x01\n" +
	"\x1bAutoUpdateVersionSpecAgents\x12#\n" +
	"\rstart_version\x18\x01 \x01(\tR\fstartVersion\x12%\n" +
	"\x0etarget_version\x18\x02 \x01(\tR\rtargetVersion\x12\x1a\n" +
	"\bschedule\x18\x03 \x01(\tR\bschedule\x12\x12\n" +
	"\x04mode\x18\x04 \x01(\tR\x04mode\"\xb1\x02\n" +
	"\x16AutoUpdateAgentRollout\x12\x12\n" +
	"\x04kind\x18\x01 \x01(\tR\x04kind\x12\x19\n" +
	"\bsub_kind\x18\x02 \x01(\tR\asubKind\x12\x18\n" +
	"\aversion\x18\x03 \x01(\tR\aversion\x128\n" +
	"\bmetadata\x18\x04 \x01(\v2\x1c.teleport.header.v1.MetadataR\bmetadata\x12F\n" +
	"\x04spec\x18\x05 \x01(\v22.teleport.autoupdate.v1.AutoUpdateAgentRolloutSpecR\x04spec\x12L\n" +
	"\x06status\x18\x06 \x01(\v24.teleport.autoupdate.v1.AutoUpdateAgentRolloutStatusR\x06status\"\xa4\x02\n" +
	"\x1aAutoUpdateAgentRolloutSpec\x12#\n" +
	"\rstart_version\x18\x01 \x01(\tR\fstartVersion\x12%\n" +
	"\x0etarget_version\x18\x02 \x01(\tR\rtargetVersion\x12\x1a\n" +
	"\bschedule\x18\x03 \x01(\tR\bschedule\x12'\n" +
	"\x0fautoupdate_mode\x18\x04 \x01(\tR\x0eautoupdateMode\x12\x1a\n" +
	"\bstrategy\x18\x05 \x01(\tR\bstrategy\x12Y\n" +
	"\x1bmaintenance_window_duration\x18\x06 \x01(\v2\x19.google.protobuf.DurationR\x19maintenanceWindowDuration\"\xb8\x02\n" +
	"\x1cAutoUpdateAgentRolloutStatus\x12Q\n" +
	"\x06groups\x18\x01 \x03(\v29.teleport.autoupdate.v1.AutoUpdateAgentRolloutStatusGroupR\x06groups\x12I\n" +
	"\x05state\x18\x02 \x01(\x0e23.teleport.autoupdate.v1.AutoUpdateAgentRolloutStateR\x05state\x129\n" +
	"\n" +
	"start_time\x18\x03 \x01(\v2\x1a.google.protobuf.TimestampR\tstartTime\x12?\n" +
	"\rtime_override\x18\x04 \x01(\v2\x1a.google.protobuf.TimestampR\ftimeOverride\"\xc0\x03\n" +
	"!AutoUpdateAgentRolloutStatusGroup\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x129\n" +
	"\n" +
	"start_time\x18\x02 \x01(\v2\x1a.google.protobuf.TimestampR\tstartTime\x12G\n" +
	"\x05state\x18\x03 \x01(\x0e21.teleport.autoupdate.v1.AutoUpdateAgentGroupStateR\x05state\x12D\n" +
	"\x10last_update_time\x18\x04 \x01(\v2\x1a.google.protobuf.TimestampR\x0elastUpdateTime\x12,\n" +
	"\x12last_update_reason\x18\x05 \x01(\tR\x10lastUpdateReason\x12\x1f\n" +
	"\vconfig_days\x18\x06 \x03(\tR\n" +
	"configDays\x12*\n" +
	"\x11config_start_hour\x18\a \x01(\x05R\x0fconfigStartHour\x12*\n" +
	"\x11config_wait_hours\x18\t \x01(\x05R\x0fconfigWaitHoursJ\x04\b\b\x10\tR\x10config_wait_days*\xf7\x01\n" +
	"\x19AutoUpdateAgentGroupState\x12-\n" +
	")AUTO_UPDATE_AGENT_GROUP_STATE_UNSPECIFIED\x10\x00\x12+\n" +
	"'AUTO_UPDATE_AGENT_GROUP_STATE_UNSTARTED\x10\x01\x12(\n" +
	"$AUTO_UPDATE_AGENT_GROUP_STATE_ACTIVE\x10\x02\x12&\n" +
	"\"AUTO_UPDATE_AGENT_GROUP_STATE_DONE\x10\x03\x12,\n" +
	"(AUTO_UPDATE_AGENT_GROUP_STATE_ROLLEDBACK\x10\x04*\x83\x02\n" +
	"\x1bAutoUpdateAgentRolloutState\x12/\n" +
	"+AUTO_UPDATE_AGENT_ROLLOUT_STATE_UNSPECIFIED\x10\x00\x12-\n" +
	")AUTO_UPDATE_AGENT_ROLLOUT_STATE_UNSTARTED\x10\x01\x12*\n" +
	"&AUTO_UPDATE_AGENT_ROLLOUT_STATE_ACTIVE\x10\x02\x12(\n" +
	"$AUTO_UPDATE_AGENT_ROLLOUT_STATE_DONE\x10\x03\x12.\n" +
	"*AUTO_UPDATE_AGENT_ROLLOUT_STATE_ROLLEDBACK\x10\x04BVZTgithub.com/gravitational/teleport/api/gen/proto/go/teleport/autoupdate/v1;autoupdateb\x06proto3"

var (
	file_teleport_autoupdate_v1_autoupdate_proto_rawDescOnce sync.Once
	file_teleport_autoupdate_v1_autoupdate_proto_rawDescData []byte
)

func file_teleport_autoupdate_v1_autoupdate_proto_rawDescGZIP() []byte {
	file_teleport_autoupdate_v1_autoupdate_proto_rawDescOnce.Do(func() {
		file_teleport_autoupdate_v1_autoupdate_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_teleport_autoupdate_v1_autoupdate_proto_rawDesc), len(file_teleport_autoupdate_v1_autoupdate_proto_rawDesc)))
	})
	return file_teleport_autoupdate_v1_autoupdate_proto_rawDescData
}

var file_teleport_autoupdate_v1_autoupdate_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_teleport_autoupdate_v1_autoupdate_proto_msgTypes = make([]protoimpl.MessageInfo, 14)
var file_teleport_autoupdate_v1_autoupdate_proto_goTypes = []any{
	(AutoUpdateAgentGroupState)(0),            // 0: teleport.autoupdate.v1.AutoUpdateAgentGroupState
	(AutoUpdateAgentRolloutState)(0),          // 1: teleport.autoupdate.v1.AutoUpdateAgentRolloutState
	(*AutoUpdateConfig)(nil),                  // 2: teleport.autoupdate.v1.AutoUpdateConfig
	(*AutoUpdateConfigSpec)(nil),              // 3: teleport.autoupdate.v1.AutoUpdateConfigSpec
	(*AutoUpdateConfigSpecTools)(nil),         // 4: teleport.autoupdate.v1.AutoUpdateConfigSpecTools
	(*AutoUpdateConfigSpecAgents)(nil),        // 5: teleport.autoupdate.v1.AutoUpdateConfigSpecAgents
	(*AgentAutoUpdateSchedules)(nil),          // 6: teleport.autoupdate.v1.AgentAutoUpdateSchedules
	(*AgentAutoUpdateGroup)(nil),              // 7: teleport.autoupdate.v1.AgentAutoUpdateGroup
	(*AutoUpdateVersion)(nil),                 // 8: teleport.autoupdate.v1.AutoUpdateVersion
	(*AutoUpdateVersionSpec)(nil),             // 9: teleport.autoupdate.v1.AutoUpdateVersionSpec
	(*AutoUpdateVersionSpecTools)(nil),        // 10: teleport.autoupdate.v1.AutoUpdateVersionSpecTools
	(*AutoUpdateVersionSpecAgents)(nil),       // 11: teleport.autoupdate.v1.AutoUpdateVersionSpecAgents
	(*AutoUpdateAgentRollout)(nil),            // 12: teleport.autoupdate.v1.AutoUpdateAgentRollout
	(*AutoUpdateAgentRolloutSpec)(nil),        // 13: teleport.autoupdate.v1.AutoUpdateAgentRolloutSpec
	(*AutoUpdateAgentRolloutStatus)(nil),      // 14: teleport.autoupdate.v1.AutoUpdateAgentRolloutStatus
	(*AutoUpdateAgentRolloutStatusGroup)(nil), // 15: teleport.autoupdate.v1.AutoUpdateAgentRolloutStatusGroup
	(*v1.Metadata)(nil),                       // 16: teleport.header.v1.Metadata
	(*durationpb.Duration)(nil),               // 17: google.protobuf.Duration
	(*timestamppb.Timestamp)(nil),             // 18: google.protobuf.Timestamp
}
var file_teleport_autoupdate_v1_autoupdate_proto_depIdxs = []int32{
	16, // 0: teleport.autoupdate.v1.AutoUpdateConfig.metadata:type_name -> teleport.header.v1.Metadata
	3,  // 1: teleport.autoupdate.v1.AutoUpdateConfig.spec:type_name -> teleport.autoupdate.v1.AutoUpdateConfigSpec
	4,  // 2: teleport.autoupdate.v1.AutoUpdateConfigSpec.tools:type_name -> teleport.autoupdate.v1.AutoUpdateConfigSpecTools
	5,  // 3: teleport.autoupdate.v1.AutoUpdateConfigSpec.agents:type_name -> teleport.autoupdate.v1.AutoUpdateConfigSpecAgents
	17, // 4: teleport.autoupdate.v1.AutoUpdateConfigSpecAgents.maintenance_window_duration:type_name -> google.protobuf.Duration
	6,  // 5: teleport.autoupdate.v1.AutoUpdateConfigSpecAgents.schedules:type_name -> teleport.autoupdate.v1.AgentAutoUpdateSchedules
	7,  // 6: teleport.autoupdate.v1.AgentAutoUpdateSchedules.regular:type_name -> teleport.autoupdate.v1.AgentAutoUpdateGroup
	16, // 7: teleport.autoupdate.v1.AutoUpdateVersion.metadata:type_name -> teleport.header.v1.Metadata
	9,  // 8: teleport.autoupdate.v1.AutoUpdateVersion.spec:type_name -> teleport.autoupdate.v1.AutoUpdateVersionSpec
	10, // 9: teleport.autoupdate.v1.AutoUpdateVersionSpec.tools:type_name -> teleport.autoupdate.v1.AutoUpdateVersionSpecTools
	11, // 10: teleport.autoupdate.v1.AutoUpdateVersionSpec.agents:type_name -> teleport.autoupdate.v1.AutoUpdateVersionSpecAgents
	16, // 11: teleport.autoupdate.v1.AutoUpdateAgentRollout.metadata:type_name -> teleport.header.v1.Metadata
	13, // 12: teleport.autoupdate.v1.AutoUpdateAgentRollout.spec:type_name -> teleport.autoupdate.v1.AutoUpdateAgentRolloutSpec
	14, // 13: teleport.autoupdate.v1.AutoUpdateAgentRollout.status:type_name -> teleport.autoupdate.v1.AutoUpdateAgentRolloutStatus
	17, // 14: teleport.autoupdate.v1.AutoUpdateAgentRolloutSpec.maintenance_window_duration:type_name -> google.protobuf.Duration
	15, // 15: teleport.autoupdate.v1.AutoUpdateAgentRolloutStatus.groups:type_name -> teleport.autoupdate.v1.AutoUpdateAgentRolloutStatusGroup
	1,  // 16: teleport.autoupdate.v1.AutoUpdateAgentRolloutStatus.state:type_name -> teleport.autoupdate.v1.AutoUpdateAgentRolloutState
	18, // 17: teleport.autoupdate.v1.AutoUpdateAgentRolloutStatus.start_time:type_name -> google.protobuf.Timestamp
	18, // 18: teleport.autoupdate.v1.AutoUpdateAgentRolloutStatus.time_override:type_name -> google.protobuf.Timestamp
	18, // 19: teleport.autoupdate.v1.AutoUpdateAgentRolloutStatusGroup.start_time:type_name -> google.protobuf.Timestamp
	0,  // 20: teleport.autoupdate.v1.AutoUpdateAgentRolloutStatusGroup.state:type_name -> teleport.autoupdate.v1.AutoUpdateAgentGroupState
	18, // 21: teleport.autoupdate.v1.AutoUpdateAgentRolloutStatusGroup.last_update_time:type_name -> google.protobuf.Timestamp
	22, // [22:22] is the sub-list for method output_type
	22, // [22:22] is the sub-list for method input_type
	22, // [22:22] is the sub-list for extension type_name
	22, // [22:22] is the sub-list for extension extendee
	0,  // [0:22] is the sub-list for field type_name
}

func init() { file_teleport_autoupdate_v1_autoupdate_proto_init() }
func file_teleport_autoupdate_v1_autoupdate_proto_init() {
	if File_teleport_autoupdate_v1_autoupdate_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_teleport_autoupdate_v1_autoupdate_proto_rawDesc), len(file_teleport_autoupdate_v1_autoupdate_proto_rawDesc)),
			NumEnums:      2,
			NumMessages:   14,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_teleport_autoupdate_v1_autoupdate_proto_goTypes,
		DependencyIndexes: file_teleport_autoupdate_v1_autoupdate_proto_depIdxs,
		EnumInfos:         file_teleport_autoupdate_v1_autoupdate_proto_enumTypes,
		MessageInfos:      file_teleport_autoupdate_v1_autoupdate_proto_msgTypes,
	}.Build()
	File_teleport_autoupdate_v1_autoupdate_proto = out.File
	file_teleport_autoupdate_v1_autoupdate_proto_goTypes = nil
	file_teleport_autoupdate_v1_autoupdate_proto_depIdxs = nil
}
