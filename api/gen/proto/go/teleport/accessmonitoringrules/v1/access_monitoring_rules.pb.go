// Copyright 2024 Gravitational, Inc
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: teleport/accessmonitoringrules/v1/access_monitoring_rules.proto

package accessmonitoringrulesv1

import (
	v1 "github.com/gravitational/teleport/api/gen/proto/go/teleport/header/v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// AccessMonitoringRule represents an access monitoring rule resources.
type AccessMonitoringRule struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// metadata is the rules's metadata.
	Metadata *v1.Metadata `protobuf:"bytes,1,opt,name=metadata,proto3" json:"metadata,omitempty"`
	// kind is a resource kind
	Kind string `protobuf:"bytes,2,opt,name=kind,proto3" json:"kind,omitempty"`
	// sub_kind is an optional resource sub kind, used in some resources
	SubKind string `protobuf:"bytes,3,opt,name=sub_kind,json=subKind,proto3" json:"sub_kind,omitempty"`
	// version is version
	Version string `protobuf:"bytes,4,opt,name=version,proto3" json:"version,omitempty"`
	// Spec is an AccessMonitoringRule specification
	Spec          *AccessMonitoringRuleSpec `protobuf:"bytes,5,opt,name=spec,proto3" json:"spec,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AccessMonitoringRule) Reset() {
	*x = AccessMonitoringRule{}
	mi := &file_teleport_accessmonitoringrules_v1_access_monitoring_rules_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AccessMonitoringRule) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccessMonitoringRule) ProtoMessage() {}

func (x *AccessMonitoringRule) ProtoReflect() protoreflect.Message {
	mi := &file_teleport_accessmonitoringrules_v1_access_monitoring_rules_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccessMonitoringRule.ProtoReflect.Descriptor instead.
func (*AccessMonitoringRule) Descriptor() ([]byte, []int) {
	return file_teleport_accessmonitoringrules_v1_access_monitoring_rules_proto_rawDescGZIP(), []int{0}
}

func (x *AccessMonitoringRule) GetMetadata() *v1.Metadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *AccessMonitoringRule) GetKind() string {
	if x != nil {
		return x.Kind
	}
	return ""
}

func (x *AccessMonitoringRule) GetSubKind() string {
	if x != nil {
		return x.SubKind
	}
	return ""
}

func (x *AccessMonitoringRule) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *AccessMonitoringRule) GetSpec() *AccessMonitoringRuleSpec {
	if x != nil {
		return x.Spec
	}
	return nil
}

// AccessMonitoringRuleSpec is the access monitoring rule spec
type AccessMonitoringRuleSpec struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// subjects the rule operates on, can be a resource kind or a particular resource property.
	Subjects []string `protobuf:"bytes,1,rep,name=subjects,proto3" json:"subjects,omitempty"`
	// states are the desired state which the monitoring rule is attempting to bring the subjects matching the condition to.
	States []string `protobuf:"bytes,2,rep,name=states,proto3" json:"states,omitempty"`
	// condition is a predicate expression that operates on the specified subject resources,
	// and determines whether the subject will be moved into desired state.
	Condition string `protobuf:"bytes,3,opt,name=condition,proto3" json:"condition,omitempty"`
	// notification defines the plugin configuration for notifications if rule is triggered.
	// Both notification and automatic_review may be set within the same
	// access_monitoring_rule. If both fields are set, the rule will trigger
	// both notifications and automatic reviews for the same set of access events.
	// Separate plugins may be used if both notifications and automatic_reviews is
	// set.
	Notification *Notification `protobuf:"bytes,4,opt,name=notification,proto3" json:"notification,omitempty"`
	// automatic_review defines automatic review configurations for access requests.
	// Both notification and automatic_review may be set within the same
	// access_monitoring_rule. If both fields are set, the rule will trigger
	// both notifications and automatic reviews for the same set of access events.
	// Separate plugins may be used if both notifications and automatic_reviews is
	// set.
	AutomaticReview *AutomaticReview `protobuf:"bytes,6,opt,name=automatic_review,json=automaticReview,proto3" json:"automatic_review,omitempty"`
	// desired_state defines the desired state of the subject. For access request
	// subjects, the desired_state may be set to `reviewed` to indicate that the
	// access request should be automatically reviewed.
	DesiredState  string `protobuf:"bytes,7,opt,name=desired_state,json=desiredState,proto3" json:"desired_state,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AccessMonitoringRuleSpec) Reset() {
	*x = AccessMonitoringRuleSpec{}
	mi := &file_teleport_accessmonitoringrules_v1_access_monitoring_rules_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AccessMonitoringRuleSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccessMonitoringRuleSpec) ProtoMessage() {}

func (x *AccessMonitoringRuleSpec) ProtoReflect() protoreflect.Message {
	mi := &file_teleport_accessmonitoringrules_v1_access_monitoring_rules_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccessMonitoringRuleSpec.ProtoReflect.Descriptor instead.
func (*AccessMonitoringRuleSpec) Descriptor() ([]byte, []int) {
	return file_teleport_accessmonitoringrules_v1_access_monitoring_rules_proto_rawDescGZIP(), []int{1}
}

func (x *AccessMonitoringRuleSpec) GetSubjects() []string {
	if x != nil {
		return x.Subjects
	}
	return nil
}

func (x *AccessMonitoringRuleSpec) GetStates() []string {
	if x != nil {
		return x.States
	}
	return nil
}

func (x *AccessMonitoringRuleSpec) GetCondition() string {
	if x != nil {
		return x.Condition
	}
	return ""
}

func (x *AccessMonitoringRuleSpec) GetNotification() *Notification {
	if x != nil {
		return x.Notification
	}
	return nil
}

func (x *AccessMonitoringRuleSpec) GetAutomaticReview() *AutomaticReview {
	if x != nil {
		return x.AutomaticReview
	}
	return nil
}

func (x *AccessMonitoringRuleSpec) GetDesiredState() string {
	if x != nil {
		return x.DesiredState
	}
	return ""
}

// Notification contains configurations for plugin notification rules.
type Notification struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// name is the name of the plugin to which this configuration should apply.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// recipients is the list of recipients the plugin should notify.
	Recipients    []string `protobuf:"bytes,2,rep,name=recipients,proto3" json:"recipients,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Notification) Reset() {
	*x = Notification{}
	mi := &file_teleport_accessmonitoringrules_v1_access_monitoring_rules_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Notification) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Notification) ProtoMessage() {}

func (x *Notification) ProtoReflect() protoreflect.Message {
	mi := &file_teleport_accessmonitoringrules_v1_access_monitoring_rules_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Notification.ProtoReflect.Descriptor instead.
func (*Notification) Descriptor() ([]byte, []int) {
	return file_teleport_accessmonitoringrules_v1_access_monitoring_rules_proto_rawDescGZIP(), []int{2}
}

func (x *Notification) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Notification) GetRecipients() []string {
	if x != nil {
		return x.Recipients
	}
	return nil
}

// AutomaticReview contains configurations for automatic review rules.
type AutomaticReview struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// integration is the name of the integration that is responsible for monitoring
	// the rule. Set this value to `builtin` to monitor the rule with Teleport.
	Integration string `protobuf:"bytes,1,opt,name=integration,proto3" json:"integration,omitempty"`
	// decision specifies the proposed state of the access review. This can be
	// either 'APPROVED' or 'DENIED'.
	Decision      string `protobuf:"bytes,2,opt,name=decision,proto3" json:"decision,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AutomaticReview) Reset() {
	*x = AutomaticReview{}
	mi := &file_teleport_accessmonitoringrules_v1_access_monitoring_rules_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AutomaticReview) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AutomaticReview) ProtoMessage() {}

func (x *AutomaticReview) ProtoReflect() protoreflect.Message {
	mi := &file_teleport_accessmonitoringrules_v1_access_monitoring_rules_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AutomaticReview.ProtoReflect.Descriptor instead.
func (*AutomaticReview) Descriptor() ([]byte, []int) {
	return file_teleport_accessmonitoringrules_v1_access_monitoring_rules_proto_rawDescGZIP(), []int{3}
}

func (x *AutomaticReview) GetIntegration() string {
	if x != nil {
		return x.Integration
	}
	return ""
}

func (x *AutomaticReview) GetDecision() string {
	if x != nil {
		return x.Decision
	}
	return ""
}

// CreateAccessMonitoringRuleRequest is the request for CreateAccessMonitoringRule.
type CreateAccessMonitoringRuleRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// access_monitoring_rule is the specification of the rule to be created.
	Rule          *AccessMonitoringRule `protobuf:"bytes,1,opt,name=rule,proto3" json:"rule,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateAccessMonitoringRuleRequest) Reset() {
	*x = CreateAccessMonitoringRuleRequest{}
	mi := &file_teleport_accessmonitoringrules_v1_access_monitoring_rules_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateAccessMonitoringRuleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateAccessMonitoringRuleRequest) ProtoMessage() {}

func (x *CreateAccessMonitoringRuleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_teleport_accessmonitoringrules_v1_access_monitoring_rules_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateAccessMonitoringRuleRequest.ProtoReflect.Descriptor instead.
func (*CreateAccessMonitoringRuleRequest) Descriptor() ([]byte, []int) {
	return file_teleport_accessmonitoringrules_v1_access_monitoring_rules_proto_rawDescGZIP(), []int{4}
}

func (x *CreateAccessMonitoringRuleRequest) GetRule() *AccessMonitoringRule {
	if x != nil {
		return x.Rule
	}
	return nil
}

// UpdateAccessMonitoringRuleRequest is the request for UpdateAccessMonitoringRule.
type UpdateAccessMonitoringRuleRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// access_monitoring_rule is the specification of the rule to be updated.
	Rule          *AccessMonitoringRule `protobuf:"bytes,1,opt,name=rule,proto3" json:"rule,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateAccessMonitoringRuleRequest) Reset() {
	*x = UpdateAccessMonitoringRuleRequest{}
	mi := &file_teleport_accessmonitoringrules_v1_access_monitoring_rules_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateAccessMonitoringRuleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateAccessMonitoringRuleRequest) ProtoMessage() {}

func (x *UpdateAccessMonitoringRuleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_teleport_accessmonitoringrules_v1_access_monitoring_rules_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateAccessMonitoringRuleRequest.ProtoReflect.Descriptor instead.
func (*UpdateAccessMonitoringRuleRequest) Descriptor() ([]byte, []int) {
	return file_teleport_accessmonitoringrules_v1_access_monitoring_rules_proto_rawDescGZIP(), []int{5}
}

func (x *UpdateAccessMonitoringRuleRequest) GetRule() *AccessMonitoringRule {
	if x != nil {
		return x.Rule
	}
	return nil
}

// UpsertAccessMonitoringRuleRequest is the request for UpsertAccessMonitoringRule.
type UpsertAccessMonitoringRuleRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// access_monitoring_rule is the specification of the rule to be upserted.
	Rule          *AccessMonitoringRule `protobuf:"bytes,1,opt,name=rule,proto3" json:"rule,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpsertAccessMonitoringRuleRequest) Reset() {
	*x = UpsertAccessMonitoringRuleRequest{}
	mi := &file_teleport_accessmonitoringrules_v1_access_monitoring_rules_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpsertAccessMonitoringRuleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpsertAccessMonitoringRuleRequest) ProtoMessage() {}

func (x *UpsertAccessMonitoringRuleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_teleport_accessmonitoringrules_v1_access_monitoring_rules_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpsertAccessMonitoringRuleRequest.ProtoReflect.Descriptor instead.
func (*UpsertAccessMonitoringRuleRequest) Descriptor() ([]byte, []int) {
	return file_teleport_accessmonitoringrules_v1_access_monitoring_rules_proto_rawDescGZIP(), []int{6}
}

func (x *UpsertAccessMonitoringRuleRequest) GetRule() *AccessMonitoringRule {
	if x != nil {
		return x.Rule
	}
	return nil
}

// GetAccessMonitoringRuleRequest is the request for GetAccessMonitoringRule.
type GetAccessMonitoringRuleRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// resource_name is the name of the rule to be returned.
	Name          string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetAccessMonitoringRuleRequest) Reset() {
	*x = GetAccessMonitoringRuleRequest{}
	mi := &file_teleport_accessmonitoringrules_v1_access_monitoring_rules_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetAccessMonitoringRuleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAccessMonitoringRuleRequest) ProtoMessage() {}

func (x *GetAccessMonitoringRuleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_teleport_accessmonitoringrules_v1_access_monitoring_rules_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAccessMonitoringRuleRequest.ProtoReflect.Descriptor instead.
func (*GetAccessMonitoringRuleRequest) Descriptor() ([]byte, []int) {
	return file_teleport_accessmonitoringrules_v1_access_monitoring_rules_proto_rawDescGZIP(), []int{7}
}

func (x *GetAccessMonitoringRuleRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

// DeleteAccessMonitoringRuleRequest is the request for DeleteAccessMonitoringRule.
type DeleteAccessMonitoringRuleRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// resource_name is the name of the rule to be removed.
	Name          string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteAccessMonitoringRuleRequest) Reset() {
	*x = DeleteAccessMonitoringRuleRequest{}
	mi := &file_teleport_accessmonitoringrules_v1_access_monitoring_rules_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteAccessMonitoringRuleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteAccessMonitoringRuleRequest) ProtoMessage() {}

func (x *DeleteAccessMonitoringRuleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_teleport_accessmonitoringrules_v1_access_monitoring_rules_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteAccessMonitoringRuleRequest.ProtoReflect.Descriptor instead.
func (*DeleteAccessMonitoringRuleRequest) Descriptor() ([]byte, []int) {
	return file_teleport_accessmonitoringrules_v1_access_monitoring_rules_proto_rawDescGZIP(), []int{8}
}

func (x *DeleteAccessMonitoringRuleRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

// ListAccessMonitoringRulesRequest is the request for ListAccessMonitoringRules.
type ListAccessMonitoringRulesRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// page_size is the maximum number of items to return.
	// The server may impose a different page size at its discretion.
	PageSize int64 `protobuf:"varint,1,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	// page_token is the next_page_token value returned from a previous List request, if any.
	PageToken     string `protobuf:"bytes,2,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListAccessMonitoringRulesRequest) Reset() {
	*x = ListAccessMonitoringRulesRequest{}
	mi := &file_teleport_accessmonitoringrules_v1_access_monitoring_rules_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListAccessMonitoringRulesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAccessMonitoringRulesRequest) ProtoMessage() {}

func (x *ListAccessMonitoringRulesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_teleport_accessmonitoringrules_v1_access_monitoring_rules_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAccessMonitoringRulesRequest.ProtoReflect.Descriptor instead.
func (*ListAccessMonitoringRulesRequest) Descriptor() ([]byte, []int) {
	return file_teleport_accessmonitoringrules_v1_access_monitoring_rules_proto_rawDescGZIP(), []int{9}
}

func (x *ListAccessMonitoringRulesRequest) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListAccessMonitoringRulesRequest) GetPageToken() string {
	if x != nil {
		return x.PageToken
	}
	return ""
}

// ListAccessMonitoringRulesWithFilterRequest is the request for ListAccessMonitoringRulesWithFilter.
type ListAccessMonitoringRulesWithFilterRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// page_size is the maximum number of items to return.
	// The server may impose a different page size at its discretion.
	PageSize int64 `protobuf:"varint,1,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	// page_token is the next_page_token value returned from a previous List request, if any.
	PageToken string `protobuf:"bytes,2,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
	// subjects are the subjects the access monitoring rules must have. This field is optional.
	Subjects []string `protobuf:"bytes,3,rep,name=subjects,proto3" json:"subjects,omitempty"`
	// notification_name is the value of the notification name field the rule must have. This field is optional.
	NotificationName string `protobuf:"bytes,4,opt,name=notification_name,json=notificationName,proto3" json:"notification_name,omitempty"`
	// automatic_review_name is the value of the automatic_review integration field
	// the rule must have. This field is optional.
	AutomaticReviewName string `protobuf:"bytes,6,opt,name=automatic_review_name,json=automaticReviewName,proto3" json:"automatic_review_name,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *ListAccessMonitoringRulesWithFilterRequest) Reset() {
	*x = ListAccessMonitoringRulesWithFilterRequest{}
	mi := &file_teleport_accessmonitoringrules_v1_access_monitoring_rules_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListAccessMonitoringRulesWithFilterRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAccessMonitoringRulesWithFilterRequest) ProtoMessage() {}

func (x *ListAccessMonitoringRulesWithFilterRequest) ProtoReflect() protoreflect.Message {
	mi := &file_teleport_accessmonitoringrules_v1_access_monitoring_rules_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAccessMonitoringRulesWithFilterRequest.ProtoReflect.Descriptor instead.
func (*ListAccessMonitoringRulesWithFilterRequest) Descriptor() ([]byte, []int) {
	return file_teleport_accessmonitoringrules_v1_access_monitoring_rules_proto_rawDescGZIP(), []int{10}
}

func (x *ListAccessMonitoringRulesWithFilterRequest) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListAccessMonitoringRulesWithFilterRequest) GetPageToken() string {
	if x != nil {
		return x.PageToken
	}
	return ""
}

func (x *ListAccessMonitoringRulesWithFilterRequest) GetSubjects() []string {
	if x != nil {
		return x.Subjects
	}
	return nil
}

func (x *ListAccessMonitoringRulesWithFilterRequest) GetNotificationName() string {
	if x != nil {
		return x.NotificationName
	}
	return ""
}

func (x *ListAccessMonitoringRulesWithFilterRequest) GetAutomaticReviewName() string {
	if x != nil {
		return x.AutomaticReviewName
	}
	return ""
}

// ListAccessMonitoringRulesResponse is the response from ListAccessMonitoringRules.
type ListAccessMonitoringRulesResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The page of AccessMonitoringRule that matched the request.
	Rules []*AccessMonitoringRule `protobuf:"bytes,1,rep,name=rules,proto3" json:"rules,omitempty"`
	// Token to retrieve the next page of results, or empty if there are no
	// more results in the list.
	NextPageToken string `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListAccessMonitoringRulesResponse) Reset() {
	*x = ListAccessMonitoringRulesResponse{}
	mi := &file_teleport_accessmonitoringrules_v1_access_monitoring_rules_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListAccessMonitoringRulesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAccessMonitoringRulesResponse) ProtoMessage() {}

func (x *ListAccessMonitoringRulesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_teleport_accessmonitoringrules_v1_access_monitoring_rules_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAccessMonitoringRulesResponse.ProtoReflect.Descriptor instead.
func (*ListAccessMonitoringRulesResponse) Descriptor() ([]byte, []int) {
	return file_teleport_accessmonitoringrules_v1_access_monitoring_rules_proto_rawDescGZIP(), []int{11}
}

func (x *ListAccessMonitoringRulesResponse) GetRules() []*AccessMonitoringRule {
	if x != nil {
		return x.Rules
	}
	return nil
}

func (x *ListAccessMonitoringRulesResponse) GetNextPageToken() string {
	if x != nil {
		return x.NextPageToken
	}
	return ""
}

// ListAccessMonitoringRulesWithFilterResponse is the response from ListAccessMonitoringRulesWithFilter.
type ListAccessMonitoringRulesWithFilterResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The page of AccessMonitoringRule that matched the request.
	Rules []*AccessMonitoringRule `protobuf:"bytes,1,rep,name=rules,proto3" json:"rules,omitempty"`
	// Token to retrieve the next page of results, or empty if there are no
	// more results in the list.
	NextPageToken string `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListAccessMonitoringRulesWithFilterResponse) Reset() {
	*x = ListAccessMonitoringRulesWithFilterResponse{}
	mi := &file_teleport_accessmonitoringrules_v1_access_monitoring_rules_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListAccessMonitoringRulesWithFilterResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAccessMonitoringRulesWithFilterResponse) ProtoMessage() {}

func (x *ListAccessMonitoringRulesWithFilterResponse) ProtoReflect() protoreflect.Message {
	mi := &file_teleport_accessmonitoringrules_v1_access_monitoring_rules_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAccessMonitoringRulesWithFilterResponse.ProtoReflect.Descriptor instead.
func (*ListAccessMonitoringRulesWithFilterResponse) Descriptor() ([]byte, []int) {
	return file_teleport_accessmonitoringrules_v1_access_monitoring_rules_proto_rawDescGZIP(), []int{12}
}

func (x *ListAccessMonitoringRulesWithFilterResponse) GetRules() []*AccessMonitoringRule {
	if x != nil {
		return x.Rules
	}
	return nil
}

func (x *ListAccessMonitoringRulesWithFilterResponse) GetNextPageToken() string {
	if x != nil {
		return x.NextPageToken
	}
	return ""
}

var File_teleport_accessmonitoringrules_v1_access_monitoring_rules_proto protoreflect.FileDescriptor

const file_teleport_accessmonitoringrules_v1_access_monitoring_rules_proto_rawDesc = "" +
	"\n" +
	"?teleport/accessmonitoringrules/v1/access_monitoring_rules.proto\x12!teleport.accessmonitoringrules.v1\x1a!teleport/header/v1/metadata.proto\"\xea\x01\n" +
	"\x14AccessMonitoringRule\x128\n" +
	"\bmetadata\x18\x01 \x01(\v2\x1c.teleport.header.v1.MetadataR\bmetadata\x12\x12\n" +
	"\x04kind\x18\x02 \x01(\tR\x04kind\x12\x19\n" +
	"\bsub_kind\x18\x03 \x01(\tR\asubKind\x12\x18\n" +
	"\aversion\x18\x04 \x01(\tR\aversion\x12O\n" +
	"\x04spec\x18\x05 \x01(\v2;.teleport.accessmonitoringrules.v1.AccessMonitoringRuleSpecR\x04spec\"\xdf\x02\n" +
	"\x18AccessMonitoringRuleSpec\x12\x1a\n" +
	"\bsubjects\x18\x01 \x03(\tR\bsubjects\x12\x16\n" +
	"\x06states\x18\x02 \x03(\tR\x06states\x12\x1c\n" +
	"\tcondition\x18\x03 \x01(\tR\tcondition\x12S\n" +
	"\fnotification\x18\x04 \x01(\v2/.teleport.accessmonitoringrules.v1.NotificationR\fnotification\x12]\n" +
	"\x10automatic_review\x18\x06 \x01(\v22.teleport.accessmonitoringrules.v1.AutomaticReviewR\x0fautomaticReview\x12#\n" +
	"\rdesired_state\x18\a \x01(\tR\fdesiredStateJ\x04\b\x05\x10\x06R\x12automatic_approval\"B\n" +
	"\fNotification\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x1e\n" +
	"\n" +
	"recipients\x18\x02 \x03(\tR\n" +
	"recipients\"O\n" +
	"\x0fAutomaticReview\x12 \n" +
	"\vintegration\x18\x01 \x01(\tR\vintegration\x12\x1a\n" +
	"\bdecision\x18\x02 \x01(\tR\bdecision\"p\n" +
	"!CreateAccessMonitoringRuleRequest\x12K\n" +
	"\x04rule\x18\x01 \x01(\v27.teleport.accessmonitoringrules.v1.AccessMonitoringRuleR\x04rule\"p\n" +
	"!UpdateAccessMonitoringRuleRequest\x12K\n" +
	"\x04rule\x18\x01 \x01(\v27.teleport.accessmonitoringrules.v1.AccessMonitoringRuleR\x04rule\"p\n" +
	"!UpsertAccessMonitoringRuleRequest\x12K\n" +
	"\x04rule\x18\x01 \x01(\v27.teleport.accessmonitoringrules.v1.AccessMonitoringRuleR\x04rule\"4\n" +
	"\x1eGetAccessMonitoringRuleRequest\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\"7\n" +
	"!DeleteAccessMonitoringRuleRequest\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\"^\n" +
	" ListAccessMonitoringRulesRequest\x12\x1b\n" +
	"\tpage_size\x18\x01 \x01(\x03R\bpageSize\x12\x1d\n" +
	"\n" +
	"page_token\x18\x02 \x01(\tR\tpageToken\"\x84\x02\n" +
	"*ListAccessMonitoringRulesWithFilterRequest\x12\x1b\n" +
	"\tpage_size\x18\x01 \x01(\x03R\bpageSize\x12\x1d\n" +
	"\n" +
	"page_token\x18\x02 \x01(\tR\tpageToken\x12\x1a\n" +
	"\bsubjects\x18\x03 \x03(\tR\bsubjects\x12+\n" +
	"\x11notification_name\x18\x04 \x01(\tR\x10notificationName\x122\n" +
	"\x15automatic_review_name\x18\x06 \x01(\tR\x13automaticReviewNameJ\x04\b\x05\x10\x06R\x17automatic_approval_name\"\x9a\x01\n" +
	"!ListAccessMonitoringRulesResponse\x12M\n" +
	"\x05rules\x18\x01 \x03(\v27.teleport.accessmonitoringrules.v1.AccessMonitoringRuleR\x05rules\x12&\n" +
	"\x0fnext_page_token\x18\x02 \x01(\tR\rnextPageToken\"\xa4\x01\n" +
	"+ListAccessMonitoringRulesWithFilterResponse\x12M\n" +
	"\x05rules\x18\x01 \x03(\v27.teleport.accessmonitoringrules.v1.AccessMonitoringRuleR\x05rules\x12&\n" +
	"\x0fnext_page_token\x18\x02 \x01(\tR\rnextPageTokenBnZlgithub.com/gravitational/teleport/api/gen/proto/go/teleport/accessmonitoringrules/v1;accessmonitoringrulesv1b\x06proto3"

var (
	file_teleport_accessmonitoringrules_v1_access_monitoring_rules_proto_rawDescOnce sync.Once
	file_teleport_accessmonitoringrules_v1_access_monitoring_rules_proto_rawDescData []byte
)

func file_teleport_accessmonitoringrules_v1_access_monitoring_rules_proto_rawDescGZIP() []byte {
	file_teleport_accessmonitoringrules_v1_access_monitoring_rules_proto_rawDescOnce.Do(func() {
		file_teleport_accessmonitoringrules_v1_access_monitoring_rules_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_teleport_accessmonitoringrules_v1_access_monitoring_rules_proto_rawDesc), len(file_teleport_accessmonitoringrules_v1_access_monitoring_rules_proto_rawDesc)))
	})
	return file_teleport_accessmonitoringrules_v1_access_monitoring_rules_proto_rawDescData
}

var file_teleport_accessmonitoringrules_v1_access_monitoring_rules_proto_msgTypes = make([]protoimpl.MessageInfo, 13)
var file_teleport_accessmonitoringrules_v1_access_monitoring_rules_proto_goTypes = []any{
	(*AccessMonitoringRule)(nil),                        // 0: teleport.accessmonitoringrules.v1.AccessMonitoringRule
	(*AccessMonitoringRuleSpec)(nil),                    // 1: teleport.accessmonitoringrules.v1.AccessMonitoringRuleSpec
	(*Notification)(nil),                                // 2: teleport.accessmonitoringrules.v1.Notification
	(*AutomaticReview)(nil),                             // 3: teleport.accessmonitoringrules.v1.AutomaticReview
	(*CreateAccessMonitoringRuleRequest)(nil),           // 4: teleport.accessmonitoringrules.v1.CreateAccessMonitoringRuleRequest
	(*UpdateAccessMonitoringRuleRequest)(nil),           // 5: teleport.accessmonitoringrules.v1.UpdateAccessMonitoringRuleRequest
	(*UpsertAccessMonitoringRuleRequest)(nil),           // 6: teleport.accessmonitoringrules.v1.UpsertAccessMonitoringRuleRequest
	(*GetAccessMonitoringRuleRequest)(nil),              // 7: teleport.accessmonitoringrules.v1.GetAccessMonitoringRuleRequest
	(*DeleteAccessMonitoringRuleRequest)(nil),           // 8: teleport.accessmonitoringrules.v1.DeleteAccessMonitoringRuleRequest
	(*ListAccessMonitoringRulesRequest)(nil),            // 9: teleport.accessmonitoringrules.v1.ListAccessMonitoringRulesRequest
	(*ListAccessMonitoringRulesWithFilterRequest)(nil),  // 10: teleport.accessmonitoringrules.v1.ListAccessMonitoringRulesWithFilterRequest
	(*ListAccessMonitoringRulesResponse)(nil),           // 11: teleport.accessmonitoringrules.v1.ListAccessMonitoringRulesResponse
	(*ListAccessMonitoringRulesWithFilterResponse)(nil), // 12: teleport.accessmonitoringrules.v1.ListAccessMonitoringRulesWithFilterResponse
	(*v1.Metadata)(nil),                                 // 13: teleport.header.v1.Metadata
}
var file_teleport_accessmonitoringrules_v1_access_monitoring_rules_proto_depIdxs = []int32{
	13, // 0: teleport.accessmonitoringrules.v1.AccessMonitoringRule.metadata:type_name -> teleport.header.v1.Metadata
	1,  // 1: teleport.accessmonitoringrules.v1.AccessMonitoringRule.spec:type_name -> teleport.accessmonitoringrules.v1.AccessMonitoringRuleSpec
	2,  // 2: teleport.accessmonitoringrules.v1.AccessMonitoringRuleSpec.notification:type_name -> teleport.accessmonitoringrules.v1.Notification
	3,  // 3: teleport.accessmonitoringrules.v1.AccessMonitoringRuleSpec.automatic_review:type_name -> teleport.accessmonitoringrules.v1.AutomaticReview
	0,  // 4: teleport.accessmonitoringrules.v1.CreateAccessMonitoringRuleRequest.rule:type_name -> teleport.accessmonitoringrules.v1.AccessMonitoringRule
	0,  // 5: teleport.accessmonitoringrules.v1.UpdateAccessMonitoringRuleRequest.rule:type_name -> teleport.accessmonitoringrules.v1.AccessMonitoringRule
	0,  // 6: teleport.accessmonitoringrules.v1.UpsertAccessMonitoringRuleRequest.rule:type_name -> teleport.accessmonitoringrules.v1.AccessMonitoringRule
	0,  // 7: teleport.accessmonitoringrules.v1.ListAccessMonitoringRulesResponse.rules:type_name -> teleport.accessmonitoringrules.v1.AccessMonitoringRule
	0,  // 8: teleport.accessmonitoringrules.v1.ListAccessMonitoringRulesWithFilterResponse.rules:type_name -> teleport.accessmonitoringrules.v1.AccessMonitoringRule
	9,  // [9:9] is the sub-list for method output_type
	9,  // [9:9] is the sub-list for method input_type
	9,  // [9:9] is the sub-list for extension type_name
	9,  // [9:9] is the sub-list for extension extendee
	0,  // [0:9] is the sub-list for field type_name
}

func init() { file_teleport_accessmonitoringrules_v1_access_monitoring_rules_proto_init() }
func file_teleport_accessmonitoringrules_v1_access_monitoring_rules_proto_init() {
	if File_teleport_accessmonitoringrules_v1_access_monitoring_rules_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_teleport_accessmonitoringrules_v1_access_monitoring_rules_proto_rawDesc), len(file_teleport_accessmonitoringrules_v1_access_monitoring_rules_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   13,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_teleport_accessmonitoringrules_v1_access_monitoring_rules_proto_goTypes,
		DependencyIndexes: file_teleport_accessmonitoringrules_v1_access_monitoring_rules_proto_depIdxs,
		MessageInfos:      file_teleport_accessmonitoringrules_v1_access_monitoring_rules_proto_msgTypes,
	}.Build()
	File_teleport_accessmonitoringrules_v1_access_monitoring_rules_proto = out.File
	file_teleport_accessmonitoringrules_v1_access_monitoring_rules_proto_goTypes = nil
	file_teleport_accessmonitoringrules_v1_access_monitoring_rules_proto_depIdxs = nil
}
