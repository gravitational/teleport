// Copyright 2025 Gravitational, Inc
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.9
// 	protoc        (unknown)
// source: teleport/delegation/v1/delegation_profile_resource.proto

package delegationv1

import (
	v1 "github.com/gravitational/teleport/api/gen/proto/go/teleport/header/v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	durationpb "google.golang.org/protobuf/types/known/durationpb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// DelegationProfile is a set of pre-selected parameters from which a delegation
// session can be created. It describes the resources a given workload requires
// access to, their bot/workload identities, desired session length, and details
// for the user consent screen.
type DelegationProfile struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The kind of resource represented. This is always `delegation_profile`.
	Kind string `protobuf:"bytes,1,opt,name=kind,proto3" json:"kind,omitempty"`
	// Differentiates variations of the same kind. All resources should contain
	// one, even if it is never populated.
	SubKind string `protobuf:"bytes,2,opt,name=sub_kind,json=subKind,proto3" json:"sub_kind,omitempty"`
	// The version of the resource being represented.
	Version string `protobuf:"bytes,3,opt,name=version,proto3" json:"version,omitempty"`
	// Common metadata that all resources share.
	Metadata *v1.Metadata `protobuf:"bytes,4,opt,name=metadata,proto3" json:"metadata,omitempty"`
	// Delegation profile configuration.
	Spec          *DelegationProfileSpec `protobuf:"bytes,5,opt,name=spec,proto3" json:"spec,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DelegationProfile) Reset() {
	*x = DelegationProfile{}
	mi := &file_teleport_delegation_v1_delegation_profile_resource_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DelegationProfile) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelegationProfile) ProtoMessage() {}

func (x *DelegationProfile) ProtoReflect() protoreflect.Message {
	mi := &file_teleport_delegation_v1_delegation_profile_resource_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelegationProfile.ProtoReflect.Descriptor instead.
func (*DelegationProfile) Descriptor() ([]byte, []int) {
	return file_teleport_delegation_v1_delegation_profile_resource_proto_rawDescGZIP(), []int{0}
}

func (x *DelegationProfile) GetKind() string {
	if x != nil {
		return x.Kind
	}
	return ""
}

func (x *DelegationProfile) GetSubKind() string {
	if x != nil {
		return x.SubKind
	}
	return ""
}

func (x *DelegationProfile) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *DelegationProfile) GetMetadata() *v1.Metadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *DelegationProfile) GetSpec() *DelegationProfileSpec {
	if x != nil {
		return x.Spec
	}
	return nil
}

// Delegation profile configuration.
type DelegationProfileSpec struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Resources that will be accessible in sessions created using this profile.
	//
	// In the Resource ID format: /<cluster>/<kind>/<name>/<sub resource name>
	RequiredResources []string `protobuf:"bytes,1,rep,name=required_resources,json=requiredResources,proto3" json:"required_resources,omitempty"`
	// Users (i.e. bots or workloads) authorized to use sessions created using
	// this profile.
	AuthorizedUsers []*DelegationUserSpec `protobuf:"bytes,2,rep,name=authorized_users,json=authorizedUsers,proto3" json:"authorized_users,omitempty"`
	// Default TTL of delegation sessions created using this profile.
	DefaultSessionLength *durationpb.Duration `protobuf:"bytes,3,opt,name=default_session_length,json=defaultSessionLength,proto3,oneof" json:"default_session_length,omitempty"`
	// Configuration for the delegation consent screen.
	Consent       *DelegationConsentSpec `protobuf:"bytes,4,opt,name=consent,proto3,oneof" json:"consent,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DelegationProfileSpec) Reset() {
	*x = DelegationProfileSpec{}
	mi := &file_teleport_delegation_v1_delegation_profile_resource_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DelegationProfileSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelegationProfileSpec) ProtoMessage() {}

func (x *DelegationProfileSpec) ProtoReflect() protoreflect.Message {
	mi := &file_teleport_delegation_v1_delegation_profile_resource_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelegationProfileSpec.ProtoReflect.Descriptor instead.
func (*DelegationProfileSpec) Descriptor() ([]byte, []int) {
	return file_teleport_delegation_v1_delegation_profile_resource_proto_rawDescGZIP(), []int{1}
}

func (x *DelegationProfileSpec) GetRequiredResources() []string {
	if x != nil {
		return x.RequiredResources
	}
	return nil
}

func (x *DelegationProfileSpec) GetAuthorizedUsers() []*DelegationUserSpec {
	if x != nil {
		return x.AuthorizedUsers
	}
	return nil
}

func (x *DelegationProfileSpec) GetDefaultSessionLength() *durationpb.Duration {
	if x != nil {
		return x.DefaultSessionLength
	}
	return nil
}

func (x *DelegationProfileSpec) GetConsent() *DelegationConsentSpec {
	if x != nil {
		return x.Consent
	}
	return nil
}

// DelegationUserSpec describes a bot or workload who is allowed to use a
// delegation session.
type DelegationUserSpec struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Type of user (currently only "bot" is supported).
	Type string `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	// Types that are valid to be assigned to Matcher:
	//
	//	*DelegationUserSpec_BotName
	Matcher       isDelegationUserSpec_Matcher `protobuf_oneof:"matcher"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DelegationUserSpec) Reset() {
	*x = DelegationUserSpec{}
	mi := &file_teleport_delegation_v1_delegation_profile_resource_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DelegationUserSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelegationUserSpec) ProtoMessage() {}

func (x *DelegationUserSpec) ProtoReflect() protoreflect.Message {
	mi := &file_teleport_delegation_v1_delegation_profile_resource_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelegationUserSpec.ProtoReflect.Descriptor instead.
func (*DelegationUserSpec) Descriptor() ([]byte, []int) {
	return file_teleport_delegation_v1_delegation_profile_resource_proto_rawDescGZIP(), []int{2}
}

func (x *DelegationUserSpec) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *DelegationUserSpec) GetMatcher() isDelegationUserSpec_Matcher {
	if x != nil {
		return x.Matcher
	}
	return nil
}

func (x *DelegationUserSpec) GetBotName() string {
	if x != nil {
		if x, ok := x.Matcher.(*DelegationUserSpec_BotName); ok {
			return x.BotName
		}
	}
	return ""
}

type isDelegationUserSpec_Matcher interface {
	isDelegationUserSpec_Matcher()
}

type DelegationUserSpec_BotName struct {
	// Name of the bot who may use the delegation session.
	BotName string `protobuf:"bytes,2,opt,name=bot_name,json=botName,proto3,oneof"`
}

func (*DelegationUserSpec_BotName) isDelegationUserSpec_Matcher() {}

// DelegationConsentSpec contains configuration for the delegation consent screen.
type DelegationConsentSpec struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Succinct description of the bot/workload to whom the user is delegating
	// their access (e.g. "Payroll Agent").
	Title string `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	// Longer-form explanation of what the bot/workload does, and why it needs
	// the user's access.
	Description string `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	// Allowlist of URLs where the user may be redirected after giving their
	// consent. Used to prevent open-redirect vulnerabilities.
	AllowedRedirectUrls []string `protobuf:"bytes,3,rep,name=allowed_redirect_urls,json=allowedRedirectUrls,proto3" json:"allowed_redirect_urls,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *DelegationConsentSpec) Reset() {
	*x = DelegationConsentSpec{}
	mi := &file_teleport_delegation_v1_delegation_profile_resource_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DelegationConsentSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelegationConsentSpec) ProtoMessage() {}

func (x *DelegationConsentSpec) ProtoReflect() protoreflect.Message {
	mi := &file_teleport_delegation_v1_delegation_profile_resource_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelegationConsentSpec.ProtoReflect.Descriptor instead.
func (*DelegationConsentSpec) Descriptor() ([]byte, []int) {
	return file_teleport_delegation_v1_delegation_profile_resource_proto_rawDescGZIP(), []int{3}
}

func (x *DelegationConsentSpec) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *DelegationConsentSpec) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *DelegationConsentSpec) GetAllowedRedirectUrls() []string {
	if x != nil {
		return x.AllowedRedirectUrls
	}
	return nil
}

var File_teleport_delegation_v1_delegation_profile_resource_proto protoreflect.FileDescriptor

const file_teleport_delegation_v1_delegation_profile_resource_proto_rawDesc = "" +
	"\n" +
	"8teleport/delegation/v1/delegation_profile_resource.proto\x12\x16teleport.delegation.v1\x1a\x1egoogle/protobuf/duration.proto\x1a!teleport/header/v1/metadata.proto\"\xd9\x01\n" +
	"\x11DelegationProfile\x12\x12\n" +
	"\x04kind\x18\x01 \x01(\tR\x04kind\x12\x19\n" +
	"\bsub_kind\x18\x02 \x01(\tR\asubKind\x12\x18\n" +
	"\aversion\x18\x03 \x01(\tR\aversion\x128\n" +
	"\bmetadata\x18\x04 \x01(\v2\x1c.teleport.header.v1.MetadataR\bmetadata\x12A\n" +
	"\x04spec\x18\x05 \x01(\v2-.teleport.delegation.v1.DelegationProfileSpecR\x04spec\"\xe8\x02\n" +
	"\x15DelegationProfileSpec\x12-\n" +
	"\x12required_resources\x18\x01 \x03(\tR\x11requiredResources\x12U\n" +
	"\x10authorized_users\x18\x02 \x03(\v2*.teleport.delegation.v1.DelegationUserSpecR\x0fauthorizedUsers\x12T\n" +
	"\x16default_session_length\x18\x03 \x01(\v2\x19.google.protobuf.DurationH\x00R\x14defaultSessionLength\x88\x01\x01\x12L\n" +
	"\aconsent\x18\x04 \x01(\v2-.teleport.delegation.v1.DelegationConsentSpecH\x01R\aconsent\x88\x01\x01B\x19\n" +
	"\x17_default_session_lengthB\n" +
	"\n" +
	"\b_consent\"P\n" +
	"\x12DelegationUserSpec\x12\x12\n" +
	"\x04type\x18\x01 \x01(\tR\x04type\x12\x1b\n" +
	"\bbot_name\x18\x02 \x01(\tH\x00R\abotNameB\t\n" +
	"\amatcher\"\x83\x01\n" +
	"\x15DelegationConsentSpec\x12\x14\n" +
	"\x05title\x18\x01 \x01(\tR\x05title\x12 \n" +
	"\vdescription\x18\x02 \x01(\tR\vdescription\x122\n" +
	"\x15allowed_redirect_urls\x18\x03 \x03(\tR\x13allowedRedirectUrlsBXZVgithub.com/gravitational/teleport/api/gen/proto/go/teleport/delegation/v1;delegationv1b\x06proto3"

var (
	file_teleport_delegation_v1_delegation_profile_resource_proto_rawDescOnce sync.Once
	file_teleport_delegation_v1_delegation_profile_resource_proto_rawDescData []byte
)

func file_teleport_delegation_v1_delegation_profile_resource_proto_rawDescGZIP() []byte {
	file_teleport_delegation_v1_delegation_profile_resource_proto_rawDescOnce.Do(func() {
		file_teleport_delegation_v1_delegation_profile_resource_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_teleport_delegation_v1_delegation_profile_resource_proto_rawDesc), len(file_teleport_delegation_v1_delegation_profile_resource_proto_rawDesc)))
	})
	return file_teleport_delegation_v1_delegation_profile_resource_proto_rawDescData
}

var file_teleport_delegation_v1_delegation_profile_resource_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_teleport_delegation_v1_delegation_profile_resource_proto_goTypes = []any{
	(*DelegationProfile)(nil),     // 0: teleport.delegation.v1.DelegationProfile
	(*DelegationProfileSpec)(nil), // 1: teleport.delegation.v1.DelegationProfileSpec
	(*DelegationUserSpec)(nil),    // 2: teleport.delegation.v1.DelegationUserSpec
	(*DelegationConsentSpec)(nil), // 3: teleport.delegation.v1.DelegationConsentSpec
	(*v1.Metadata)(nil),           // 4: teleport.header.v1.Metadata
	(*durationpb.Duration)(nil),   // 5: google.protobuf.Duration
}
var file_teleport_delegation_v1_delegation_profile_resource_proto_depIdxs = []int32{
	4, // 0: teleport.delegation.v1.DelegationProfile.metadata:type_name -> teleport.header.v1.Metadata
	1, // 1: teleport.delegation.v1.DelegationProfile.spec:type_name -> teleport.delegation.v1.DelegationProfileSpec
	2, // 2: teleport.delegation.v1.DelegationProfileSpec.authorized_users:type_name -> teleport.delegation.v1.DelegationUserSpec
	5, // 3: teleport.delegation.v1.DelegationProfileSpec.default_session_length:type_name -> google.protobuf.Duration
	3, // 4: teleport.delegation.v1.DelegationProfileSpec.consent:type_name -> teleport.delegation.v1.DelegationConsentSpec
	5, // [5:5] is the sub-list for method output_type
	5, // [5:5] is the sub-list for method input_type
	5, // [5:5] is the sub-list for extension type_name
	5, // [5:5] is the sub-list for extension extendee
	0, // [0:5] is the sub-list for field type_name
}

func init() { file_teleport_delegation_v1_delegation_profile_resource_proto_init() }
func file_teleport_delegation_v1_delegation_profile_resource_proto_init() {
	if File_teleport_delegation_v1_delegation_profile_resource_proto != nil {
		return
	}
	file_teleport_delegation_v1_delegation_profile_resource_proto_msgTypes[1].OneofWrappers = []any{}
	file_teleport_delegation_v1_delegation_profile_resource_proto_msgTypes[2].OneofWrappers = []any{
		(*DelegationUserSpec_BotName)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_teleport_delegation_v1_delegation_profile_resource_proto_rawDesc), len(file_teleport_delegation_v1_delegation_profile_resource_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_teleport_delegation_v1_delegation_profile_resource_proto_goTypes,
		DependencyIndexes: file_teleport_delegation_v1_delegation_profile_resource_proto_depIdxs,
		MessageInfos:      file_teleport_delegation_v1_delegation_profile_resource_proto_msgTypes,
	}.Build()
	File_teleport_delegation_v1_delegation_profile_resource_proto = out.File
	file_teleport_delegation_v1_delegation_profile_resource_proto_goTypes = nil
	file_teleport_delegation_v1_delegation_profile_resource_proto_depIdxs = nil
}
