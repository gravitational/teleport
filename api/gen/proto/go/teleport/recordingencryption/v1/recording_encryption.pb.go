// Copyright 2025 Gravitational, Inc
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: teleport/recordingencryption/v1/recording_encryption.proto

package recordingencryptionv1

import (
	v1 "github.com/gravitational/teleport/api/gen/proto/go/teleport/header/v1"
	types "github.com/gravitational/teleport/api/types"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// A key pair used with age to wrap and unwrap file keys for session recording encryption.
type KeyPair struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// A key pair used with age to wrap and unwrap file keys for session recording encryption.
	KeyPair       *types.EncryptionKeyPair `protobuf:"bytes,1,opt,name=key_pair,json=keyPair,proto3" json:"key_pair,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *KeyPair) Reset() {
	*x = KeyPair{}
	mi := &file_teleport_recordingencryption_v1_recording_encryption_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *KeyPair) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KeyPair) ProtoMessage() {}

func (x *KeyPair) ProtoReflect() protoreflect.Message {
	mi := &file_teleport_recordingencryption_v1_recording_encryption_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KeyPair.ProtoReflect.Descriptor instead.
func (*KeyPair) Descriptor() ([]byte, []int) {
	return file_teleport_recordingencryption_v1_recording_encryption_proto_rawDescGZIP(), []int{0}
}

func (x *KeyPair) GetKeyPair() *types.EncryptionKeyPair {
	if x != nil {
		return x.KeyPair
	}
	return nil
}

// RecordingEncryptionSpec contains the active key set for encrypted session recording.
type RecordingEncryptionSpec struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// A list of active key pairs used for session recording encryption. The unique set of
	// active public keys are used as recipients during age encryption. This allows any
	// active private key to be used during decryption which guards against recordings being
	// inaccessible to auth servers waiting for key rotation.
	ActiveKeyPairs []*KeyPair `protobuf:"bytes,2,rep,name=active_key_pairs,json=activeKeyPairs,proto3" json:"active_key_pairs,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *RecordingEncryptionSpec) Reset() {
	*x = RecordingEncryptionSpec{}
	mi := &file_teleport_recordingencryption_v1_recording_encryption_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RecordingEncryptionSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RecordingEncryptionSpec) ProtoMessage() {}

func (x *RecordingEncryptionSpec) ProtoReflect() protoreflect.Message {
	mi := &file_teleport_recordingencryption_v1_recording_encryption_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RecordingEncryptionSpec.ProtoReflect.Descriptor instead.
func (*RecordingEncryptionSpec) Descriptor() ([]byte, []int) {
	return file_teleport_recordingencryption_v1_recording_encryption_proto_rawDescGZIP(), []int{1}
}

func (x *RecordingEncryptionSpec) GetActiveKeyPairs() []*KeyPair {
	if x != nil {
		return x.ActiveKeyPairs
	}
	return nil
}

// RecordingEncryptionStatus contains the status of the RecordingEncryption resource.
type RecordingEncryptionStatus struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RecordingEncryptionStatus) Reset() {
	*x = RecordingEncryptionStatus{}
	mi := &file_teleport_recordingencryption_v1_recording_encryption_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RecordingEncryptionStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RecordingEncryptionStatus) ProtoMessage() {}

func (x *RecordingEncryptionStatus) ProtoReflect() protoreflect.Message {
	mi := &file_teleport_recordingencryption_v1_recording_encryption_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RecordingEncryptionStatus.ProtoReflect.Descriptor instead.
func (*RecordingEncryptionStatus) Descriptor() ([]byte, []int) {
	return file_teleport_recordingencryption_v1_recording_encryption_proto_rawDescGZIP(), []int{2}
}

// RecordingEncryption contains cluster state for encrypted session recordings.
type RecordingEncryption struct {
	state         protoimpl.MessageState     `protogen:"open.v1"`
	Kind          string                     `protobuf:"bytes,1,opt,name=kind,proto3" json:"kind,omitempty"`
	SubKind       string                     `protobuf:"bytes,2,opt,name=sub_kind,json=subKind,proto3" json:"sub_kind,omitempty"`
	Version       string                     `protobuf:"bytes,3,opt,name=version,proto3" json:"version,omitempty"`
	Metadata      *v1.Metadata               `protobuf:"bytes,4,opt,name=metadata,proto3" json:"metadata,omitempty"`
	Spec          *RecordingEncryptionSpec   `protobuf:"bytes,5,opt,name=spec,proto3" json:"spec,omitempty"`
	Status        *RecordingEncryptionStatus `protobuf:"bytes,6,opt,name=status,proto3" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RecordingEncryption) Reset() {
	*x = RecordingEncryption{}
	mi := &file_teleport_recordingencryption_v1_recording_encryption_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RecordingEncryption) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RecordingEncryption) ProtoMessage() {}

func (x *RecordingEncryption) ProtoReflect() protoreflect.Message {
	mi := &file_teleport_recordingencryption_v1_recording_encryption_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RecordingEncryption.ProtoReflect.Descriptor instead.
func (*RecordingEncryption) Descriptor() ([]byte, []int) {
	return file_teleport_recordingencryption_v1_recording_encryption_proto_rawDescGZIP(), []int{3}
}

func (x *RecordingEncryption) GetKind() string {
	if x != nil {
		return x.Kind
	}
	return ""
}

func (x *RecordingEncryption) GetSubKind() string {
	if x != nil {
		return x.SubKind
	}
	return ""
}

func (x *RecordingEncryption) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *RecordingEncryption) GetMetadata() *v1.Metadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *RecordingEncryption) GetSpec() *RecordingEncryptionSpec {
	if x != nil {
		return x.Spec
	}
	return nil
}

func (x *RecordingEncryption) GetStatus() *RecordingEncryptionStatus {
	if x != nil {
		return x.Status
	}
	return nil
}

var File_teleport_recordingencryption_v1_recording_encryption_proto protoreflect.FileDescriptor

const file_teleport_recordingencryption_v1_recording_encryption_proto_rawDesc = "" +
	"\n" +
	":teleport/recordingencryption/v1/recording_encryption.proto\x12\x1fteleport.recordingencryption.v1\x1a!teleport/header/v1/metadata.proto\x1a!teleport/legacy/types/types.proto\">\n" +
	"\aKeyPair\x123\n" +
	"\bkey_pair\x18\x01 \x01(\v2\x18.types.EncryptionKeyPairR\akeyPair\"\x80\x01\n" +
	"\x17RecordingEncryptionSpec\x12R\n" +
	"\x10active_key_pairs\x18\x02 \x03(\v2(.teleport.recordingencryption.v1.KeyPairR\x0eactiveKeyPairsJ\x04\b\x01\x10\x02R\vactive_keys\"\x1b\n" +
	"\x19RecordingEncryptionStatus\"\xba\x02\n" +
	"\x13RecordingEncryption\x12\x12\n" +
	"\x04kind\x18\x01 \x01(\tR\x04kind\x12\x19\n" +
	"\bsub_kind\x18\x02 \x01(\tR\asubKind\x12\x18\n" +
	"\aversion\x18\x03 \x01(\tR\aversion\x128\n" +
	"\bmetadata\x18\x04 \x01(\v2\x1c.teleport.header.v1.MetadataR\bmetadata\x12L\n" +
	"\x04spec\x18\x05 \x01(\v28.teleport.recordingencryption.v1.RecordingEncryptionSpecR\x04spec\x12R\n" +
	"\x06status\x18\x06 \x01(\v2:.teleport.recordingencryption.v1.RecordingEncryptionStatusR\x06statusBjZhgithub.com/gravitational/teleport/api/gen/proto/go/teleport/recordingencryption/v1;recordingencryptionv1b\x06proto3"

var (
	file_teleport_recordingencryption_v1_recording_encryption_proto_rawDescOnce sync.Once
	file_teleport_recordingencryption_v1_recording_encryption_proto_rawDescData []byte
)

func file_teleport_recordingencryption_v1_recording_encryption_proto_rawDescGZIP() []byte {
	file_teleport_recordingencryption_v1_recording_encryption_proto_rawDescOnce.Do(func() {
		file_teleport_recordingencryption_v1_recording_encryption_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_teleport_recordingencryption_v1_recording_encryption_proto_rawDesc), len(file_teleport_recordingencryption_v1_recording_encryption_proto_rawDesc)))
	})
	return file_teleport_recordingencryption_v1_recording_encryption_proto_rawDescData
}

var file_teleport_recordingencryption_v1_recording_encryption_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_teleport_recordingencryption_v1_recording_encryption_proto_goTypes = []any{
	(*KeyPair)(nil),                   // 0: teleport.recordingencryption.v1.KeyPair
	(*RecordingEncryptionSpec)(nil),   // 1: teleport.recordingencryption.v1.RecordingEncryptionSpec
	(*RecordingEncryptionStatus)(nil), // 2: teleport.recordingencryption.v1.RecordingEncryptionStatus
	(*RecordingEncryption)(nil),       // 3: teleport.recordingencryption.v1.RecordingEncryption
	(*types.EncryptionKeyPair)(nil),   // 4: types.EncryptionKeyPair
	(*v1.Metadata)(nil),               // 5: teleport.header.v1.Metadata
}
var file_teleport_recordingencryption_v1_recording_encryption_proto_depIdxs = []int32{
	4, // 0: teleport.recordingencryption.v1.KeyPair.key_pair:type_name -> types.EncryptionKeyPair
	0, // 1: teleport.recordingencryption.v1.RecordingEncryptionSpec.active_key_pairs:type_name -> teleport.recordingencryption.v1.KeyPair
	5, // 2: teleport.recordingencryption.v1.RecordingEncryption.metadata:type_name -> teleport.header.v1.Metadata
	1, // 3: teleport.recordingencryption.v1.RecordingEncryption.spec:type_name -> teleport.recordingencryption.v1.RecordingEncryptionSpec
	2, // 4: teleport.recordingencryption.v1.RecordingEncryption.status:type_name -> teleport.recordingencryption.v1.RecordingEncryptionStatus
	5, // [5:5] is the sub-list for method output_type
	5, // [5:5] is the sub-list for method input_type
	5, // [5:5] is the sub-list for extension type_name
	5, // [5:5] is the sub-list for extension extendee
	0, // [0:5] is the sub-list for field type_name
}

func init() { file_teleport_recordingencryption_v1_recording_encryption_proto_init() }
func file_teleport_recordingencryption_v1_recording_encryption_proto_init() {
	if File_teleport_recordingencryption_v1_recording_encryption_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_teleport_recordingencryption_v1_recording_encryption_proto_rawDesc), len(file_teleport_recordingencryption_v1_recording_encryption_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_teleport_recordingencryption_v1_recording_encryption_proto_goTypes,
		DependencyIndexes: file_teleport_recordingencryption_v1_recording_encryption_proto_depIdxs,
		MessageInfos:      file_teleport_recordingencryption_v1_recording_encryption_proto_msgTypes,
	}.Build()
	File_teleport_recordingencryption_v1_recording_encryption_proto = out.File
	file_teleport_recordingencryption_v1_recording_encryption_proto_goTypes = nil
	file_teleport_recordingencryption_v1_recording_encryption_proto_depIdxs = nil
}
