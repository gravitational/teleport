// Copyright 2025 Gravitational, Inc
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: teleport/recordingencryption/v1/recording_encryption_service.proto

package recordingencryptionv1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// The handle to an upload for an encrypted session.
type Upload struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The primary identifier for an Upload.
	UploadId string `protobuf:"bytes,1,opt,name=upload_id,json=uploadId,proto3" json:"upload_id,omitempty"`
	// The session ID an upload is tied to.
	SessionId string `protobuf:"bytes,2,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	// The time that an upload was created at.
	InitiatedAt   *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=initiated_at,json=initiatedAt,proto3" json:"initiated_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Upload) Reset() {
	*x = Upload{}
	mi := &file_teleport_recordingencryption_v1_recording_encryption_service_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Upload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Upload) ProtoMessage() {}

func (x *Upload) ProtoReflect() protoreflect.Message {
	mi := &file_teleport_recordingencryption_v1_recording_encryption_service_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Upload.ProtoReflect.Descriptor instead.
func (*Upload) Descriptor() ([]byte, []int) {
	return file_teleport_recordingencryption_v1_recording_encryption_service_proto_rawDescGZIP(), []int{0}
}

func (x *Upload) GetUploadId() string {
	if x != nil {
		return x.UploadId
	}
	return ""
}

func (x *Upload) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

func (x *Upload) GetInitiatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.InitiatedAt
	}
	return nil
}

// The request to start a multipart upload for a specific session recording.
type CreateUploadRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The session ID associated with the recording being uploaded.
	SessionId     string `protobuf:"bytes,1,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateUploadRequest) Reset() {
	*x = CreateUploadRequest{}
	mi := &file_teleport_recordingencryption_v1_recording_encryption_service_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateUploadRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateUploadRequest) ProtoMessage() {}

func (x *CreateUploadRequest) ProtoReflect() protoreflect.Message {
	mi := &file_teleport_recordingencryption_v1_recording_encryption_service_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateUploadRequest.ProtoReflect.Descriptor instead.
func (*CreateUploadRequest) Descriptor() ([]byte, []int) {
	return file_teleport_recordingencryption_v1_recording_encryption_service_proto_rawDescGZIP(), []int{1}
}

func (x *CreateUploadRequest) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

// The resulting Upload message for a created Upload.
type CreateUploadResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The handle for the created Upload.
	Upload        *Upload `protobuf:"bytes,1,opt,name=upload,proto3" json:"upload,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateUploadResponse) Reset() {
	*x = CreateUploadResponse{}
	mi := &file_teleport_recordingencryption_v1_recording_encryption_service_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateUploadResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateUploadResponse) ProtoMessage() {}

func (x *CreateUploadResponse) ProtoReflect() protoreflect.Message {
	mi := &file_teleport_recordingencryption_v1_recording_encryption_service_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateUploadResponse.ProtoReflect.Descriptor instead.
func (*CreateUploadResponse) Descriptor() ([]byte, []int) {
	return file_teleport_recordingencryption_v1_recording_encryption_service_proto_rawDescGZIP(), []int{2}
}

func (x *CreateUploadResponse) GetUpload() *Upload {
	if x != nil {
		return x.Upload
	}
	return nil
}

// The request to upload a single part in a multipart upload.
type UploadPartRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The handle to the in-progress upload that should be uploaded to.
	Upload *Upload `protobuf:"bytes,1,opt,name=upload,proto3" json:"upload,omitempty"`
	// The ordered index applied to the part.
	PartNumber int64 `protobuf:"varint,2,opt,name=part_number,json=partNumber,proto3" json:"part_number,omitempty"`
	// The encrypted part of session recording data being uploaded.
	Part          []byte `protobuf:"bytes,3,opt,name=part,proto3" json:"part,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UploadPartRequest) Reset() {
	*x = UploadPartRequest{}
	mi := &file_teleport_recordingencryption_v1_recording_encryption_service_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UploadPartRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadPartRequest) ProtoMessage() {}

func (x *UploadPartRequest) ProtoReflect() protoreflect.Message {
	mi := &file_teleport_recordingencryption_v1_recording_encryption_service_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadPartRequest.ProtoReflect.Descriptor instead.
func (*UploadPartRequest) Descriptor() ([]byte, []int) {
	return file_teleport_recordingencryption_v1_recording_encryption_service_proto_rawDescGZIP(), []int{3}
}

func (x *UploadPartRequest) GetUpload() *Upload {
	if x != nil {
		return x.Upload
	}
	return nil
}

func (x *UploadPartRequest) GetPartNumber() int64 {
	if x != nil {
		return x.PartNumber
	}
	return 0
}

func (x *UploadPartRequest) GetPart() []byte {
	if x != nil {
		return x.Part
	}
	return nil
}

// The resulting metadata about an uploaded part.
type Part struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The ordered index applied to the part.
	PartNumber int64 `protobuf:"varint,1,opt,name=part_number,json=partNumber,proto3" json:"part_number,omitempty"`
	// The part e-tag value relevant to some storage backends.
	Etag          string `protobuf:"bytes,2,opt,name=etag,proto3" json:"etag,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Part) Reset() {
	*x = Part{}
	mi := &file_teleport_recordingencryption_v1_recording_encryption_service_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Part) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Part) ProtoMessage() {}

func (x *Part) ProtoReflect() protoreflect.Message {
	mi := &file_teleport_recordingencryption_v1_recording_encryption_service_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Part.ProtoReflect.Descriptor instead.
func (*Part) Descriptor() ([]byte, []int) {
	return file_teleport_recordingencryption_v1_recording_encryption_service_proto_rawDescGZIP(), []int{4}
}

func (x *Part) GetPartNumber() int64 {
	if x != nil {
		return x.PartNumber
	}
	return 0
}

func (x *Part) GetEtag() string {
	if x != nil {
		return x.Etag
	}
	return ""
}

// A successfully uploaded Part to be included in the final CompleteUpload request.
type UploadPartResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The resulting part metadata about an uploaded part.
	Part          *Part `protobuf:"bytes,1,opt,name=part,proto3" json:"part,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UploadPartResponse) Reset() {
	*x = UploadPartResponse{}
	mi := &file_teleport_recordingencryption_v1_recording_encryption_service_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UploadPartResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadPartResponse) ProtoMessage() {}

func (x *UploadPartResponse) ProtoReflect() protoreflect.Message {
	mi := &file_teleport_recordingencryption_v1_recording_encryption_service_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadPartResponse.ProtoReflect.Descriptor instead.
func (*UploadPartResponse) Descriptor() ([]byte, []int) {
	return file_teleport_recordingencryption_v1_recording_encryption_service_proto_rawDescGZIP(), []int{5}
}

func (x *UploadPartResponse) GetPart() *Part {
	if x != nil {
		return x.Part
	}
	return nil
}

// The request to complete an upload. The included part numbers must match the parts successfully
// uploaded up until this point.
type CompleteUploadRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The handle to an upload to complete.
	Upload *Upload `protobuf:"bytes,1,opt,name=upload,proto3" json:"upload,omitempty"`
	// The parts expected to be successfully uploaded.
	Parts         []*Part `protobuf:"bytes,2,rep,name=parts,proto3" json:"parts,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CompleteUploadRequest) Reset() {
	*x = CompleteUploadRequest{}
	mi := &file_teleport_recordingencryption_v1_recording_encryption_service_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CompleteUploadRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CompleteUploadRequest) ProtoMessage() {}

func (x *CompleteUploadRequest) ProtoReflect() protoreflect.Message {
	mi := &file_teleport_recordingencryption_v1_recording_encryption_service_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CompleteUploadRequest.ProtoReflect.Descriptor instead.
func (*CompleteUploadRequest) Descriptor() ([]byte, []int) {
	return file_teleport_recordingencryption_v1_recording_encryption_service_proto_rawDescGZIP(), []int{6}
}

func (x *CompleteUploadRequest) GetUpload() *Upload {
	if x != nil {
		return x.Upload
	}
	return nil
}

func (x *CompleteUploadRequest) GetParts() []*Part {
	if x != nil {
		return x.Parts
	}
	return nil
}

// CompleteUploadResponse is the empty return value of a CompleteUpload request.
type CompleteUploadResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CompleteUploadResponse) Reset() {
	*x = CompleteUploadResponse{}
	mi := &file_teleport_recordingencryption_v1_recording_encryption_service_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CompleteUploadResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CompleteUploadResponse) ProtoMessage() {}

func (x *CompleteUploadResponse) ProtoReflect() protoreflect.Message {
	mi := &file_teleport_recordingencryption_v1_recording_encryption_service_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CompleteUploadResponse.ProtoReflect.Descriptor instead.
func (*CompleteUploadResponse) Descriptor() ([]byte, []int) {
	return file_teleport_recordingencryption_v1_recording_encryption_service_proto_rawDescGZIP(), []int{7}
}

// The empty body of a RotateKey request.
type RotateKeyRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RotateKeyRequest) Reset() {
	*x = RotateKeyRequest{}
	mi := &file_teleport_recordingencryption_v1_recording_encryption_service_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RotateKeyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RotateKeyRequest) ProtoMessage() {}

func (x *RotateKeyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_teleport_recordingencryption_v1_recording_encryption_service_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RotateKeyRequest.ProtoReflect.Descriptor instead.
func (*RotateKeyRequest) Descriptor() ([]byte, []int) {
	return file_teleport_recordingencryption_v1_recording_encryption_service_proto_rawDescGZIP(), []int{8}
}

// The empty return value of a RotateKey response.
type RotateKeyResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RotateKeyResponse) Reset() {
	*x = RotateKeyResponse{}
	mi := &file_teleport_recordingencryption_v1_recording_encryption_service_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RotateKeyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RotateKeyResponse) ProtoMessage() {}

func (x *RotateKeyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_teleport_recordingencryption_v1_recording_encryption_service_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RotateKeyResponse.ProtoReflect.Descriptor instead.
func (*RotateKeyResponse) Descriptor() ([]byte, []int) {
	return file_teleport_recordingencryption_v1_recording_encryption_service_proto_rawDescGZIP(), []int{9}
}

// The empty body of a GetRotationState request.
type GetRotationStateRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetRotationStateRequest) Reset() {
	*x = GetRotationStateRequest{}
	mi := &file_teleport_recordingencryption_v1_recording_encryption_service_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetRotationStateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRotationStateRequest) ProtoMessage() {}

func (x *GetRotationStateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_teleport_recordingencryption_v1_recording_encryption_service_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRotationStateRequest.ProtoReflect.Descriptor instead.
func (*GetRotationStateRequest) Descriptor() ([]byte, []int) {
	return file_teleport_recordingencryption_v1_recording_encryption_service_proto_rawDescGZIP(), []int{10}
}

// A public key fingerprint coupled with its current state.
type KeyWithState struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Fingerprint   string                 `protobuf:"bytes,1,opt,name=fingerprint,proto3" json:"fingerprint,omitempty"`
	State         KeyState               `protobuf:"varint,2,opt,name=state,proto3,enum=teleport.recordingencryption.v1.KeyState" json:"state,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *KeyWithState) Reset() {
	*x = KeyWithState{}
	mi := &file_teleport_recordingencryption_v1_recording_encryption_service_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *KeyWithState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KeyWithState) ProtoMessage() {}

func (x *KeyWithState) ProtoReflect() protoreflect.Message {
	mi := &file_teleport_recordingencryption_v1_recording_encryption_service_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KeyWithState.ProtoReflect.Descriptor instead.
func (*KeyWithState) Descriptor() ([]byte, []int) {
	return file_teleport_recordingencryption_v1_recording_encryption_service_proto_rawDescGZIP(), []int{11}
}

func (x *KeyWithState) GetFingerprint() string {
	if x != nil {
		return x.Fingerprint
	}
	return ""
}

func (x *KeyWithState) GetState() KeyState {
	if x != nil {
		return x.State
	}
	return KeyState_KEY_STATE_UNSPECIFIED
}

// The empty body of a GetRotationState response.
type GetRotationStateResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Keys          []*KeyWithState        `protobuf:"bytes,1,rep,name=keys,proto3" json:"keys,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetRotationStateResponse) Reset() {
	*x = GetRotationStateResponse{}
	mi := &file_teleport_recordingencryption_v1_recording_encryption_service_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetRotationStateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRotationStateResponse) ProtoMessage() {}

func (x *GetRotationStateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_teleport_recordingencryption_v1_recording_encryption_service_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRotationStateResponse.ProtoReflect.Descriptor instead.
func (*GetRotationStateResponse) Descriptor() ([]byte, []int) {
	return file_teleport_recordingencryption_v1_recording_encryption_service_proto_rawDescGZIP(), []int{12}
}

func (x *GetRotationStateResponse) GetKeys() []*KeyWithState {
	if x != nil {
		return x.Keys
	}
	return nil
}

// The empty body of a CompleteRotation request.
type CompleteRotationRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CompleteRotationRequest) Reset() {
	*x = CompleteRotationRequest{}
	mi := &file_teleport_recordingencryption_v1_recording_encryption_service_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CompleteRotationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CompleteRotationRequest) ProtoMessage() {}

func (x *CompleteRotationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_teleport_recordingencryption_v1_recording_encryption_service_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CompleteRotationRequest.ProtoReflect.Descriptor instead.
func (*CompleteRotationRequest) Descriptor() ([]byte, []int) {
	return file_teleport_recordingencryption_v1_recording_encryption_service_proto_rawDescGZIP(), []int{13}
}

// The empty return value of a CompleteRotation response.
type CompleteRotationResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CompleteRotationResponse) Reset() {
	*x = CompleteRotationResponse{}
	mi := &file_teleport_recordingencryption_v1_recording_encryption_service_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CompleteRotationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CompleteRotationResponse) ProtoMessage() {}

func (x *CompleteRotationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_teleport_recordingencryption_v1_recording_encryption_service_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CompleteRotationResponse.ProtoReflect.Descriptor instead.
func (*CompleteRotationResponse) Descriptor() ([]byte, []int) {
	return file_teleport_recordingencryption_v1_recording_encryption_service_proto_rawDescGZIP(), []int{14}
}

// The empty body of a RollbackRotation request.
type RollbackRotationRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RollbackRotationRequest) Reset() {
	*x = RollbackRotationRequest{}
	mi := &file_teleport_recordingencryption_v1_recording_encryption_service_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RollbackRotationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RollbackRotationRequest) ProtoMessage() {}

func (x *RollbackRotationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_teleport_recordingencryption_v1_recording_encryption_service_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RollbackRotationRequest.ProtoReflect.Descriptor instead.
func (*RollbackRotationRequest) Descriptor() ([]byte, []int) {
	return file_teleport_recordingencryption_v1_recording_encryption_service_proto_rawDescGZIP(), []int{15}
}

// The empty return value of a RollbackRotation response.
type RollbackRotationResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RollbackRotationResponse) Reset() {
	*x = RollbackRotationResponse{}
	mi := &file_teleport_recordingencryption_v1_recording_encryption_service_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RollbackRotationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RollbackRotationResponse) ProtoMessage() {}

func (x *RollbackRotationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_teleport_recordingencryption_v1_recording_encryption_service_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RollbackRotationResponse.ProtoReflect.Descriptor instead.
func (*RollbackRotationResponse) Descriptor() ([]byte, []int) {
	return file_teleport_recordingencryption_v1_recording_encryption_service_proto_rawDescGZIP(), []int{16}
}

var File_teleport_recordingencryption_v1_recording_encryption_service_proto protoreflect.FileDescriptor

const file_teleport_recordingencryption_v1_recording_encryption_service_proto_rawDesc = "" +
	"\n" +
	"Bteleport/recordingencryption/v1/recording_encryption_service.proto\x12\x1fteleport.recordingencryption.v1\x1a\x1fgoogle/protobuf/timestamp.proto\x1a:teleport/recordingencryption/v1/recording_encryption.proto\"\x83\x01\n" +
	"\x06Upload\x12\x1b\n" +
	"\tupload_id\x18\x01 \x01(\tR\buploadId\x12\x1d\n" +
	"\n" +
	"session_id\x18\x02 \x01(\tR\tsessionId\x12=\n" +
	"\finitiated_at\x18\x03 \x01(\v2\x1a.google.protobuf.TimestampR\vinitiatedAt\"4\n" +
	"\x13CreateUploadRequest\x12\x1d\n" +
	"\n" +
	"session_id\x18\x01 \x01(\tR\tsessionId\"W\n" +
	"\x14CreateUploadResponse\x12?\n" +
	"\x06upload\x18\x01 \x01(\v2'.teleport.recordingencryption.v1.UploadR\x06upload\"\x89\x01\n" +
	"\x11UploadPartRequest\x12?\n" +
	"\x06upload\x18\x01 \x01(\v2'.teleport.recordingencryption.v1.UploadR\x06upload\x12\x1f\n" +
	"\vpart_number\x18\x02 \x01(\x03R\n" +
	"partNumber\x12\x12\n" +
	"\x04part\x18\x03 \x01(\fR\x04part\";\n" +
	"\x04Part\x12\x1f\n" +
	"\vpart_number\x18\x01 \x01(\x03R\n" +
	"partNumber\x12\x12\n" +
	"\x04etag\x18\x02 \x01(\tR\x04etag\"O\n" +
	"\x12UploadPartResponse\x129\n" +
	"\x04part\x18\x01 \x01(\v2%.teleport.recordingencryption.v1.PartR\x04part\"\x95\x01\n" +
	"\x15CompleteUploadRequest\x12?\n" +
	"\x06upload\x18\x01 \x01(\v2'.teleport.recordingencryption.v1.UploadR\x06upload\x12;\n" +
	"\x05parts\x18\x02 \x03(\v2%.teleport.recordingencryption.v1.PartR\x05parts\"\x18\n" +
	"\x16CompleteUploadResponse\"\x12\n" +
	"\x10RotateKeyRequest\"\x13\n" +
	"\x11RotateKeyResponse\"\x19\n" +
	"\x17GetRotationStateRequest\"q\n" +
	"\fKeyWithState\x12 \n" +
	"\vfingerprint\x18\x01 \x01(\tR\vfingerprint\x12?\n" +
	"\x05state\x18\x02 \x01(\x0e2).teleport.recordingencryption.v1.KeyStateR\x05state\"]\n" +
	"\x18GetRotationStateResponse\x12A\n" +
	"\x04keys\x18\x01 \x03(\v2-.teleport.recordingencryption.v1.KeyWithStateR\x04keys\"\x19\n" +
	"\x17CompleteRotationRequest\"\x1a\n" +
	"\x18CompleteRotationResponse\"\x19\n" +
	"\x17RollbackRotationRequest\"\x1a\n" +
	"\x18RollbackRotationResponse2\xa6\a\n" +
	"\x1aRecordingEncryptionService\x12{\n" +
	"\fCreateUpload\x124.teleport.recordingencryption.v1.CreateUploadRequest\x1a5.teleport.recordingencryption.v1.CreateUploadResponse\x12u\n" +
	"\n" +
	"UploadPart\x122.teleport.recordingencryption.v1.UploadPartRequest\x1a3.teleport.recordingencryption.v1.UploadPartResponse\x12\x81\x01\n" +
	"\x0eCompleteUpload\x126.teleport.recordingencryption.v1.CompleteUploadRequest\x1a7.teleport.recordingencryption.v1.CompleteUploadResponse\x12r\n" +
	"\tRotateKey\x121.teleport.recordingencryption.v1.RotateKeyRequest\x1a2.teleport.recordingencryption.v1.RotateKeyResponse\x12\x87\x01\n" +
	"\x10GetRotationState\x128.teleport.recordingencryption.v1.GetRotationStateRequest\x1a9.teleport.recordingencryption.v1.GetRotationStateResponse\x12\x87\x01\n" +
	"\x10CompleteRotation\x128.teleport.recordingencryption.v1.CompleteRotationRequest\x1a9.teleport.recordingencryption.v1.CompleteRotationResponse\x12\x87\x01\n" +
	"\x10RollbackRotation\x128.teleport.recordingencryption.v1.RollbackRotationRequest\x1a9.teleport.recordingencryption.v1.RollbackRotationResponseBjZhgithub.com/gravitational/teleport/api/gen/proto/go/teleport/recordingencryption/v1;recordingencryptionv1b\x06proto3"

var (
	file_teleport_recordingencryption_v1_recording_encryption_service_proto_rawDescOnce sync.Once
	file_teleport_recordingencryption_v1_recording_encryption_service_proto_rawDescData []byte
)

func file_teleport_recordingencryption_v1_recording_encryption_service_proto_rawDescGZIP() []byte {
	file_teleport_recordingencryption_v1_recording_encryption_service_proto_rawDescOnce.Do(func() {
		file_teleport_recordingencryption_v1_recording_encryption_service_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_teleport_recordingencryption_v1_recording_encryption_service_proto_rawDesc), len(file_teleport_recordingencryption_v1_recording_encryption_service_proto_rawDesc)))
	})
	return file_teleport_recordingencryption_v1_recording_encryption_service_proto_rawDescData
}

var file_teleport_recordingencryption_v1_recording_encryption_service_proto_msgTypes = make([]protoimpl.MessageInfo, 17)
var file_teleport_recordingencryption_v1_recording_encryption_service_proto_goTypes = []any{
	(*Upload)(nil),                   // 0: teleport.recordingencryption.v1.Upload
	(*CreateUploadRequest)(nil),      // 1: teleport.recordingencryption.v1.CreateUploadRequest
	(*CreateUploadResponse)(nil),     // 2: teleport.recordingencryption.v1.CreateUploadResponse
	(*UploadPartRequest)(nil),        // 3: teleport.recordingencryption.v1.UploadPartRequest
	(*Part)(nil),                     // 4: teleport.recordingencryption.v1.Part
	(*UploadPartResponse)(nil),       // 5: teleport.recordingencryption.v1.UploadPartResponse
	(*CompleteUploadRequest)(nil),    // 6: teleport.recordingencryption.v1.CompleteUploadRequest
	(*CompleteUploadResponse)(nil),   // 7: teleport.recordingencryption.v1.CompleteUploadResponse
	(*RotateKeyRequest)(nil),         // 8: teleport.recordingencryption.v1.RotateKeyRequest
	(*RotateKeyResponse)(nil),        // 9: teleport.recordingencryption.v1.RotateKeyResponse
	(*GetRotationStateRequest)(nil),  // 10: teleport.recordingencryption.v1.GetRotationStateRequest
	(*KeyWithState)(nil),             // 11: teleport.recordingencryption.v1.KeyWithState
	(*GetRotationStateResponse)(nil), // 12: teleport.recordingencryption.v1.GetRotationStateResponse
	(*CompleteRotationRequest)(nil),  // 13: teleport.recordingencryption.v1.CompleteRotationRequest
	(*CompleteRotationResponse)(nil), // 14: teleport.recordingencryption.v1.CompleteRotationResponse
	(*RollbackRotationRequest)(nil),  // 15: teleport.recordingencryption.v1.RollbackRotationRequest
	(*RollbackRotationResponse)(nil), // 16: teleport.recordingencryption.v1.RollbackRotationResponse
	(*timestamppb.Timestamp)(nil),    // 17: google.protobuf.Timestamp
	(KeyState)(0),                    // 18: teleport.recordingencryption.v1.KeyState
}
var file_teleport_recordingencryption_v1_recording_encryption_service_proto_depIdxs = []int32{
	17, // 0: teleport.recordingencryption.v1.Upload.initiated_at:type_name -> google.protobuf.Timestamp
	0,  // 1: teleport.recordingencryption.v1.CreateUploadResponse.upload:type_name -> teleport.recordingencryption.v1.Upload
	0,  // 2: teleport.recordingencryption.v1.UploadPartRequest.upload:type_name -> teleport.recordingencryption.v1.Upload
	4,  // 3: teleport.recordingencryption.v1.UploadPartResponse.part:type_name -> teleport.recordingencryption.v1.Part
	0,  // 4: teleport.recordingencryption.v1.CompleteUploadRequest.upload:type_name -> teleport.recordingencryption.v1.Upload
	4,  // 5: teleport.recordingencryption.v1.CompleteUploadRequest.parts:type_name -> teleport.recordingencryption.v1.Part
	18, // 6: teleport.recordingencryption.v1.KeyWithState.state:type_name -> teleport.recordingencryption.v1.KeyState
	11, // 7: teleport.recordingencryption.v1.GetRotationStateResponse.keys:type_name -> teleport.recordingencryption.v1.KeyWithState
	1,  // 8: teleport.recordingencryption.v1.RecordingEncryptionService.CreateUpload:input_type -> teleport.recordingencryption.v1.CreateUploadRequest
	3,  // 9: teleport.recordingencryption.v1.RecordingEncryptionService.UploadPart:input_type -> teleport.recordingencryption.v1.UploadPartRequest
	6,  // 10: teleport.recordingencryption.v1.RecordingEncryptionService.CompleteUpload:input_type -> teleport.recordingencryption.v1.CompleteUploadRequest
	8,  // 11: teleport.recordingencryption.v1.RecordingEncryptionService.RotateKey:input_type -> teleport.recordingencryption.v1.RotateKeyRequest
	10, // 12: teleport.recordingencryption.v1.RecordingEncryptionService.GetRotationState:input_type -> teleport.recordingencryption.v1.GetRotationStateRequest
	13, // 13: teleport.recordingencryption.v1.RecordingEncryptionService.CompleteRotation:input_type -> teleport.recordingencryption.v1.CompleteRotationRequest
	15, // 14: teleport.recordingencryption.v1.RecordingEncryptionService.RollbackRotation:input_type -> teleport.recordingencryption.v1.RollbackRotationRequest
	2,  // 15: teleport.recordingencryption.v1.RecordingEncryptionService.CreateUpload:output_type -> teleport.recordingencryption.v1.CreateUploadResponse
	5,  // 16: teleport.recordingencryption.v1.RecordingEncryptionService.UploadPart:output_type -> teleport.recordingencryption.v1.UploadPartResponse
	7,  // 17: teleport.recordingencryption.v1.RecordingEncryptionService.CompleteUpload:output_type -> teleport.recordingencryption.v1.CompleteUploadResponse
	9,  // 18: teleport.recordingencryption.v1.RecordingEncryptionService.RotateKey:output_type -> teleport.recordingencryption.v1.RotateKeyResponse
	12, // 19: teleport.recordingencryption.v1.RecordingEncryptionService.GetRotationState:output_type -> teleport.recordingencryption.v1.GetRotationStateResponse
	14, // 20: teleport.recordingencryption.v1.RecordingEncryptionService.CompleteRotation:output_type -> teleport.recordingencryption.v1.CompleteRotationResponse
	16, // 21: teleport.recordingencryption.v1.RecordingEncryptionService.RollbackRotation:output_type -> teleport.recordingencryption.v1.RollbackRotationResponse
	15, // [15:22] is the sub-list for method output_type
	8,  // [8:15] is the sub-list for method input_type
	8,  // [8:8] is the sub-list for extension type_name
	8,  // [8:8] is the sub-list for extension extendee
	0,  // [0:8] is the sub-list for field type_name
}

func init() { file_teleport_recordingencryption_v1_recording_encryption_service_proto_init() }
func file_teleport_recordingencryption_v1_recording_encryption_service_proto_init() {
	if File_teleport_recordingencryption_v1_recording_encryption_service_proto != nil {
		return
	}
	file_teleport_recordingencryption_v1_recording_encryption_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_teleport_recordingencryption_v1_recording_encryption_service_proto_rawDesc), len(file_teleport_recordingencryption_v1_recording_encryption_service_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   17,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_teleport_recordingencryption_v1_recording_encryption_service_proto_goTypes,
		DependencyIndexes: file_teleport_recordingencryption_v1_recording_encryption_service_proto_depIdxs,
		MessageInfos:      file_teleport_recordingencryption_v1_recording_encryption_service_proto_msgTypes,
	}.Build()
	File_teleport_recordingencryption_v1_recording_encryption_service_proto = out.File
	file_teleport_recordingencryption_v1_recording_encryption_service_proto_goTypes = nil
	file_teleport_recordingencryption_v1_recording_encryption_service_proto_depIdxs = nil
}
