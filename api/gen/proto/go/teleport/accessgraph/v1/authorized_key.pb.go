// Copyright 2024 Gravitational, Inc
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: teleport/access_graph/v1/authorized_key.proto

package accessgraphv1

import (
	v1 "github.com/gravitational/teleport/api/gen/proto/go/teleport/header/v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// The `AuthorizedKey` message represents an authorized key entry for a specific local user.
// These authorized keys are generated by the server when a particular SSH AuthorizedKey is granted access to a user on the node.
type AuthorizedKey struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// metadata is the AuthorizedKey's metadata.
	Metadata *v1.Metadata `protobuf:"bytes,1,opt,name=metadata,proto3" json:"metadata,omitempty"`
	// kind is a resource kind.
	Kind string `protobuf:"bytes,2,opt,name=kind,proto3" json:"kind,omitempty"`
	// sub_kind is an optional resource sub kind, used in some resources.
	SubKind string `protobuf:"bytes,3,opt,name=sub_kind,json=subKind,proto3" json:"sub_kind,omitempty"`
	// version is version.
	Version string `protobuf:"bytes,4,opt,name=version,proto3" json:"version,omitempty"`
	// Spec is an AuthorizedKey specification.
	Spec          *AuthorizedKeySpec `protobuf:"bytes,5,opt,name=spec,proto3" json:"spec,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AuthorizedKey) Reset() {
	*x = AuthorizedKey{}
	mi := &file_teleport_access_graph_v1_authorized_key_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AuthorizedKey) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthorizedKey) ProtoMessage() {}

func (x *AuthorizedKey) ProtoReflect() protoreflect.Message {
	mi := &file_teleport_access_graph_v1_authorized_key_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthorizedKey.ProtoReflect.Descriptor instead.
func (*AuthorizedKey) Descriptor() ([]byte, []int) {
	return file_teleport_access_graph_v1_authorized_key_proto_rawDescGZIP(), []int{0}
}

func (x *AuthorizedKey) GetMetadata() *v1.Metadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *AuthorizedKey) GetKind() string {
	if x != nil {
		return x.Kind
	}
	return ""
}

func (x *AuthorizedKey) GetSubKind() string {
	if x != nil {
		return x.SubKind
	}
	return ""
}

func (x *AuthorizedKey) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *AuthorizedKey) GetSpec() *AuthorizedKeySpec {
	if x != nil {
		return x.Spec
	}
	return nil
}

// AuthorizedKeySpec is the authorized key spec.
type AuthorizedKeySpec struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// host_id is the node identifier and must match the credentials used.
	HostId string `protobuf:"bytes,1,opt,name=host_id,json=hostId,proto3" json:"host_id,omitempty"`
	// key_fingerprint is the SHA256 SSH public key fingerprint.
	KeyFingerprint string `protobuf:"bytes,2,opt,name=key_fingerprint,json=keyFingerprint,proto3" json:"key_fingerprint,omitempty"`
	// host_user is the user who can be accessed using the fingerprint above.
	HostUser string `protobuf:"bytes,3,opt,name=host_user,json=hostUser,proto3" json:"host_user,omitempty"`
	// key_comment is the authorized key's comment.
	// Authorized keys consist of the following space-separated fields:
	// options, keytype, base64-encoded key, comment.  The options field is optional.
	KeyComment string `protobuf:"bytes,4,opt,name=key_comment,json=keyComment,proto3" json:"key_comment,omitempty"`
	// key_type is the ssh's key type.
	KeyType       string `protobuf:"bytes,5,opt,name=key_type,json=keyType,proto3" json:"key_type,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AuthorizedKeySpec) Reset() {
	*x = AuthorizedKeySpec{}
	mi := &file_teleport_access_graph_v1_authorized_key_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AuthorizedKeySpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthorizedKeySpec) ProtoMessage() {}

func (x *AuthorizedKeySpec) ProtoReflect() protoreflect.Message {
	mi := &file_teleport_access_graph_v1_authorized_key_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthorizedKeySpec.ProtoReflect.Descriptor instead.
func (*AuthorizedKeySpec) Descriptor() ([]byte, []int) {
	return file_teleport_access_graph_v1_authorized_key_proto_rawDescGZIP(), []int{1}
}

func (x *AuthorizedKeySpec) GetHostId() string {
	if x != nil {
		return x.HostId
	}
	return ""
}

func (x *AuthorizedKeySpec) GetKeyFingerprint() string {
	if x != nil {
		return x.KeyFingerprint
	}
	return ""
}

func (x *AuthorizedKeySpec) GetHostUser() string {
	if x != nil {
		return x.HostUser
	}
	return ""
}

func (x *AuthorizedKeySpec) GetKeyComment() string {
	if x != nil {
		return x.KeyComment
	}
	return ""
}

func (x *AuthorizedKeySpec) GetKeyType() string {
	if x != nil {
		return x.KeyType
	}
	return ""
}

var File_teleport_access_graph_v1_authorized_key_proto protoreflect.FileDescriptor

const file_teleport_access_graph_v1_authorized_key_proto_rawDesc = "" +
	"\n" +
	"-teleport/access_graph/v1/authorized_key.proto\x12\x18teleport.access_graph.v1\x1a!teleport/header/v1/metadata.proto\"\xd3\x01\n" +
	"\rAuthorizedKey\x128\n" +
	"\bmetadata\x18\x01 \x01(\v2\x1c.teleport.header.v1.MetadataR\bmetadata\x12\x12\n" +
	"\x04kind\x18\x02 \x01(\tR\x04kind\x12\x19\n" +
	"\bsub_kind\x18\x03 \x01(\tR\asubKind\x12\x18\n" +
	"\aversion\x18\x04 \x01(\tR\aversion\x12?\n" +
	"\x04spec\x18\x05 \x01(\v2+.teleport.access_graph.v1.AuthorizedKeySpecR\x04spec\"\xae\x01\n" +
	"\x11AuthorizedKeySpec\x12\x17\n" +
	"\ahost_id\x18\x01 \x01(\tR\x06hostId\x12'\n" +
	"\x0fkey_fingerprint\x18\x02 \x01(\tR\x0ekeyFingerprint\x12\x1b\n" +
	"\thost_user\x18\x03 \x01(\tR\bhostUser\x12\x1f\n" +
	"\vkey_comment\x18\x04 \x01(\tR\n" +
	"keyComment\x12\x19\n" +
	"\bkey_type\x18\x05 \x01(\tR\akeyTypeBZZXgithub.com/gravitational/teleport/api/gen/proto/go/teleport/accessgraph/v1;accessgraphv1b\x06proto3"

var (
	file_teleport_access_graph_v1_authorized_key_proto_rawDescOnce sync.Once
	file_teleport_access_graph_v1_authorized_key_proto_rawDescData []byte
)

func file_teleport_access_graph_v1_authorized_key_proto_rawDescGZIP() []byte {
	file_teleport_access_graph_v1_authorized_key_proto_rawDescOnce.Do(func() {
		file_teleport_access_graph_v1_authorized_key_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_teleport_access_graph_v1_authorized_key_proto_rawDesc), len(file_teleport_access_graph_v1_authorized_key_proto_rawDesc)))
	})
	return file_teleport_access_graph_v1_authorized_key_proto_rawDescData
}

var file_teleport_access_graph_v1_authorized_key_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_teleport_access_graph_v1_authorized_key_proto_goTypes = []any{
	(*AuthorizedKey)(nil),     // 0: teleport.access_graph.v1.AuthorizedKey
	(*AuthorizedKeySpec)(nil), // 1: teleport.access_graph.v1.AuthorizedKeySpec
	(*v1.Metadata)(nil),       // 2: teleport.header.v1.Metadata
}
var file_teleport_access_graph_v1_authorized_key_proto_depIdxs = []int32{
	2, // 0: teleport.access_graph.v1.AuthorizedKey.metadata:type_name -> teleport.header.v1.Metadata
	1, // 1: teleport.access_graph.v1.AuthorizedKey.spec:type_name -> teleport.access_graph.v1.AuthorizedKeySpec
	2, // [2:2] is the sub-list for method output_type
	2, // [2:2] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_teleport_access_graph_v1_authorized_key_proto_init() }
func file_teleport_access_graph_v1_authorized_key_proto_init() {
	if File_teleport_access_graph_v1_authorized_key_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_teleport_access_graph_v1_authorized_key_proto_rawDesc), len(file_teleport_access_graph_v1_authorized_key_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_teleport_access_graph_v1_authorized_key_proto_goTypes,
		DependencyIndexes: file_teleport_access_graph_v1_authorized_key_proto_depIdxs,
		MessageInfos:      file_teleport_access_graph_v1_authorized_key_proto_msgTypes,
	}.Build()
	File_teleport_access_graph_v1_authorized_key_proto = out.File
	file_teleport_access_graph_v1_authorized_key_proto_goTypes = nil
	file_teleport_access_graph_v1_authorized_key_proto_depIdxs = nil
}
