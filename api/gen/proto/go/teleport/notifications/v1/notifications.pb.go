//
// Teleport
// Copyright (C) 2024  Gravitational, Inc.
//
// This program is free software: you can redistribute it and/or modify
// it under the terms of the GNU Affero General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU Affero General Public License for more details.
//
// You should have received a copy of the GNU Affero General Public License
// along with this program.  If not, see <http://www.gnu.org/licenses/>.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        (unknown)
// source: teleport/notifications/v1/notifications.proto

package notificationsv1

import (
	v1 "github.com/gravitational/teleport/api/gen/proto/go/teleport/header/v1"
	types "github.com/gravitational/teleport/api/types"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// NotificationState the state of a notification for a user. This can represent either "clicked" or "dismissed".
type NotificationState int32

const (
	NotificationState_NOTIFICATION_STATE_UNSPECIFIED NotificationState = 0
	// NOTIFICATION_STATE_CLICKED marks this notification as having been clicked on by the user.
	NotificationState_NOTIFICATION_STATE_CLICKED NotificationState = 1
	// NOTIFICATION_STATE_DISMISSED marks this notification as having been dismissed by the user.
	NotificationState_NOTIFICATION_STATE_DISMISSED NotificationState = 2
)

// Enum value maps for NotificationState.
var (
	NotificationState_name = map[int32]string{
		0: "NOTIFICATION_STATE_UNSPECIFIED",
		1: "NOTIFICATION_STATE_CLICKED",
		2: "NOTIFICATION_STATE_DISMISSED",
	}
	NotificationState_value = map[string]int32{
		"NOTIFICATION_STATE_UNSPECIFIED": 0,
		"NOTIFICATION_STATE_CLICKED":     1,
		"NOTIFICATION_STATE_DISMISSED":   2,
	}
)

func (x NotificationState) Enum() *NotificationState {
	p := new(NotificationState)
	*p = x
	return p
}

func (x NotificationState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (NotificationState) Descriptor() protoreflect.EnumDescriptor {
	return file_teleport_notifications_v1_notifications_proto_enumTypes[0].Descriptor()
}

func (NotificationState) Type() protoreflect.EnumType {
	return &file_teleport_notifications_v1_notifications_proto_enumTypes[0]
}

func (x NotificationState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use NotificationState.Descriptor instead.
func (NotificationState) EnumDescriptor() ([]byte, []int) {
	return file_teleport_notifications_v1_notifications_proto_rawDescGZIP(), []int{0}
}

// Notification represents a notification item.
type Notification struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// kind is the resource kind ("notification").
	Kind string `protobuf:"bytes,1,opt,name=kind,proto3" json:"kind,omitempty"`
	// sub_kind represents the unique kind of notification this is, eg. `access-request-approved`
	SubKind string `protobuf:"bytes,2,opt,name=sub_kind,json=subKind,proto3" json:"sub_kind,omitempty"`
	// version is the resource version.
	Version string `protobuf:"bytes,3,opt,name=version,proto3" json:"version,omitempty"`
	// metadata is the notification's metadata. This contains the notification's labels, and expiry. All custom notification metadata should be stored in labels.
	Metadata *v1.Metadata `protobuf:"bytes,4,opt,name=metadata,proto3" json:"metadata,omitempty"`
	// spec is the notification specification.
	Spec *NotificationSpec `protobuf:"bytes,5,opt,name=spec,proto3" json:"spec,omitempty"`
}

func (x *Notification) Reset() {
	*x = Notification{}
	if protoimpl.UnsafeEnabled {
		mi := &file_teleport_notifications_v1_notifications_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Notification) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Notification) ProtoMessage() {}

func (x *Notification) ProtoReflect() protoreflect.Message {
	mi := &file_teleport_notifications_v1_notifications_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Notification.ProtoReflect.Descriptor instead.
func (*Notification) Descriptor() ([]byte, []int) {
	return file_teleport_notifications_v1_notifications_proto_rawDescGZIP(), []int{0}
}

func (x *Notification) GetKind() string {
	if x != nil {
		return x.Kind
	}
	return ""
}

func (x *Notification) GetSubKind() string {
	if x != nil {
		return x.SubKind
	}
	return ""
}

func (x *Notification) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *Notification) GetMetadata() *v1.Metadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *Notification) GetSpec() *NotificationSpec {
	if x != nil {
		return x.Spec
	}
	return nil
}

// NotificationSpec is the notification specification.
type NotificationSpec struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// created is when the notification was created, in UNIX time.
	Created *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=created,proto3" json:"created,omitempty"`
	// unscoped is whether the notification shouldn't be restricted to a specific audience. This is to prevent the potential future possibility that a user-specific notification contains information that the user should no longer be allowed to see. Default is true.
	Unscoped bool `protobuf:"varint,3,opt,name=unscoped,proto3" json:"unscoped,omitempty"`
	// username is the username of the target user if this is a user-specific notification. Requests for global notifications with a username will be rejected.
	Username string `protobuf:"bytes,4,opt,name=username,proto3" json:"username,omitempty"`
}

func (x *NotificationSpec) Reset() {
	*x = NotificationSpec{}
	if protoimpl.UnsafeEnabled {
		mi := &file_teleport_notifications_v1_notifications_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NotificationSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotificationSpec) ProtoMessage() {}

func (x *NotificationSpec) ProtoReflect() protoreflect.Message {
	mi := &file_teleport_notifications_v1_notifications_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotificationSpec.ProtoReflect.Descriptor instead.
func (*NotificationSpec) Descriptor() ([]byte, []int) {
	return file_teleport_notifications_v1_notifications_proto_rawDescGZIP(), []int{1}
}

func (x *NotificationSpec) GetCreated() *timestamppb.Timestamp {
	if x != nil {
		return x.Created
	}
	return nil
}

func (x *NotificationSpec) GetUnscoped() bool {
	if x != nil {
		return x.Unscoped
	}
	return false
}

func (x *NotificationSpec) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

// GlobalNotification represents a global notification.
type GlobalNotification struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// kind is the resource kind ("global_notification").
	Kind string `protobuf:"bytes,1,opt,name=kind,proto3" json:"kind,omitempty"`
	// sub_kind is the optional resource subkind. This is unused.
	SubKind string `protobuf:"bytes,2,opt,name=sub_kind,json=subKind,proto3" json:"sub_kind,omitempty"`
	// version is the resource version.
	Version string `protobuf:"bytes,3,opt,name=version,proto3" json:"version,omitempty"`
	// metadata is the user last seen notification object's metadata.
	Metadata *v1.Metadata `protobuf:"bytes,4,opt,name=metadata,proto3" json:"metadata,omitempty"`
	// spec is the global notification's specification.
	Spec *GlobalNotificationSpec `protobuf:"bytes,5,opt,name=spec,proto3" json:"spec,omitempty"`
}

func (x *GlobalNotification) Reset() {
	*x = GlobalNotification{}
	if protoimpl.UnsafeEnabled {
		mi := &file_teleport_notifications_v1_notifications_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GlobalNotification) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GlobalNotification) ProtoMessage() {}

func (x *GlobalNotification) ProtoReflect() protoreflect.Message {
	mi := &file_teleport_notifications_v1_notifications_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GlobalNotification.ProtoReflect.Descriptor instead.
func (*GlobalNotification) Descriptor() ([]byte, []int) {
	return file_teleport_notifications_v1_notifications_proto_rawDescGZIP(), []int{2}
}

func (x *GlobalNotification) GetKind() string {
	if x != nil {
		return x.Kind
	}
	return ""
}

func (x *GlobalNotification) GetSubKind() string {
	if x != nil {
		return x.SubKind
	}
	return ""
}

func (x *GlobalNotification) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *GlobalNotification) GetMetadata() *v1.Metadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *GlobalNotification) GetSpec() *GlobalNotificationSpec {
	if x != nil {
		return x.Spec
	}
	return nil
}

// GlobalNotificationSpec is the global notification's specification.
type GlobalNotificationSpec struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Matcher for determining the target of this notification.
	//
	// Types that are assignable to Matcher:
	//
	//	*GlobalNotificationSpec_ByPermissions
	//	*GlobalNotificationSpec_ByRoles
	//	*GlobalNotificationSpec_All
	Matcher isGlobalNotificationSpec_Matcher `protobuf_oneof:"matcher"`
	// match_all_conditions is whether or not all the conditions specified by the matcher must be met,
	// if false, only one of the conditions needs to be met.
	MatchAllConditions bool `protobuf:"varint,4,opt,name=match_all_conditions,json=matchAllConditions,proto3" json:"match_all_conditions,omitempty"`
	// notification is the notification itself.
	Notification *Notification `protobuf:"bytes,5,opt,name=notification,proto3" json:"notification,omitempty"`
}

func (x *GlobalNotificationSpec) Reset() {
	*x = GlobalNotificationSpec{}
	if protoimpl.UnsafeEnabled {
		mi := &file_teleport_notifications_v1_notifications_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GlobalNotificationSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GlobalNotificationSpec) ProtoMessage() {}

func (x *GlobalNotificationSpec) ProtoReflect() protoreflect.Message {
	mi := &file_teleport_notifications_v1_notifications_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GlobalNotificationSpec.ProtoReflect.Descriptor instead.
func (*GlobalNotificationSpec) Descriptor() ([]byte, []int) {
	return file_teleport_notifications_v1_notifications_proto_rawDescGZIP(), []int{3}
}

func (m *GlobalNotificationSpec) GetMatcher() isGlobalNotificationSpec_Matcher {
	if m != nil {
		return m.Matcher
	}
	return nil
}

func (x *GlobalNotificationSpec) GetByPermissions() *ByPermissions {
	if x, ok := x.GetMatcher().(*GlobalNotificationSpec_ByPermissions); ok {
		return x.ByPermissions
	}
	return nil
}

func (x *GlobalNotificationSpec) GetByRoles() *ByRoles {
	if x, ok := x.GetMatcher().(*GlobalNotificationSpec_ByRoles); ok {
		return x.ByRoles
	}
	return nil
}

func (x *GlobalNotificationSpec) GetAll() bool {
	if x, ok := x.GetMatcher().(*GlobalNotificationSpec_All); ok {
		return x.All
	}
	return false
}

func (x *GlobalNotificationSpec) GetMatchAllConditions() bool {
	if x != nil {
		return x.MatchAllConditions
	}
	return false
}

func (x *GlobalNotificationSpec) GetNotification() *Notification {
	if x != nil {
		return x.Notification
	}
	return nil
}

type isGlobalNotificationSpec_Matcher interface {
	isGlobalNotificationSpec_Matcher()
}

type GlobalNotificationSpec_ByPermissions struct {
	// by_permissions represents the RoleConditions needed for a user to receive this notification.
	// If multiple permissions are defined and `MatchAllConditions` is true, the user will need to have
	// all of them to receive this notification.
	ByPermissions *ByPermissions `protobuf:"bytes,1,opt,name=by_permissions,json=byPermissions,proto3,oneof"`
}

type GlobalNotificationSpec_ByRoles struct {
	// by_roles represents the roles targeted by this notification.
	// If multiple roles are defined and `MatchAllConditions` is true, the user will need to have all
	// of them to receive this notification.
	ByRoles *ByRoles `protobuf:"bytes,2,opt,name=by_roles,json=byRoles,proto3,oneof"`
}

type GlobalNotificationSpec_All struct {
	// all represents whether to target all users, regardless of roles or permissions.
	All bool `protobuf:"varint,3,opt,name=all,proto3,oneof"`
}

func (*GlobalNotificationSpec_ByPermissions) isGlobalNotificationSpec_Matcher() {}

func (*GlobalNotificationSpec_ByRoles) isGlobalNotificationSpec_Matcher() {}

func (*GlobalNotificationSpec_All) isGlobalNotificationSpec_Matcher() {}

// ByPermissions represents the RoleConditions needed for a user to receive this notification.
type ByPermissions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RoleConditions []*types.RoleConditions `protobuf:"bytes,1,rep,name=role_conditions,json=roleConditions,proto3" json:"role_conditions,omitempty"`
}

func (x *ByPermissions) Reset() {
	*x = ByPermissions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_teleport_notifications_v1_notifications_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ByPermissions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ByPermissions) ProtoMessage() {}

func (x *ByPermissions) ProtoReflect() protoreflect.Message {
	mi := &file_teleport_notifications_v1_notifications_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ByPermissions.ProtoReflect.Descriptor instead.
func (*ByPermissions) Descriptor() ([]byte, []int) {
	return file_teleport_notifications_v1_notifications_proto_rawDescGZIP(), []int{4}
}

func (x *ByPermissions) GetRoleConditions() []*types.RoleConditions {
	if x != nil {
		return x.RoleConditions
	}
	return nil
}

// ByRoles represents the roles targeted by this notification.
type ByRoles struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Roles []string `protobuf:"bytes,1,rep,name=roles,proto3" json:"roles,omitempty"`
}

func (x *ByRoles) Reset() {
	*x = ByRoles{}
	if protoimpl.UnsafeEnabled {
		mi := &file_teleport_notifications_v1_notifications_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ByRoles) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ByRoles) ProtoMessage() {}

func (x *ByRoles) ProtoReflect() protoreflect.Message {
	mi := &file_teleport_notifications_v1_notifications_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ByRoles.ProtoReflect.Descriptor instead.
func (*ByRoles) Descriptor() ([]byte, []int) {
	return file_teleport_notifications_v1_notifications_proto_rawDescGZIP(), []int{5}
}

func (x *ByRoles) GetRoles() []string {
	if x != nil {
		return x.Roles
	}
	return nil
}

// UserNotificationState represents a notification's state for a user. This is to keep track
// of whether the user has clicked on or dismissed the notification.
type UserNotificationState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// kind is the resource kind ("user_notification_state").
	Kind string `protobuf:"bytes,1,opt,name=kind,proto3" json:"kind,omitempty"`
	// sub_kind is the optional resource subkind. This is unused.
	SubKind string `protobuf:"bytes,2,opt,name=sub_kind,json=subKind,proto3" json:"sub_kind,omitempty"`
	// version is the resource version.
	Version string `protobuf:"bytes,3,opt,name=version,proto3" json:"version,omitempty"`
	// metadata is the user notification state's metadata.
	Metadata *v1.Metadata `protobuf:"bytes,4,opt,name=metadata,proto3" json:"metadata,omitempty"`
	// spec is the user notification state's specification.
	Spec *UserNotificationStateSpec `protobuf:"bytes,5,opt,name=spec,proto3" json:"spec,omitempty"`
	// status is the state of this user notification state, it contains the notification state itself which will be dynamically modified.
	Status *UserNotificationStateStatus `protobuf:"bytes,6,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *UserNotificationState) Reset() {
	*x = UserNotificationState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_teleport_notifications_v1_notifications_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserNotificationState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserNotificationState) ProtoMessage() {}

func (x *UserNotificationState) ProtoReflect() protoreflect.Message {
	mi := &file_teleport_notifications_v1_notifications_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserNotificationState.ProtoReflect.Descriptor instead.
func (*UserNotificationState) Descriptor() ([]byte, []int) {
	return file_teleport_notifications_v1_notifications_proto_rawDescGZIP(), []int{6}
}

func (x *UserNotificationState) GetKind() string {
	if x != nil {
		return x.Kind
	}
	return ""
}

func (x *UserNotificationState) GetSubKind() string {
	if x != nil {
		return x.SubKind
	}
	return ""
}

func (x *UserNotificationState) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *UserNotificationState) GetMetadata() *v1.Metadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *UserNotificationState) GetSpec() *UserNotificationStateSpec {
	if x != nil {
		return x.Spec
	}
	return nil
}

func (x *UserNotificationState) GetStatus() *UserNotificationStateStatus {
	if x != nil {
		return x.Status
	}
	return nil
}

// UserNotificationStateSpec is the user notification state's specification.
type UserNotificationStateSpec struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// notification_id is the ID of the notification this state is for.
	NotificationId string `protobuf:"bytes,1,opt,name=notification_id,json=notificationId,proto3" json:"notification_id,omitempty"`
}

func (x *UserNotificationStateSpec) Reset() {
	*x = UserNotificationStateSpec{}
	if protoimpl.UnsafeEnabled {
		mi := &file_teleport_notifications_v1_notifications_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserNotificationStateSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserNotificationStateSpec) ProtoMessage() {}

func (x *UserNotificationStateSpec) ProtoReflect() protoreflect.Message {
	mi := &file_teleport_notifications_v1_notifications_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserNotificationStateSpec.ProtoReflect.Descriptor instead.
func (*UserNotificationStateSpec) Descriptor() ([]byte, []int) {
	return file_teleport_notifications_v1_notifications_proto_rawDescGZIP(), []int{7}
}

func (x *UserNotificationStateSpec) GetNotificationId() string {
	if x != nil {
		return x.NotificationId
	}
	return ""
}

// UserNotificationStateStatus is the status of this user notification state, it contains the notification state itself which will be dynamically modified.
type UserNotificationStateStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// notification_state is the state of this notification for the user. This can represent either "clicked" or "dismissed".
	NotificationState NotificationState `protobuf:"varint,1,opt,name=notification_state,json=notificationState,proto3,enum=teleport.notifications.v1.NotificationState" json:"notification_state,omitempty"`
}

func (x *UserNotificationStateStatus) Reset() {
	*x = UserNotificationStateStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_teleport_notifications_v1_notifications_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserNotificationStateStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserNotificationStateStatus) ProtoMessage() {}

func (x *UserNotificationStateStatus) ProtoReflect() protoreflect.Message {
	mi := &file_teleport_notifications_v1_notifications_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserNotificationStateStatus.ProtoReflect.Descriptor instead.
func (*UserNotificationStateStatus) Descriptor() ([]byte, []int) {
	return file_teleport_notifications_v1_notifications_proto_rawDescGZIP(), []int{8}
}

func (x *UserNotificationStateStatus) GetNotificationState() NotificationState {
	if x != nil {
		return x.NotificationState
	}
	return NotificationState_NOTIFICATION_STATE_UNSPECIFIED
}

// UserLastSeenNotification represents the timestamp of the last notification a user has seen.
type UserLastSeenNotification struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// kind is the resource kind ("user_last_seen_notification").
	Kind string `protobuf:"bytes,1,opt,name=kind,proto3" json:"kind,omitempty"`
	// sub_kind is the optional resource subkind. This is unused.
	SubKind string `protobuf:"bytes,2,opt,name=sub_kind,json=subKind,proto3" json:"sub_kind,omitempty"`
	// version is the resource version.
	Version string `protobuf:"bytes,3,opt,name=version,proto3" json:"version,omitempty"`
	// metadata is the user last seen notification object's metadata.
	Metadata *v1.Metadata `protobuf:"bytes,4,opt,name=metadata,proto3" json:"metadata,omitempty"`
	// UserLastSeenNotificationSpec is the user last seen notification item's specification.
	Spec *UserLastSeenNotificationSpec `protobuf:"bytes,5,opt,name=spec,proto3" json:"spec,omitempty"`
	// status is the timestamp of this user's last seen notification, it contains the timestamp of the notification which will be dynamically modified.
	Status *UserLastSeenNotificationStatus `protobuf:"bytes,7,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *UserLastSeenNotification) Reset() {
	*x = UserLastSeenNotification{}
	if protoimpl.UnsafeEnabled {
		mi := &file_teleport_notifications_v1_notifications_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserLastSeenNotification) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserLastSeenNotification) ProtoMessage() {}

func (x *UserLastSeenNotification) ProtoReflect() protoreflect.Message {
	mi := &file_teleport_notifications_v1_notifications_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserLastSeenNotification.ProtoReflect.Descriptor instead.
func (*UserLastSeenNotification) Descriptor() ([]byte, []int) {
	return file_teleport_notifications_v1_notifications_proto_rawDescGZIP(), []int{9}
}

func (x *UserLastSeenNotification) GetKind() string {
	if x != nil {
		return x.Kind
	}
	return ""
}

func (x *UserLastSeenNotification) GetSubKind() string {
	if x != nil {
		return x.SubKind
	}
	return ""
}

func (x *UserLastSeenNotification) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *UserLastSeenNotification) GetMetadata() *v1.Metadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *UserLastSeenNotification) GetSpec() *UserLastSeenNotificationSpec {
	if x != nil {
		return x.Spec
	}
	return nil
}

func (x *UserLastSeenNotification) GetStatus() *UserLastSeenNotificationStatus {
	if x != nil {
		return x.Status
	}
	return nil
}

// UserLastSeenNotificationSpec is a user last seen notification specification.
type UserLastSeenNotificationSpec struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UserLastSeenNotificationSpec) Reset() {
	*x = UserLastSeenNotificationSpec{}
	if protoimpl.UnsafeEnabled {
		mi := &file_teleport_notifications_v1_notifications_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserLastSeenNotificationSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserLastSeenNotificationSpec) ProtoMessage() {}

func (x *UserLastSeenNotificationSpec) ProtoReflect() protoreflect.Message {
	mi := &file_teleport_notifications_v1_notifications_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserLastSeenNotificationSpec.ProtoReflect.Descriptor instead.
func (*UserLastSeenNotificationSpec) Descriptor() ([]byte, []int) {
	return file_teleport_notifications_v1_notifications_proto_rawDescGZIP(), []int{10}
}

// UserLastSeenNotificationStatus is the timestamp of this user's last seen notification, it contains the timestamp of the notification which will be dynamically modified.
type UserLastSeenNotificationStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// last_seen_time is the timestamp of the last notification that the user has seen.
	LastSeenTime *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=last_seen_time,json=lastSeenTime,proto3" json:"last_seen_time,omitempty"`
}

func (x *UserLastSeenNotificationStatus) Reset() {
	*x = UserLastSeenNotificationStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_teleport_notifications_v1_notifications_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserLastSeenNotificationStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserLastSeenNotificationStatus) ProtoMessage() {}

func (x *UserLastSeenNotificationStatus) ProtoReflect() protoreflect.Message {
	mi := &file_teleport_notifications_v1_notifications_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserLastSeenNotificationStatus.ProtoReflect.Descriptor instead.
func (*UserLastSeenNotificationStatus) Descriptor() ([]byte, []int) {
	return file_teleport_notifications_v1_notifications_proto_rawDescGZIP(), []int{11}
}

func (x *UserLastSeenNotificationStatus) GetLastSeenTime() *timestamppb.Timestamp {
	if x != nil {
		return x.LastSeenTime
	}
	return nil
}

var File_teleport_notifications_v1_notifications_proto protoreflect.FileDescriptor

var file_teleport_notifications_v1_notifications_proto_rawDesc = []byte{
	0x0a, 0x2d, 0x74, 0x65, 0x6c, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x2f, 0x6e, 0x6f, 0x74, 0x69, 0x66,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x76, 0x31, 0x2f, 0x6e, 0x6f, 0x74, 0x69,
	0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x19, 0x74, 0x65, 0x6c, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x21, 0x74, 0x65, 0x6c,
	0x65, 0x70, 0x6f, 0x72, 0x74, 0x2f, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x2f, 0x76, 0x31, 0x2f,
	0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x21,
	0x74, 0x65, 0x6c, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x2f, 0x6c, 0x65, 0x67, 0x61, 0x63, 0x79, 0x2f,
	0x74, 0x79, 0x70, 0x65, 0x73, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x22, 0xd2, 0x01, 0x0a, 0x0c, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x6b, 0x69, 0x6e, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6b, 0x69, 0x6e, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x75, 0x62, 0x5f, 0x6b, 0x69,
	0x6e, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x75, 0x62, 0x4b, 0x69, 0x6e,
	0x64, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x38, 0x0a, 0x08, 0x6d,
	0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e,
	0x74, 0x65, 0x6c, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x2e,
	0x76, 0x31, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x08, 0x6d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x3f, 0x0a, 0x04, 0x73, 0x70, 0x65, 0x63, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x74, 0x65, 0x6c, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x6e,
	0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e,
	0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x70, 0x65, 0x63,
	0x52, 0x04, 0x73, 0x70, 0x65, 0x63, 0x22, 0x8a, 0x01, 0x0a, 0x10, 0x4e, 0x6f, 0x74, 0x69, 0x66,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x70, 0x65, 0x63, 0x12, 0x34, 0x0a, 0x07, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x6e, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x08, 0x75, 0x6e, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x64, 0x12, 0x1a, 0x0a,
	0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x4a, 0x04, 0x08, 0x01, 0x10, 0x02, 0x52,
	0x02, 0x69, 0x64, 0x22, 0xde, 0x01, 0x0a, 0x12, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x4e, 0x6f,
	0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x6b, 0x69,
	0x6e, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6b, 0x69, 0x6e, 0x64, 0x12, 0x19,
	0x0a, 0x08, 0x73, 0x75, 0x62, 0x5f, 0x6b, 0x69, 0x6e, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x73, 0x75, 0x62, 0x4b, 0x69, 0x6e, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x12, 0x38, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x74, 0x65, 0x6c, 0x65, 0x70, 0x6f, 0x72, 0x74,
	0x2e, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x45, 0x0a,
	0x04, 0x73, 0x70, 0x65, 0x63, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x74, 0x65,
	0x6c, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x4e, 0x6f,
	0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x70, 0x65, 0x63, 0x52, 0x04,
	0x73, 0x70, 0x65, 0x63, 0x22, 0xca, 0x02, 0x0a, 0x16, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x4e,
	0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x70, 0x65, 0x63, 0x12,
	0x51, 0x0a, 0x0e, 0x62, 0x79, 0x5f, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x74, 0x65, 0x6c, 0x65, 0x70, 0x6f,
	0x72, 0x74, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x2e, 0x76, 0x31, 0x2e, 0x42, 0x79, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x73, 0x48, 0x00, 0x52, 0x0d, 0x62, 0x79, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x73, 0x12, 0x3f, 0x0a, 0x08, 0x62, 0x79, 0x5f, 0x72, 0x6f, 0x6c, 0x65, 0x73, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x74, 0x65, 0x6c, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x2e,
	0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31,
	0x2e, 0x42, 0x79, 0x52, 0x6f, 0x6c, 0x65, 0x73, 0x48, 0x00, 0x52, 0x07, 0x62, 0x79, 0x52, 0x6f,
	0x6c, 0x65, 0x73, 0x12, 0x12, 0x0a, 0x03, 0x61, 0x6c, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08,
	0x48, 0x00, 0x52, 0x03, 0x61, 0x6c, 0x6c, 0x12, 0x30, 0x0a, 0x14, 0x6d, 0x61, 0x74, 0x63, 0x68,
	0x5f, 0x61, 0x6c, 0x6c, 0x5f, 0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x12, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x41, 0x6c, 0x6c, 0x43,
	0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x4b, 0x0a, 0x0c, 0x6e, 0x6f, 0x74,
	0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x27, 0x2e, 0x74, 0x65, 0x6c, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x6f, 0x74, 0x69,
	0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0c, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x09, 0x0a, 0x07, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x65,
	0x72, 0x22, 0x4f, 0x0a, 0x0d, 0x42, 0x79, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x73, 0x12, 0x3e, 0x0a, 0x0f, 0x72, 0x6f, 0x6c, 0x65, 0x5f, 0x63, 0x6f, 0x6e, 0x64, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x74, 0x79,
	0x70, 0x65, 0x73, 0x2e, 0x52, 0x6f, 0x6c, 0x65, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x52, 0x0e, 0x72, 0x6f, 0x6c, 0x65, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x22, 0x1f, 0x0a, 0x07, 0x42, 0x79, 0x52, 0x6f, 0x6c, 0x65, 0x73, 0x12, 0x14, 0x0a,
	0x05, 0x72, 0x6f, 0x6c, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x72, 0x6f,
	0x6c, 0x65, 0x73, 0x22, 0xb4, 0x02, 0x0a, 0x15, 0x55, 0x73, 0x65, 0x72, 0x4e, 0x6f, 0x74, 0x69,
	0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x6b, 0x69, 0x6e, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6b, 0x69, 0x6e,
	0x64, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x75, 0x62, 0x5f, 0x6b, 0x69, 0x6e, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x75, 0x62, 0x4b, 0x69, 0x6e, 0x64, 0x12, 0x18, 0x0a, 0x07,
	0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x38, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61,
	0x74, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x74, 0x65, 0x6c, 0x65, 0x70,
	0x6f, 0x72, 0x74, 0x2e, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x65,
	0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61,
	0x12, 0x48, 0x0a, 0x04, 0x73, 0x70, 0x65, 0x63, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x34,
	0x2e, 0x74, 0x65, 0x6c, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x4e,
	0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x65,
	0x53, 0x70, 0x65, 0x63, 0x52, 0x04, 0x73, 0x70, 0x65, 0x63, 0x12, 0x4e, 0x0a, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x36, 0x2e, 0x74, 0x65, 0x6c,
	0x65, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x4e, 0x6f, 0x74, 0x69, 0x66,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x44, 0x0a, 0x19, 0x55, 0x73,
	0x65, 0x72, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74,
	0x61, 0x74, 0x65, 0x53, 0x70, 0x65, 0x63, 0x12, 0x27, 0x0a, 0x0f, 0x6e, 0x6f, 0x74, 0x69, 0x66,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64,
	0x22, 0x7a, 0x0a, 0x1b, 0x55, 0x73, 0x65, 0x72, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x5b, 0x0a, 0x12, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2c, 0x2e, 0x74, 0x65,
	0x6c, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x11, 0x6e, 0x6f, 0x74, 0x69, 0x66,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x22, 0xc9, 0x02, 0x0a,
	0x18, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x61, 0x73, 0x74, 0x53, 0x65, 0x65, 0x6e, 0x4e, 0x6f, 0x74,
	0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x6b, 0x69, 0x6e,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6b, 0x69, 0x6e, 0x64, 0x12, 0x19, 0x0a,
	0x08, 0x73, 0x75, 0x62, 0x5f, 0x6b, 0x69, 0x6e, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x73, 0x75, 0x62, 0x4b, 0x69, 0x6e, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x12, 0x38, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x74, 0x65, 0x6c, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x2e,
	0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61,
	0x74, 0x61, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x4b, 0x0a, 0x04,
	0x73, 0x70, 0x65, 0x63, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x37, 0x2e, 0x74, 0x65, 0x6c,
	0x65, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x61, 0x73, 0x74, 0x53,
	0x65, 0x65, 0x6e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53,
	0x70, 0x65, 0x63, 0x52, 0x04, 0x73, 0x70, 0x65, 0x63, 0x12, 0x51, 0x0a, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x39, 0x2e, 0x74, 0x65, 0x6c, 0x65,
	0x70, 0x6f, 0x72, 0x74, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x61, 0x73, 0x74, 0x53, 0x65,
	0x65, 0x6e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x4a, 0x04, 0x08, 0x06,
	0x10, 0x07, 0x52, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x22, 0x1e, 0x0a, 0x1c, 0x55, 0x73, 0x65, 0x72,
	0x4c, 0x61, 0x73, 0x74, 0x53, 0x65, 0x65, 0x6e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x53, 0x70, 0x65, 0x63, 0x22, 0x62, 0x0a, 0x1e, 0x55, 0x73, 0x65, 0x72,
	0x4c, 0x61, 0x73, 0x74, 0x53, 0x65, 0x65, 0x6e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x40, 0x0a, 0x0e, 0x6c, 0x61,
	0x73, 0x74, 0x5f, 0x73, 0x65, 0x65, 0x6e, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0c,
	0x6c, 0x61, 0x73, 0x74, 0x53, 0x65, 0x65, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x2a, 0x79, 0x0a, 0x11,
	0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x12, 0x22, 0x0a, 0x1e, 0x4e, 0x4f, 0x54, 0x49, 0x46, 0x49, 0x43, 0x41, 0x54, 0x49, 0x4f,
	0x4e, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46,
	0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x1e, 0x0a, 0x1a, 0x4e, 0x4f, 0x54, 0x49, 0x46, 0x49, 0x43,
	0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x43, 0x4c, 0x49, 0x43,
	0x4b, 0x45, 0x44, 0x10, 0x01, 0x12, 0x20, 0x0a, 0x1c, 0x4e, 0x4f, 0x54, 0x49, 0x46, 0x49, 0x43,
	0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x44, 0x49, 0x53, 0x4d,
	0x49, 0x53, 0x53, 0x45, 0x44, 0x10, 0x02, 0x42, 0x5e, 0x5a, 0x5c, 0x67, 0x69, 0x74, 0x68, 0x75,
	0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x67, 0x72, 0x61, 0x76, 0x69, 0x74, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x61, 0x6c, 0x2f, 0x74, 0x65, 0x6c, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x2f, 0x61, 0x70, 0x69,
	0x2f, 0x67, 0x65, 0x6e, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x6f, 0x2f, 0x74, 0x65,
	0x6c, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x2f, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x76, 0x31, 0x3b, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_teleport_notifications_v1_notifications_proto_rawDescOnce sync.Once
	file_teleport_notifications_v1_notifications_proto_rawDescData = file_teleport_notifications_v1_notifications_proto_rawDesc
)

func file_teleport_notifications_v1_notifications_proto_rawDescGZIP() []byte {
	file_teleport_notifications_v1_notifications_proto_rawDescOnce.Do(func() {
		file_teleport_notifications_v1_notifications_proto_rawDescData = protoimpl.X.CompressGZIP(file_teleport_notifications_v1_notifications_proto_rawDescData)
	})
	return file_teleport_notifications_v1_notifications_proto_rawDescData
}

var file_teleport_notifications_v1_notifications_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_teleport_notifications_v1_notifications_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_teleport_notifications_v1_notifications_proto_goTypes = []any{
	(NotificationState)(0),                 // 0: teleport.notifications.v1.NotificationState
	(*Notification)(nil),                   // 1: teleport.notifications.v1.Notification
	(*NotificationSpec)(nil),               // 2: teleport.notifications.v1.NotificationSpec
	(*GlobalNotification)(nil),             // 3: teleport.notifications.v1.GlobalNotification
	(*GlobalNotificationSpec)(nil),         // 4: teleport.notifications.v1.GlobalNotificationSpec
	(*ByPermissions)(nil),                  // 5: teleport.notifications.v1.ByPermissions
	(*ByRoles)(nil),                        // 6: teleport.notifications.v1.ByRoles
	(*UserNotificationState)(nil),          // 7: teleport.notifications.v1.UserNotificationState
	(*UserNotificationStateSpec)(nil),      // 8: teleport.notifications.v1.UserNotificationStateSpec
	(*UserNotificationStateStatus)(nil),    // 9: teleport.notifications.v1.UserNotificationStateStatus
	(*UserLastSeenNotification)(nil),       // 10: teleport.notifications.v1.UserLastSeenNotification
	(*UserLastSeenNotificationSpec)(nil),   // 11: teleport.notifications.v1.UserLastSeenNotificationSpec
	(*UserLastSeenNotificationStatus)(nil), // 12: teleport.notifications.v1.UserLastSeenNotificationStatus
	(*v1.Metadata)(nil),                    // 13: teleport.header.v1.Metadata
	(*timestamppb.Timestamp)(nil),          // 14: google.protobuf.Timestamp
	(*types.RoleConditions)(nil),           // 15: types.RoleConditions
}
var file_teleport_notifications_v1_notifications_proto_depIdxs = []int32{
	13, // 0: teleport.notifications.v1.Notification.metadata:type_name -> teleport.header.v1.Metadata
	2,  // 1: teleport.notifications.v1.Notification.spec:type_name -> teleport.notifications.v1.NotificationSpec
	14, // 2: teleport.notifications.v1.NotificationSpec.created:type_name -> google.protobuf.Timestamp
	13, // 3: teleport.notifications.v1.GlobalNotification.metadata:type_name -> teleport.header.v1.Metadata
	4,  // 4: teleport.notifications.v1.GlobalNotification.spec:type_name -> teleport.notifications.v1.GlobalNotificationSpec
	5,  // 5: teleport.notifications.v1.GlobalNotificationSpec.by_permissions:type_name -> teleport.notifications.v1.ByPermissions
	6,  // 6: teleport.notifications.v1.GlobalNotificationSpec.by_roles:type_name -> teleport.notifications.v1.ByRoles
	1,  // 7: teleport.notifications.v1.GlobalNotificationSpec.notification:type_name -> teleport.notifications.v1.Notification
	15, // 8: teleport.notifications.v1.ByPermissions.role_conditions:type_name -> types.RoleConditions
	13, // 9: teleport.notifications.v1.UserNotificationState.metadata:type_name -> teleport.header.v1.Metadata
	8,  // 10: teleport.notifications.v1.UserNotificationState.spec:type_name -> teleport.notifications.v1.UserNotificationStateSpec
	9,  // 11: teleport.notifications.v1.UserNotificationState.status:type_name -> teleport.notifications.v1.UserNotificationStateStatus
	0,  // 12: teleport.notifications.v1.UserNotificationStateStatus.notification_state:type_name -> teleport.notifications.v1.NotificationState
	13, // 13: teleport.notifications.v1.UserLastSeenNotification.metadata:type_name -> teleport.header.v1.Metadata
	11, // 14: teleport.notifications.v1.UserLastSeenNotification.spec:type_name -> teleport.notifications.v1.UserLastSeenNotificationSpec
	12, // 15: teleport.notifications.v1.UserLastSeenNotification.status:type_name -> teleport.notifications.v1.UserLastSeenNotificationStatus
	14, // 16: teleport.notifications.v1.UserLastSeenNotificationStatus.last_seen_time:type_name -> google.protobuf.Timestamp
	17, // [17:17] is the sub-list for method output_type
	17, // [17:17] is the sub-list for method input_type
	17, // [17:17] is the sub-list for extension type_name
	17, // [17:17] is the sub-list for extension extendee
	0,  // [0:17] is the sub-list for field type_name
}

func init() { file_teleport_notifications_v1_notifications_proto_init() }
func file_teleport_notifications_v1_notifications_proto_init() {
	if File_teleport_notifications_v1_notifications_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_teleport_notifications_v1_notifications_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*Notification); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_teleport_notifications_v1_notifications_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*NotificationSpec); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_teleport_notifications_v1_notifications_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*GlobalNotification); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_teleport_notifications_v1_notifications_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*GlobalNotificationSpec); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_teleport_notifications_v1_notifications_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*ByPermissions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_teleport_notifications_v1_notifications_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*ByRoles); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_teleport_notifications_v1_notifications_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*UserNotificationState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_teleport_notifications_v1_notifications_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*UserNotificationStateSpec); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_teleport_notifications_v1_notifications_proto_msgTypes[8].Exporter = func(v any, i int) any {
			switch v := v.(*UserNotificationStateStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_teleport_notifications_v1_notifications_proto_msgTypes[9].Exporter = func(v any, i int) any {
			switch v := v.(*UserLastSeenNotification); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_teleport_notifications_v1_notifications_proto_msgTypes[10].Exporter = func(v any, i int) any {
			switch v := v.(*UserLastSeenNotificationSpec); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_teleport_notifications_v1_notifications_proto_msgTypes[11].Exporter = func(v any, i int) any {
			switch v := v.(*UserLastSeenNotificationStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_teleport_notifications_v1_notifications_proto_msgTypes[3].OneofWrappers = []any{
		(*GlobalNotificationSpec_ByPermissions)(nil),
		(*GlobalNotificationSpec_ByRoles)(nil),
		(*GlobalNotificationSpec_All)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_teleport_notifications_v1_notifications_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_teleport_notifications_v1_notifications_proto_goTypes,
		DependencyIndexes: file_teleport_notifications_v1_notifications_proto_depIdxs,
		EnumInfos:         file_teleport_notifications_v1_notifications_proto_enumTypes,
		MessageInfos:      file_teleport_notifications_v1_notifications_proto_msgTypes,
	}.Build()
	File_teleport_notifications_v1_notifications_proto = out.File
	file_teleport_notifications_v1_notifications_proto_rawDesc = nil
	file_teleport_notifications_v1_notifications_proto_goTypes = nil
	file_teleport_notifications_v1_notifications_proto_depIdxs = nil
}
