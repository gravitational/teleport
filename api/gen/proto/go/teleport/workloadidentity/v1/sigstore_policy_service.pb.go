// Copyright 2025 Gravitational, Inc
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: teleport/workloadidentity/v1/sigstore_policy_service.proto

package workloadidentityv1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// The request for CreateSigstorePolicy.
type CreateSigstorePolicyRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The Sigstore policy to create.
	SigstorePolicy *SigstorePolicy `protobuf:"bytes,1,opt,name=sigstore_policy,json=sigstorePolicy,proto3" json:"sigstore_policy,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *CreateSigstorePolicyRequest) Reset() {
	*x = CreateSigstorePolicyRequest{}
	mi := &file_teleport_workloadidentity_v1_sigstore_policy_service_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateSigstorePolicyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateSigstorePolicyRequest) ProtoMessage() {}

func (x *CreateSigstorePolicyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_teleport_workloadidentity_v1_sigstore_policy_service_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateSigstorePolicyRequest.ProtoReflect.Descriptor instead.
func (*CreateSigstorePolicyRequest) Descriptor() ([]byte, []int) {
	return file_teleport_workloadidentity_v1_sigstore_policy_service_proto_rawDescGZIP(), []int{0}
}

func (x *CreateSigstorePolicyRequest) GetSigstorePolicy() *SigstorePolicy {
	if x != nil {
		return x.SigstorePolicy
	}
	return nil
}

// The request for UpdateSigstorePolicy.
type UpdateSigstorePolicyRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The Sigstore policy to update.
	SigstorePolicy *SigstorePolicy `protobuf:"bytes,1,opt,name=sigstore_policy,json=sigstorePolicy,proto3" json:"sigstore_policy,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *UpdateSigstorePolicyRequest) Reset() {
	*x = UpdateSigstorePolicyRequest{}
	mi := &file_teleport_workloadidentity_v1_sigstore_policy_service_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateSigstorePolicyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateSigstorePolicyRequest) ProtoMessage() {}

func (x *UpdateSigstorePolicyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_teleport_workloadidentity_v1_sigstore_policy_service_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateSigstorePolicyRequest.ProtoReflect.Descriptor instead.
func (*UpdateSigstorePolicyRequest) Descriptor() ([]byte, []int) {
	return file_teleport_workloadidentity_v1_sigstore_policy_service_proto_rawDescGZIP(), []int{1}
}

func (x *UpdateSigstorePolicyRequest) GetSigstorePolicy() *SigstorePolicy {
	if x != nil {
		return x.SigstorePolicy
	}
	return nil
}

// The request for UpsertSigstorePolicy.
type UpsertSigstorePolicyRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The Sigstore policy to upsert.
	SigstorePolicy *SigstorePolicy `protobuf:"bytes,1,opt,name=sigstore_policy,json=sigstorePolicy,proto3" json:"sigstore_policy,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *UpsertSigstorePolicyRequest) Reset() {
	*x = UpsertSigstorePolicyRequest{}
	mi := &file_teleport_workloadidentity_v1_sigstore_policy_service_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpsertSigstorePolicyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpsertSigstorePolicyRequest) ProtoMessage() {}

func (x *UpsertSigstorePolicyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_teleport_workloadidentity_v1_sigstore_policy_service_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpsertSigstorePolicyRequest.ProtoReflect.Descriptor instead.
func (*UpsertSigstorePolicyRequest) Descriptor() ([]byte, []int) {
	return file_teleport_workloadidentity_v1_sigstore_policy_service_proto_rawDescGZIP(), []int{2}
}

func (x *UpsertSigstorePolicyRequest) GetSigstorePolicy() *SigstorePolicy {
	if x != nil {
		return x.SigstorePolicy
	}
	return nil
}

// The request for GetSigstorePolicy.
type GetSigstorePolicyRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The name of the Sigstore policy to retrieve.
	Name          string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetSigstorePolicyRequest) Reset() {
	*x = GetSigstorePolicyRequest{}
	mi := &file_teleport_workloadidentity_v1_sigstore_policy_service_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetSigstorePolicyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSigstorePolicyRequest) ProtoMessage() {}

func (x *GetSigstorePolicyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_teleport_workloadidentity_v1_sigstore_policy_service_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSigstorePolicyRequest.ProtoReflect.Descriptor instead.
func (*GetSigstorePolicyRequest) Descriptor() ([]byte, []int) {
	return file_teleport_workloadidentity_v1_sigstore_policy_service_proto_rawDescGZIP(), []int{3}
}

func (x *GetSigstorePolicyRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

// The request for DeleteSigstorePolicy.
type DeleteSigstorePolicyRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The name of the Sigstore policy to delete.
	Name          string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteSigstorePolicyRequest) Reset() {
	*x = DeleteSigstorePolicyRequest{}
	mi := &file_teleport_workloadidentity_v1_sigstore_policy_service_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteSigstorePolicyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteSigstorePolicyRequest) ProtoMessage() {}

func (x *DeleteSigstorePolicyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_teleport_workloadidentity_v1_sigstore_policy_service_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteSigstorePolicyRequest.ProtoReflect.Descriptor instead.
func (*DeleteSigstorePolicyRequest) Descriptor() ([]byte, []int) {
	return file_teleport_workloadidentity_v1_sigstore_policy_service_proto_rawDescGZIP(), []int{4}
}

func (x *DeleteSigstorePolicyRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

// The request for ListSigstorePolicies.
type ListSigstorePoliciesRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The maximum number of items to return. The server may impose a different
	// page size at its discretion.
	PageSize int32 `protobuf:"varint,1,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	// The page_token value returned from a previous ListSigstorePolicies request,
	// if any.
	PageToken     string `protobuf:"bytes,2,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListSigstorePoliciesRequest) Reset() {
	*x = ListSigstorePoliciesRequest{}
	mi := &file_teleport_workloadidentity_v1_sigstore_policy_service_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListSigstorePoliciesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListSigstorePoliciesRequest) ProtoMessage() {}

func (x *ListSigstorePoliciesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_teleport_workloadidentity_v1_sigstore_policy_service_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListSigstorePoliciesRequest.ProtoReflect.Descriptor instead.
func (*ListSigstorePoliciesRequest) Descriptor() ([]byte, []int) {
	return file_teleport_workloadidentity_v1_sigstore_policy_service_proto_rawDescGZIP(), []int{5}
}

func (x *ListSigstorePoliciesRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListSigstorePoliciesRequest) GetPageToken() string {
	if x != nil {
		return x.PageToken
	}
	return ""
}

// The response for ListSigstorePolicies.
type ListSigstorePoliciesResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The page of Sigstore policies that matched the request.
	SigstorePolicies []*SigstorePolicy `protobuf:"bytes,1,rep,name=sigstore_policies,json=sigstorePolicies,proto3" json:"sigstore_policies,omitempty"`
	// Token to retrieve the next page of results, or empty if there are no more
	// results in the list.
	NextPageToken string `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListSigstorePoliciesResponse) Reset() {
	*x = ListSigstorePoliciesResponse{}
	mi := &file_teleport_workloadidentity_v1_sigstore_policy_service_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListSigstorePoliciesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListSigstorePoliciesResponse) ProtoMessage() {}

func (x *ListSigstorePoliciesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_teleport_workloadidentity_v1_sigstore_policy_service_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListSigstorePoliciesResponse.ProtoReflect.Descriptor instead.
func (*ListSigstorePoliciesResponse) Descriptor() ([]byte, []int) {
	return file_teleport_workloadidentity_v1_sigstore_policy_service_proto_rawDescGZIP(), []int{6}
}

func (x *ListSigstorePoliciesResponse) GetSigstorePolicies() []*SigstorePolicy {
	if x != nil {
		return x.SigstorePolicies
	}
	return nil
}

func (x *ListSigstorePoliciesResponse) GetNextPageToken() string {
	if x != nil {
		return x.NextPageToken
	}
	return ""
}

var File_teleport_workloadidentity_v1_sigstore_policy_service_proto protoreflect.FileDescriptor

const file_teleport_workloadidentity_v1_sigstore_policy_service_proto_rawDesc = "" +
	"\n" +
	":teleport/workloadidentity/v1/sigstore_policy_service.proto\x12\x1cteleport.workloadidentity.v1\x1a\x1bgoogle/protobuf/empty.proto\x1a;teleport/workloadidentity/v1/sigstore_policy_resource.proto\"t\n" +
	"\x1bCreateSigstorePolicyRequest\x12U\n" +
	"\x0fsigstore_policy\x18\x01 \x01(\v2,.teleport.workloadidentity.v1.SigstorePolicyR\x0esigstorePolicy\"t\n" +
	"\x1bUpdateSigstorePolicyRequest\x12U\n" +
	"\x0fsigstore_policy\x18\x01 \x01(\v2,.teleport.workloadidentity.v1.SigstorePolicyR\x0esigstorePolicy\"t\n" +
	"\x1bUpsertSigstorePolicyRequest\x12U\n" +
	"\x0fsigstore_policy\x18\x01 \x01(\v2,.teleport.workloadidentity.v1.SigstorePolicyR\x0esigstorePolicy\".\n" +
	"\x18GetSigstorePolicyRequest\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\"1\n" +
	"\x1bDeleteSigstorePolicyRequest\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\"Y\n" +
	"\x1bListSigstorePoliciesRequest\x12\x1b\n" +
	"\tpage_size\x18\x01 \x01(\x05R\bpageSize\x12\x1d\n" +
	"\n" +
	"page_token\x18\x02 \x01(\tR\tpageToken\"\xa1\x01\n" +
	"\x1cListSigstorePoliciesResponse\x12Y\n" +
	"\x11sigstore_policies\x18\x01 \x03(\v2,.teleport.workloadidentity.v1.SigstorePolicyR\x10sigstorePolicies\x12&\n" +
	"\x0fnext_page_token\x18\x02 \x01(\tR\rnextPageToken2\x98\x06\n" +
	"\x1dSigstorePolicyResourceService\x12\x7f\n" +
	"\x14CreateSigstorePolicy\x129.teleport.workloadidentity.v1.CreateSigstorePolicyRequest\x1a,.teleport.workloadidentity.v1.SigstorePolicy\x12\x7f\n" +
	"\x14UpsertSigstorePolicy\x129.teleport.workloadidentity.v1.UpsertSigstorePolicyRequest\x1a,.teleport.workloadidentity.v1.SigstorePolicy\x12\x7f\n" +
	"\x14UpdateSigstorePolicy\x129.teleport.workloadidentity.v1.UpdateSigstorePolicyRequest\x1a,.teleport.workloadidentity.v1.SigstorePolicy\x12y\n" +
	"\x11GetSigstorePolicy\x126.teleport.workloadidentity.v1.GetSigstorePolicyRequest\x1a,.teleport.workloadidentity.v1.SigstorePolicy\x12i\n" +
	"\x14DeleteSigstorePolicy\x129.teleport.workloadidentity.v1.DeleteSigstorePolicyRequest\x1a\x16.google.protobuf.Empty\x12\x8d\x01\n" +
	"\x14ListSigstorePolicies\x129.teleport.workloadidentity.v1.ListSigstorePoliciesRequest\x1a:.teleport.workloadidentity.v1.ListSigstorePoliciesResponseBdZbgithub.com/gravitational/teleport/api/gen/proto/go/teleport/workloadidentity/v1;workloadidentityv1b\x06proto3"

var (
	file_teleport_workloadidentity_v1_sigstore_policy_service_proto_rawDescOnce sync.Once
	file_teleport_workloadidentity_v1_sigstore_policy_service_proto_rawDescData []byte
)

func file_teleport_workloadidentity_v1_sigstore_policy_service_proto_rawDescGZIP() []byte {
	file_teleport_workloadidentity_v1_sigstore_policy_service_proto_rawDescOnce.Do(func() {
		file_teleport_workloadidentity_v1_sigstore_policy_service_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_teleport_workloadidentity_v1_sigstore_policy_service_proto_rawDesc), len(file_teleport_workloadidentity_v1_sigstore_policy_service_proto_rawDesc)))
	})
	return file_teleport_workloadidentity_v1_sigstore_policy_service_proto_rawDescData
}

var file_teleport_workloadidentity_v1_sigstore_policy_service_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_teleport_workloadidentity_v1_sigstore_policy_service_proto_goTypes = []any{
	(*CreateSigstorePolicyRequest)(nil),  // 0: teleport.workloadidentity.v1.CreateSigstorePolicyRequest
	(*UpdateSigstorePolicyRequest)(nil),  // 1: teleport.workloadidentity.v1.UpdateSigstorePolicyRequest
	(*UpsertSigstorePolicyRequest)(nil),  // 2: teleport.workloadidentity.v1.UpsertSigstorePolicyRequest
	(*GetSigstorePolicyRequest)(nil),     // 3: teleport.workloadidentity.v1.GetSigstorePolicyRequest
	(*DeleteSigstorePolicyRequest)(nil),  // 4: teleport.workloadidentity.v1.DeleteSigstorePolicyRequest
	(*ListSigstorePoliciesRequest)(nil),  // 5: teleport.workloadidentity.v1.ListSigstorePoliciesRequest
	(*ListSigstorePoliciesResponse)(nil), // 6: teleport.workloadidentity.v1.ListSigstorePoliciesResponse
	(*SigstorePolicy)(nil),               // 7: teleport.workloadidentity.v1.SigstorePolicy
	(*emptypb.Empty)(nil),                // 8: google.protobuf.Empty
}
var file_teleport_workloadidentity_v1_sigstore_policy_service_proto_depIdxs = []int32{
	7,  // 0: teleport.workloadidentity.v1.CreateSigstorePolicyRequest.sigstore_policy:type_name -> teleport.workloadidentity.v1.SigstorePolicy
	7,  // 1: teleport.workloadidentity.v1.UpdateSigstorePolicyRequest.sigstore_policy:type_name -> teleport.workloadidentity.v1.SigstorePolicy
	7,  // 2: teleport.workloadidentity.v1.UpsertSigstorePolicyRequest.sigstore_policy:type_name -> teleport.workloadidentity.v1.SigstorePolicy
	7,  // 3: teleport.workloadidentity.v1.ListSigstorePoliciesResponse.sigstore_policies:type_name -> teleport.workloadidentity.v1.SigstorePolicy
	0,  // 4: teleport.workloadidentity.v1.SigstorePolicyResourceService.CreateSigstorePolicy:input_type -> teleport.workloadidentity.v1.CreateSigstorePolicyRequest
	2,  // 5: teleport.workloadidentity.v1.SigstorePolicyResourceService.UpsertSigstorePolicy:input_type -> teleport.workloadidentity.v1.UpsertSigstorePolicyRequest
	1,  // 6: teleport.workloadidentity.v1.SigstorePolicyResourceService.UpdateSigstorePolicy:input_type -> teleport.workloadidentity.v1.UpdateSigstorePolicyRequest
	3,  // 7: teleport.workloadidentity.v1.SigstorePolicyResourceService.GetSigstorePolicy:input_type -> teleport.workloadidentity.v1.GetSigstorePolicyRequest
	4,  // 8: teleport.workloadidentity.v1.SigstorePolicyResourceService.DeleteSigstorePolicy:input_type -> teleport.workloadidentity.v1.DeleteSigstorePolicyRequest
	5,  // 9: teleport.workloadidentity.v1.SigstorePolicyResourceService.ListSigstorePolicies:input_type -> teleport.workloadidentity.v1.ListSigstorePoliciesRequest
	7,  // 10: teleport.workloadidentity.v1.SigstorePolicyResourceService.CreateSigstorePolicy:output_type -> teleport.workloadidentity.v1.SigstorePolicy
	7,  // 11: teleport.workloadidentity.v1.SigstorePolicyResourceService.UpsertSigstorePolicy:output_type -> teleport.workloadidentity.v1.SigstorePolicy
	7,  // 12: teleport.workloadidentity.v1.SigstorePolicyResourceService.UpdateSigstorePolicy:output_type -> teleport.workloadidentity.v1.SigstorePolicy
	7,  // 13: teleport.workloadidentity.v1.SigstorePolicyResourceService.GetSigstorePolicy:output_type -> teleport.workloadidentity.v1.SigstorePolicy
	8,  // 14: teleport.workloadidentity.v1.SigstorePolicyResourceService.DeleteSigstorePolicy:output_type -> google.protobuf.Empty
	6,  // 15: teleport.workloadidentity.v1.SigstorePolicyResourceService.ListSigstorePolicies:output_type -> teleport.workloadidentity.v1.ListSigstorePoliciesResponse
	10, // [10:16] is the sub-list for method output_type
	4,  // [4:10] is the sub-list for method input_type
	4,  // [4:4] is the sub-list for extension type_name
	4,  // [4:4] is the sub-list for extension extendee
	0,  // [0:4] is the sub-list for field type_name
}

func init() { file_teleport_workloadidentity_v1_sigstore_policy_service_proto_init() }
func file_teleport_workloadidentity_v1_sigstore_policy_service_proto_init() {
	if File_teleport_workloadidentity_v1_sigstore_policy_service_proto != nil {
		return
	}
	file_teleport_workloadidentity_v1_sigstore_policy_resource_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_teleport_workloadidentity_v1_sigstore_policy_service_proto_rawDesc), len(file_teleport_workloadidentity_v1_sigstore_policy_service_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_teleport_workloadidentity_v1_sigstore_policy_service_proto_goTypes,
		DependencyIndexes: file_teleport_workloadidentity_v1_sigstore_policy_service_proto_depIdxs,
		MessageInfos:      file_teleport_workloadidentity_v1_sigstore_policy_service_proto_msgTypes,
	}.Build()
	File_teleport_workloadidentity_v1_sigstore_policy_service_proto = out.File
	file_teleport_workloadidentity_v1_sigstore_policy_service_proto_goTypes = nil
	file_teleport_workloadidentity_v1_sigstore_policy_service_proto_depIdxs = nil
}
