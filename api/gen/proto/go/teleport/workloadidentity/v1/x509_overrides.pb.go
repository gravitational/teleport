// Copyright 2025 Gravitational, Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: teleport/workloadidentity/v1/x509_overrides.proto

package workloadidentityv1

import (
	v1 "github.com/gravitational/teleport/api/gen/proto/go/teleport/header/v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// A configuration resource to override the issuers of SPIFFE X509-SVID
// credentials. This message serves as both the type used in the v1 service and
// as the canonical v1 storage format (in protojson).
type X509IssuerOverride struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Fixed string, "workload_identity_x509_issuer_override".
	Kind string `protobuf:"bytes,1,opt,name=kind,proto3" json:"kind,omitempty"`
	// Fixed string, "".
	SubKind string `protobuf:"bytes,2,opt,name=sub_kind,json=subKind,proto3" json:"sub_kind,omitempty"`
	// Fixed string, "v1".
	Version       string                  `protobuf:"bytes,3,opt,name=version,proto3" json:"version,omitempty"`
	Metadata      *v1.Metadata            `protobuf:"bytes,4,opt,name=metadata,proto3" json:"metadata,omitempty"`
	Spec          *X509IssuerOverrideSpec `protobuf:"bytes,5,opt,name=spec,proto3" json:"spec,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *X509IssuerOverride) Reset() {
	*x = X509IssuerOverride{}
	mi := &file_teleport_workloadidentity_v1_x509_overrides_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *X509IssuerOverride) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*X509IssuerOverride) ProtoMessage() {}

func (x *X509IssuerOverride) ProtoReflect() protoreflect.Message {
	mi := &file_teleport_workloadidentity_v1_x509_overrides_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use X509IssuerOverride.ProtoReflect.Descriptor instead.
func (*X509IssuerOverride) Descriptor() ([]byte, []int) {
	return file_teleport_workloadidentity_v1_x509_overrides_proto_rawDescGZIP(), []int{0}
}

func (x *X509IssuerOverride) GetKind() string {
	if x != nil {
		return x.Kind
	}
	return ""
}

func (x *X509IssuerOverride) GetSubKind() string {
	if x != nil {
		return x.SubKind
	}
	return ""
}

func (x *X509IssuerOverride) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *X509IssuerOverride) GetMetadata() *v1.Metadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *X509IssuerOverride) GetSpec() *X509IssuerOverrideSpec {
	if x != nil {
		return x.Spec
	}
	return nil
}

// The spec for X509IssuerOverride.
type X509IssuerOverrideSpec struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// A list of issuer overrides. The public key of each issuer must be unique
	// across all overrides' issuers, and should match one of the keys in the
	// cluster's SPIFFE certificate authority.
	Overrides     []*X509IssuerOverrideSpec_Override `protobuf:"bytes,1,rep,name=overrides,proto3" json:"overrides,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *X509IssuerOverrideSpec) Reset() {
	*x = X509IssuerOverrideSpec{}
	mi := &file_teleport_workloadidentity_v1_x509_overrides_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *X509IssuerOverrideSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*X509IssuerOverrideSpec) ProtoMessage() {}

func (x *X509IssuerOverrideSpec) ProtoReflect() protoreflect.Message {
	mi := &file_teleport_workloadidentity_v1_x509_overrides_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use X509IssuerOverrideSpec.ProtoReflect.Descriptor instead.
func (*X509IssuerOverrideSpec) Descriptor() ([]byte, []int) {
	return file_teleport_workloadidentity_v1_x509_overrides_proto_rawDescGZIP(), []int{1}
}

func (x *X509IssuerOverrideSpec) GetOverrides() []*X509IssuerOverrideSpec_Override {
	if x != nil {
		return x.Overrides
	}
	return nil
}

// The override for a single issuer (i.e. a single X.509 certificate in a
// SPIFFE cert_authority).
type X509IssuerOverrideSpec_Override struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ASN.1 DER certificate, not included by default in the chain.
	Issuer []byte `protobuf:"bytes,1,opt,name=issuer,proto3" json:"issuer,omitempty"`
	// ASN.1 DER certificate ordered from leaf to root as it should be presented
	// by a client or server in a TLS connection. Must not include self-signed
	// roots of trust.
	Chain         [][]byte `protobuf:"bytes,2,rep,name=chain,proto3" json:"chain,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *X509IssuerOverrideSpec_Override) Reset() {
	*x = X509IssuerOverrideSpec_Override{}
	mi := &file_teleport_workloadidentity_v1_x509_overrides_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *X509IssuerOverrideSpec_Override) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*X509IssuerOverrideSpec_Override) ProtoMessage() {}

func (x *X509IssuerOverrideSpec_Override) ProtoReflect() protoreflect.Message {
	mi := &file_teleport_workloadidentity_v1_x509_overrides_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use X509IssuerOverrideSpec_Override.ProtoReflect.Descriptor instead.
func (*X509IssuerOverrideSpec_Override) Descriptor() ([]byte, []int) {
	return file_teleport_workloadidentity_v1_x509_overrides_proto_rawDescGZIP(), []int{1, 0}
}

func (x *X509IssuerOverrideSpec_Override) GetIssuer() []byte {
	if x != nil {
		return x.Issuer
	}
	return nil
}

func (x *X509IssuerOverrideSpec_Override) GetChain() [][]byte {
	if x != nil {
		return x.Chain
	}
	return nil
}

var File_teleport_workloadidentity_v1_x509_overrides_proto protoreflect.FileDescriptor

const file_teleport_workloadidentity_v1_x509_overrides_proto_rawDesc = "" +
	"\n" +
	"1teleport/workloadidentity/v1/x509_overrides.proto\x12\x1cteleport.workloadidentity.v1\x1a!teleport/header/v1/metadata.proto\"\xe1\x01\n" +
	"\x12X509IssuerOverride\x12\x12\n" +
	"\x04kind\x18\x01 \x01(\tR\x04kind\x12\x19\n" +
	"\bsub_kind\x18\x02 \x01(\tR\asubKind\x12\x18\n" +
	"\aversion\x18\x03 \x01(\tR\aversion\x128\n" +
	"\bmetadata\x18\x04 \x01(\v2\x1c.teleport.header.v1.MetadataR\bmetadata\x12H\n" +
	"\x04spec\x18\x05 \x01(\v24.teleport.workloadidentity.v1.X509IssuerOverrideSpecR\x04spec\"\xaf\x01\n" +
	"\x16X509IssuerOverrideSpec\x12[\n" +
	"\toverrides\x18\x01 \x03(\v2=.teleport.workloadidentity.v1.X509IssuerOverrideSpec.OverrideR\toverrides\x1a8\n" +
	"\bOverride\x12\x16\n" +
	"\x06issuer\x18\x01 \x01(\fR\x06issuer\x12\x14\n" +
	"\x05chain\x18\x02 \x03(\fR\x05chainBdZbgithub.com/gravitational/teleport/api/gen/proto/go/teleport/workloadidentity/v1;workloadidentityv1b\x06proto3"

var (
	file_teleport_workloadidentity_v1_x509_overrides_proto_rawDescOnce sync.Once
	file_teleport_workloadidentity_v1_x509_overrides_proto_rawDescData []byte
)

func file_teleport_workloadidentity_v1_x509_overrides_proto_rawDescGZIP() []byte {
	file_teleport_workloadidentity_v1_x509_overrides_proto_rawDescOnce.Do(func() {
		file_teleport_workloadidentity_v1_x509_overrides_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_teleport_workloadidentity_v1_x509_overrides_proto_rawDesc), len(file_teleport_workloadidentity_v1_x509_overrides_proto_rawDesc)))
	})
	return file_teleport_workloadidentity_v1_x509_overrides_proto_rawDescData
}

var file_teleport_workloadidentity_v1_x509_overrides_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_teleport_workloadidentity_v1_x509_overrides_proto_goTypes = []any{
	(*X509IssuerOverride)(nil),              // 0: teleport.workloadidentity.v1.X509IssuerOverride
	(*X509IssuerOverrideSpec)(nil),          // 1: teleport.workloadidentity.v1.X509IssuerOverrideSpec
	(*X509IssuerOverrideSpec_Override)(nil), // 2: teleport.workloadidentity.v1.X509IssuerOverrideSpec.Override
	(*v1.Metadata)(nil),                     // 3: teleport.header.v1.Metadata
}
var file_teleport_workloadidentity_v1_x509_overrides_proto_depIdxs = []int32{
	3, // 0: teleport.workloadidentity.v1.X509IssuerOverride.metadata:type_name -> teleport.header.v1.Metadata
	1, // 1: teleport.workloadidentity.v1.X509IssuerOverride.spec:type_name -> teleport.workloadidentity.v1.X509IssuerOverrideSpec
	2, // 2: teleport.workloadidentity.v1.X509IssuerOverrideSpec.overrides:type_name -> teleport.workloadidentity.v1.X509IssuerOverrideSpec.Override
	3, // [3:3] is the sub-list for method output_type
	3, // [3:3] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_teleport_workloadidentity_v1_x509_overrides_proto_init() }
func file_teleport_workloadidentity_v1_x509_overrides_proto_init() {
	if File_teleport_workloadidentity_v1_x509_overrides_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_teleport_workloadidentity_v1_x509_overrides_proto_rawDesc), len(file_teleport_workloadidentity_v1_x509_overrides_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_teleport_workloadidentity_v1_x509_overrides_proto_goTypes,
		DependencyIndexes: file_teleport_workloadidentity_v1_x509_overrides_proto_depIdxs,
		MessageInfos:      file_teleport_workloadidentity_v1_x509_overrides_proto_msgTypes,
	}.Build()
	File_teleport_workloadidentity_v1_x509_overrides_proto = out.File
	file_teleport_workloadidentity_v1_x509_overrides_proto_goTypes = nil
	file_teleport_workloadidentity_v1_x509_overrides_proto_depIdxs = nil
}
