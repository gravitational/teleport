// Copyright 2025 Gravitational, Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: teleport/recordingmetadata/v1/recordingmetadata_service.proto

package recordingmetadatav1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// GetMetadataResponseChunk is a chunked response for retrieving a session's metadata.
// It can contain either metadata or a frame from the session recording.
type GetMetadataResponseChunk struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Chunk:
	//
	//	*GetMetadataResponseChunk_Metadata
	//	*GetMetadataResponseChunk_Frame
	Chunk         isGetMetadataResponseChunk_Chunk `protobuf_oneof:"chunk"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetMetadataResponseChunk) Reset() {
	*x = GetMetadataResponseChunk{}
	mi := &file_teleport_recordingmetadata_v1_recordingmetadata_service_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetMetadataResponseChunk) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMetadataResponseChunk) ProtoMessage() {}

func (x *GetMetadataResponseChunk) ProtoReflect() protoreflect.Message {
	mi := &file_teleport_recordingmetadata_v1_recordingmetadata_service_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMetadataResponseChunk.ProtoReflect.Descriptor instead.
func (*GetMetadataResponseChunk) Descriptor() ([]byte, []int) {
	return file_teleport_recordingmetadata_v1_recordingmetadata_service_proto_rawDescGZIP(), []int{0}
}

func (x *GetMetadataResponseChunk) GetChunk() isGetMetadataResponseChunk_Chunk {
	if x != nil {
		return x.Chunk
	}
	return nil
}

func (x *GetMetadataResponseChunk) GetMetadata() *SessionRecordingMetadata {
	if x != nil {
		if x, ok := x.Chunk.(*GetMetadataResponseChunk_Metadata); ok {
			return x.Metadata
		}
	}
	return nil
}

func (x *GetMetadataResponseChunk) GetFrame() *SessionRecordingThumbnail {
	if x != nil {
		if x, ok := x.Chunk.(*GetMetadataResponseChunk_Frame); ok {
			return x.Frame
		}
	}
	return nil
}

type isGetMetadataResponseChunk_Chunk interface {
	isGetMetadataResponseChunk_Chunk()
}

type GetMetadataResponseChunk_Metadata struct {
	// Metadata contains the metadata of the session recording.
	Metadata *SessionRecordingMetadata `protobuf:"bytes,1,opt,name=metadata,proto3,oneof"`
}

type GetMetadataResponseChunk_Frame struct {
	// Frame contains a frame from the session recording.
	Frame *SessionRecordingThumbnail `protobuf:"bytes,2,opt,name=frame,proto3,oneof"`
}

func (*GetMetadataResponseChunk_Metadata) isGetMetadataResponseChunk_Chunk() {}

func (*GetMetadataResponseChunk_Frame) isGetMetadataResponseChunk_Chunk() {}

// GetThumbnailRequest is a request for a session's thumbnail.
type GetThumbnailRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// SessionId is the ID of the session whose thumbnail is being requested.
	SessionId     string `protobuf:"bytes,1,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetThumbnailRequest) Reset() {
	*x = GetThumbnailRequest{}
	mi := &file_teleport_recordingmetadata_v1_recordingmetadata_service_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetThumbnailRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetThumbnailRequest) ProtoMessage() {}

func (x *GetThumbnailRequest) ProtoReflect() protoreflect.Message {
	mi := &file_teleport_recordingmetadata_v1_recordingmetadata_service_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetThumbnailRequest.ProtoReflect.Descriptor instead.
func (*GetThumbnailRequest) Descriptor() ([]byte, []int) {
	return file_teleport_recordingmetadata_v1_recordingmetadata_service_proto_rawDescGZIP(), []int{1}
}

func (x *GetThumbnailRequest) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

// GetThumbnailResponse is a response for retrieving a session's thumbnail.
type GetThumbnailResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Thumbnail is the thumbnail for the session.
	Thumbnail     *SessionRecordingThumbnail `protobuf:"bytes,1,opt,name=thumbnail,proto3" json:"thumbnail,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetThumbnailResponse) Reset() {
	*x = GetThumbnailResponse{}
	mi := &file_teleport_recordingmetadata_v1_recordingmetadata_service_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetThumbnailResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetThumbnailResponse) ProtoMessage() {}

func (x *GetThumbnailResponse) ProtoReflect() protoreflect.Message {
	mi := &file_teleport_recordingmetadata_v1_recordingmetadata_service_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetThumbnailResponse.ProtoReflect.Descriptor instead.
func (*GetThumbnailResponse) Descriptor() ([]byte, []int) {
	return file_teleport_recordingmetadata_v1_recordingmetadata_service_proto_rawDescGZIP(), []int{2}
}

func (x *GetThumbnailResponse) GetThumbnail() *SessionRecordingThumbnail {
	if x != nil {
		return x.Thumbnail
	}
	return nil
}

// GetMetadataRequest is a request for retrieving a session's metadata.
type GetMetadataRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// SessionId is the ID of the session whose metadata is being requested.
	SessionId     string `protobuf:"bytes,1,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetMetadataRequest) Reset() {
	*x = GetMetadataRequest{}
	mi := &file_teleport_recordingmetadata_v1_recordingmetadata_service_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetMetadataRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMetadataRequest) ProtoMessage() {}

func (x *GetMetadataRequest) ProtoReflect() protoreflect.Message {
	mi := &file_teleport_recordingmetadata_v1_recordingmetadata_service_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMetadataRequest.ProtoReflect.Descriptor instead.
func (*GetMetadataRequest) Descriptor() ([]byte, []int) {
	return file_teleport_recordingmetadata_v1_recordingmetadata_service_proto_rawDescGZIP(), []int{3}
}

func (x *GetMetadataRequest) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

var File_teleport_recordingmetadata_v1_recordingmetadata_service_proto protoreflect.FileDescriptor

const file_teleport_recordingmetadata_v1_recordingmetadata_service_proto_rawDesc = "" +
	"\n" +
	"=teleport/recordingmetadata/v1/recordingmetadata_service.proto\x12\x1dteleport.recordingmetadata.v1\x1a5teleport/recordingmetadata/v1/recordingmetadata.proto\"\xcc\x01\n" +
	"\x18GetMetadataResponseChunk\x12U\n" +
	"\bmetadata\x18\x01 \x01(\v27.teleport.recordingmetadata.v1.SessionRecordingMetadataH\x00R\bmetadata\x12P\n" +
	"\x05frame\x18\x02 \x01(\v28.teleport.recordingmetadata.v1.SessionRecordingThumbnailH\x00R\x05frameB\a\n" +
	"\x05chunk\"4\n" +
	"\x13GetThumbnailRequest\x12\x1d\n" +
	"\n" +
	"session_id\x18\x01 \x01(\tR\tsessionId\"n\n" +
	"\x14GetThumbnailResponse\x12V\n" +
	"\tthumbnail\x18\x01 \x01(\v28.teleport.recordingmetadata.v1.SessionRecordingThumbnailR\tthumbnail\"3\n" +
	"\x12GetMetadataRequest\x12\x1d\n" +
	"\n" +
	"session_id\x18\x01 \x01(\tR\tsessionId2\x90\x02\n" +
	"\x18RecordingMetadataService\x12w\n" +
	"\fGetThumbnail\x122.teleport.recordingmetadata.v1.GetThumbnailRequest\x1a3.teleport.recordingmetadata.v1.GetThumbnailResponse\x12{\n" +
	"\vGetMetadata\x121.teleport.recordingmetadata.v1.GetMetadataRequest\x1a7.teleport.recordingmetadata.v1.GetMetadataResponseChunk0\x01BfZdgithub.com/gravitational/teleport/api/gen/proto/go/teleport/recordingmetadata/v1;recordingmetadatav1b\x06proto3"

var (
	file_teleport_recordingmetadata_v1_recordingmetadata_service_proto_rawDescOnce sync.Once
	file_teleport_recordingmetadata_v1_recordingmetadata_service_proto_rawDescData []byte
)

func file_teleport_recordingmetadata_v1_recordingmetadata_service_proto_rawDescGZIP() []byte {
	file_teleport_recordingmetadata_v1_recordingmetadata_service_proto_rawDescOnce.Do(func() {
		file_teleport_recordingmetadata_v1_recordingmetadata_service_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_teleport_recordingmetadata_v1_recordingmetadata_service_proto_rawDesc), len(file_teleport_recordingmetadata_v1_recordingmetadata_service_proto_rawDesc)))
	})
	return file_teleport_recordingmetadata_v1_recordingmetadata_service_proto_rawDescData
}

var file_teleport_recordingmetadata_v1_recordingmetadata_service_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_teleport_recordingmetadata_v1_recordingmetadata_service_proto_goTypes = []any{
	(*GetMetadataResponseChunk)(nil),  // 0: teleport.recordingmetadata.v1.GetMetadataResponseChunk
	(*GetThumbnailRequest)(nil),       // 1: teleport.recordingmetadata.v1.GetThumbnailRequest
	(*GetThumbnailResponse)(nil),      // 2: teleport.recordingmetadata.v1.GetThumbnailResponse
	(*GetMetadataRequest)(nil),        // 3: teleport.recordingmetadata.v1.GetMetadataRequest
	(*SessionRecordingMetadata)(nil),  // 4: teleport.recordingmetadata.v1.SessionRecordingMetadata
	(*SessionRecordingThumbnail)(nil), // 5: teleport.recordingmetadata.v1.SessionRecordingThumbnail
}
var file_teleport_recordingmetadata_v1_recordingmetadata_service_proto_depIdxs = []int32{
	4, // 0: teleport.recordingmetadata.v1.GetMetadataResponseChunk.metadata:type_name -> teleport.recordingmetadata.v1.SessionRecordingMetadata
	5, // 1: teleport.recordingmetadata.v1.GetMetadataResponseChunk.frame:type_name -> teleport.recordingmetadata.v1.SessionRecordingThumbnail
	5, // 2: teleport.recordingmetadata.v1.GetThumbnailResponse.thumbnail:type_name -> teleport.recordingmetadata.v1.SessionRecordingThumbnail
	1, // 3: teleport.recordingmetadata.v1.RecordingMetadataService.GetThumbnail:input_type -> teleport.recordingmetadata.v1.GetThumbnailRequest
	3, // 4: teleport.recordingmetadata.v1.RecordingMetadataService.GetMetadata:input_type -> teleport.recordingmetadata.v1.GetMetadataRequest
	2, // 5: teleport.recordingmetadata.v1.RecordingMetadataService.GetThumbnail:output_type -> teleport.recordingmetadata.v1.GetThumbnailResponse
	0, // 6: teleport.recordingmetadata.v1.RecordingMetadataService.GetMetadata:output_type -> teleport.recordingmetadata.v1.GetMetadataResponseChunk
	5, // [5:7] is the sub-list for method output_type
	3, // [3:5] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_teleport_recordingmetadata_v1_recordingmetadata_service_proto_init() }
func file_teleport_recordingmetadata_v1_recordingmetadata_service_proto_init() {
	if File_teleport_recordingmetadata_v1_recordingmetadata_service_proto != nil {
		return
	}
	file_teleport_recordingmetadata_v1_recordingmetadata_proto_init()
	file_teleport_recordingmetadata_v1_recordingmetadata_service_proto_msgTypes[0].OneofWrappers = []any{
		(*GetMetadataResponseChunk_Metadata)(nil),
		(*GetMetadataResponseChunk_Frame)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_teleport_recordingmetadata_v1_recordingmetadata_service_proto_rawDesc), len(file_teleport_recordingmetadata_v1_recordingmetadata_service_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_teleport_recordingmetadata_v1_recordingmetadata_service_proto_goTypes,
		DependencyIndexes: file_teleport_recordingmetadata_v1_recordingmetadata_service_proto_depIdxs,
		MessageInfos:      file_teleport_recordingmetadata_v1_recordingmetadata_service_proto_msgTypes,
	}.Build()
	File_teleport_recordingmetadata_v1_recordingmetadata_service_proto = out.File
	file_teleport_recordingmetadata_v1_recordingmetadata_service_proto_goTypes = nil
	file_teleport_recordingmetadata_v1_recordingmetadata_service_proto_depIdxs = nil
}
