// Copyright 2025 Gravitational, Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
// SessionRecordingEvent is an event that occurred during a session recording.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: teleport/recordingmetadata/v1/recordingmetadata.proto

package recordingmetadatav1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	durationpb "google.golang.org/protobuf/types/known/durationpb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// SessionRecordingEvent represents an event that occurred during a session recording.
type SessionRecordingEvent struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// StartOffset is the start time of the event, relative to the start of the session.
	StartOffset *durationpb.Duration `protobuf:"bytes,1,opt,name=start_offset,json=startOffset,proto3" json:"start_offset,omitempty"`
	// EndOffset is the end time of the event, relative to the start of the session.
	EndOffset *durationpb.Duration `protobuf:"bytes,2,opt,name=end_offset,json=endOffset,proto3" json:"end_offset,omitempty"`
	// Types that are valid to be assigned to Event:
	//
	//	*SessionRecordingEvent_Inactivity
	//	*SessionRecordingEvent_Join
	//	*SessionRecordingEvent_Resize
	Event         isSessionRecordingEvent_Event `protobuf_oneof:"event"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SessionRecordingEvent) Reset() {
	*x = SessionRecordingEvent{}
	mi := &file_teleport_recordingmetadata_v1_recordingmetadata_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SessionRecordingEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SessionRecordingEvent) ProtoMessage() {}

func (x *SessionRecordingEvent) ProtoReflect() protoreflect.Message {
	mi := &file_teleport_recordingmetadata_v1_recordingmetadata_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SessionRecordingEvent.ProtoReflect.Descriptor instead.
func (*SessionRecordingEvent) Descriptor() ([]byte, []int) {
	return file_teleport_recordingmetadata_v1_recordingmetadata_proto_rawDescGZIP(), []int{0}
}

func (x *SessionRecordingEvent) GetStartOffset() *durationpb.Duration {
	if x != nil {
		return x.StartOffset
	}
	return nil
}

func (x *SessionRecordingEvent) GetEndOffset() *durationpb.Duration {
	if x != nil {
		return x.EndOffset
	}
	return nil
}

func (x *SessionRecordingEvent) GetEvent() isSessionRecordingEvent_Event {
	if x != nil {
		return x.Event
	}
	return nil
}

func (x *SessionRecordingEvent) GetInactivity() *SessionRecordingInactivityEvent {
	if x != nil {
		if x, ok := x.Event.(*SessionRecordingEvent_Inactivity); ok {
			return x.Inactivity
		}
	}
	return nil
}

func (x *SessionRecordingEvent) GetJoin() *SessionRecordingJoinEvent {
	if x != nil {
		if x, ok := x.Event.(*SessionRecordingEvent_Join); ok {
			return x.Join
		}
	}
	return nil
}

func (x *SessionRecordingEvent) GetResize() *SessionRecordingResizeEvent {
	if x != nil {
		if x, ok := x.Event.(*SessionRecordingEvent_Resize); ok {
			return x.Resize
		}
	}
	return nil
}

type isSessionRecordingEvent_Event interface {
	isSessionRecordingEvent_Event()
}

type SessionRecordingEvent_Inactivity struct {
	// Inactivity is an event that indicates inactivity during the session.
	Inactivity *SessionRecordingInactivityEvent `protobuf:"bytes,3,opt,name=inactivity,proto3,oneof"`
}

type SessionRecordingEvent_Join struct {
	// Join is an event that indicates a user joined the session.
	Join *SessionRecordingJoinEvent `protobuf:"bytes,4,opt,name=join,proto3,oneof"`
}

type SessionRecordingEvent_Resize struct {
	// Resize is an event that indicates the terminal was resized.
	Resize *SessionRecordingResizeEvent `protobuf:"bytes,5,opt,name=resize,proto3,oneof"`
}

func (*SessionRecordingEvent_Inactivity) isSessionRecordingEvent_Event() {}

func (*SessionRecordingEvent_Join) isSessionRecordingEvent_Event() {}

func (*SessionRecordingEvent_Resize) isSessionRecordingEvent_Event() {}

// SessionRecordingInactivityEvent is an event that indicates inactivity during the session.
type SessionRecordingInactivityEvent struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SessionRecordingInactivityEvent) Reset() {
	*x = SessionRecordingInactivityEvent{}
	mi := &file_teleport_recordingmetadata_v1_recordingmetadata_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SessionRecordingInactivityEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SessionRecordingInactivityEvent) ProtoMessage() {}

func (x *SessionRecordingInactivityEvent) ProtoReflect() protoreflect.Message {
	mi := &file_teleport_recordingmetadata_v1_recordingmetadata_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SessionRecordingInactivityEvent.ProtoReflect.Descriptor instead.
func (*SessionRecordingInactivityEvent) Descriptor() ([]byte, []int) {
	return file_teleport_recordingmetadata_v1_recordingmetadata_proto_rawDescGZIP(), []int{1}
}

// SessionRecordingJoinEvent is an event that indicates a user joined the session.
type SessionRecordingJoinEvent struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// User is the name of the user who joined the session.
	User          string `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SessionRecordingJoinEvent) Reset() {
	*x = SessionRecordingJoinEvent{}
	mi := &file_teleport_recordingmetadata_v1_recordingmetadata_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SessionRecordingJoinEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SessionRecordingJoinEvent) ProtoMessage() {}

func (x *SessionRecordingJoinEvent) ProtoReflect() protoreflect.Message {
	mi := &file_teleport_recordingmetadata_v1_recordingmetadata_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SessionRecordingJoinEvent.ProtoReflect.Descriptor instead.
func (*SessionRecordingJoinEvent) Descriptor() ([]byte, []int) {
	return file_teleport_recordingmetadata_v1_recordingmetadata_proto_rawDescGZIP(), []int{2}
}

func (x *SessionRecordingJoinEvent) GetUser() string {
	if x != nil {
		return x.User
	}
	return ""
}

// SessionRecordingResizeEvent is an event that indicates the terminal was resized.
type SessionRecordingResizeEvent struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Cols is the number of columns in the terminal.
	Cols int32 `protobuf:"varint,1,opt,name=cols,proto3" json:"cols,omitempty"`
	// Rows is the number of rows in the terminal.
	Rows          int32 `protobuf:"varint,2,opt,name=rows,proto3" json:"rows,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SessionRecordingResizeEvent) Reset() {
	*x = SessionRecordingResizeEvent{}
	mi := &file_teleport_recordingmetadata_v1_recordingmetadata_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SessionRecordingResizeEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SessionRecordingResizeEvent) ProtoMessage() {}

func (x *SessionRecordingResizeEvent) ProtoReflect() protoreflect.Message {
	mi := &file_teleport_recordingmetadata_v1_recordingmetadata_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SessionRecordingResizeEvent.ProtoReflect.Descriptor instead.
func (*SessionRecordingResizeEvent) Descriptor() ([]byte, []int) {
	return file_teleport_recordingmetadata_v1_recordingmetadata_proto_rawDescGZIP(), []int{3}
}

func (x *SessionRecordingResizeEvent) GetCols() int32 {
	if x != nil {
		return x.Cols
	}
	return 0
}

func (x *SessionRecordingResizeEvent) GetRows() int32 {
	if x != nil {
		return x.Rows
	}
	return 0
}

// SessionRecordingMetadata contains metadata for a session recording.
type SessionRecordingMetadata struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Duration is the duration of the session recording.
	Duration *durationpb.Duration `protobuf:"bytes,1,opt,name=duration,proto3" json:"duration,omitempty"`
	// Events is the events that occurred during the session.
	Events []*SessionRecordingEvent `protobuf:"bytes,2,rep,name=events,proto3" json:"events,omitempty"`
	// StartCols is the number of columns in the terminal at the start of the session.
	StartCols int32 `protobuf:"varint,3,opt,name=start_cols,json=startCols,proto3" json:"start_cols,omitempty"`
	// StartRows is the number of rows in the terminal at the start of the session.
	StartRows int32 `protobuf:"varint,4,opt,name=start_rows,json=startRows,proto3" json:"start_rows,omitempty"`
	// StartTime is the start time of the session recording.
	StartTime *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	// EndTime is the end time of the session recording.
	EndTime *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`
	// ClusterName is the name of the cluster where the session recording took place.
	ClusterName   string `protobuf:"bytes,7,opt,name=cluster_name,json=clusterName,proto3" json:"cluster_name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SessionRecordingMetadata) Reset() {
	*x = SessionRecordingMetadata{}
	mi := &file_teleport_recordingmetadata_v1_recordingmetadata_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SessionRecordingMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SessionRecordingMetadata) ProtoMessage() {}

func (x *SessionRecordingMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_teleport_recordingmetadata_v1_recordingmetadata_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SessionRecordingMetadata.ProtoReflect.Descriptor instead.
func (*SessionRecordingMetadata) Descriptor() ([]byte, []int) {
	return file_teleport_recordingmetadata_v1_recordingmetadata_proto_rawDescGZIP(), []int{4}
}

func (x *SessionRecordingMetadata) GetDuration() *durationpb.Duration {
	if x != nil {
		return x.Duration
	}
	return nil
}

func (x *SessionRecordingMetadata) GetEvents() []*SessionRecordingEvent {
	if x != nil {
		return x.Events
	}
	return nil
}

func (x *SessionRecordingMetadata) GetStartCols() int32 {
	if x != nil {
		return x.StartCols
	}
	return 0
}

func (x *SessionRecordingMetadata) GetStartRows() int32 {
	if x != nil {
		return x.StartRows
	}
	return 0
}

func (x *SessionRecordingMetadata) GetStartTime() *timestamppb.Timestamp {
	if x != nil {
		return x.StartTime
	}
	return nil
}

func (x *SessionRecordingMetadata) GetEndTime() *timestamppb.Timestamp {
	if x != nil {
		return x.EndTime
	}
	return nil
}

func (x *SessionRecordingMetadata) GetClusterName() string {
	if x != nil {
		return x.ClusterName
	}
	return ""
}

// SessionRecordingMetadataWithFrames contains metadata and frames for a session recording.
// This is used to store the metadata and frames together in a single message.
type SessionRecordingMetadataWithFrames struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Metadata is the metadata of the session recording.
	Metadata *SessionRecordingMetadata `protobuf:"bytes,1,opt,name=metadata,proto3" json:"metadata,omitempty"`
	// Frames is the frames captured during the session recording.
	Frames        []*SessionRecordingThumbnail `protobuf:"bytes,2,rep,name=frames,proto3" json:"frames,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SessionRecordingMetadataWithFrames) Reset() {
	*x = SessionRecordingMetadataWithFrames{}
	mi := &file_teleport_recordingmetadata_v1_recordingmetadata_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SessionRecordingMetadataWithFrames) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SessionRecordingMetadataWithFrames) ProtoMessage() {}

func (x *SessionRecordingMetadataWithFrames) ProtoReflect() protoreflect.Message {
	mi := &file_teleport_recordingmetadata_v1_recordingmetadata_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SessionRecordingMetadataWithFrames.ProtoReflect.Descriptor instead.
func (*SessionRecordingMetadataWithFrames) Descriptor() ([]byte, []int) {
	return file_teleport_recordingmetadata_v1_recordingmetadata_proto_rawDescGZIP(), []int{5}
}

func (x *SessionRecordingMetadataWithFrames) GetMetadata() *SessionRecordingMetadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *SessionRecordingMetadataWithFrames) GetFrames() []*SessionRecordingThumbnail {
	if x != nil {
		return x.Frames
	}
	return nil
}

// SessionRecordingThumbnail is a thumbnail of a session recording.
type SessionRecordingThumbnail struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// SVG is the SVG image of the thumbnail.
	Svg []byte `protobuf:"bytes,1,opt,name=svg,proto3" json:"svg,omitempty"`
	// Cols is the number of columns in the terminal.
	Cols int32 `protobuf:"varint,2,opt,name=cols,proto3" json:"cols,omitempty"`
	// Rows is the number of rows in the terminal.
	Rows int32 `protobuf:"varint,3,opt,name=rows,proto3" json:"rows,omitempty"`
	// CursorX is the X coordinate of the cursor.
	CursorX int32 `protobuf:"varint,4,opt,name=cursor_x,json=cursorX,proto3" json:"cursor_x,omitempty"`
	// CursorY is the Y coordinate of the cursor.
	CursorY int32 `protobuf:"varint,5,opt,name=cursor_y,json=cursorY,proto3" json:"cursor_y,omitempty"`
	// StartOffset is the start time of the thumbnail, relative to the start of the session.
	StartOffset *durationpb.Duration `protobuf:"bytes,6,opt,name=start_offset,json=startOffset,proto3" json:"start_offset,omitempty"`
	// EndOffset is the end time of the thumbnail, relative to the start of the session.
	EndOffset     *durationpb.Duration `protobuf:"bytes,7,opt,name=end_offset,json=endOffset,proto3" json:"end_offset,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SessionRecordingThumbnail) Reset() {
	*x = SessionRecordingThumbnail{}
	mi := &file_teleport_recordingmetadata_v1_recordingmetadata_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SessionRecordingThumbnail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SessionRecordingThumbnail) ProtoMessage() {}

func (x *SessionRecordingThumbnail) ProtoReflect() protoreflect.Message {
	mi := &file_teleport_recordingmetadata_v1_recordingmetadata_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SessionRecordingThumbnail.ProtoReflect.Descriptor instead.
func (*SessionRecordingThumbnail) Descriptor() ([]byte, []int) {
	return file_teleport_recordingmetadata_v1_recordingmetadata_proto_rawDescGZIP(), []int{6}
}

func (x *SessionRecordingThumbnail) GetSvg() []byte {
	if x != nil {
		return x.Svg
	}
	return nil
}

func (x *SessionRecordingThumbnail) GetCols() int32 {
	if x != nil {
		return x.Cols
	}
	return 0
}

func (x *SessionRecordingThumbnail) GetRows() int32 {
	if x != nil {
		return x.Rows
	}
	return 0
}

func (x *SessionRecordingThumbnail) GetCursorX() int32 {
	if x != nil {
		return x.CursorX
	}
	return 0
}

func (x *SessionRecordingThumbnail) GetCursorY() int32 {
	if x != nil {
		return x.CursorY
	}
	return 0
}

func (x *SessionRecordingThumbnail) GetStartOffset() *durationpb.Duration {
	if x != nil {
		return x.StartOffset
	}
	return nil
}

func (x *SessionRecordingThumbnail) GetEndOffset() *durationpb.Duration {
	if x != nil {
		return x.EndOffset
	}
	return nil
}

var File_teleport_recordingmetadata_v1_recordingmetadata_proto protoreflect.FileDescriptor

const file_teleport_recordingmetadata_v1_recordingmetadata_proto_rawDesc = "" +
	"\n" +
	"5teleport/recordingmetadata/v1/recordingmetadata.proto\x12\x1dteleport.recordingmetadata.v1\x1a\x1egoogle/protobuf/duration.proto\x1a\x1fgoogle/protobuf/timestamp.proto\"\xa0\x03\n" +
	"\x15SessionRecordingEvent\x12<\n" +
	"\fstart_offset\x18\x01 \x01(\v2\x19.google.protobuf.DurationR\vstartOffset\x128\n" +
	"\n" +
	"end_offset\x18\x02 \x01(\v2\x19.google.protobuf.DurationR\tendOffset\x12`\n" +
	"\n" +
	"inactivity\x18\x03 \x01(\v2>.teleport.recordingmetadata.v1.SessionRecordingInactivityEventH\x00R\n" +
	"inactivity\x12N\n" +
	"\x04join\x18\x04 \x01(\v28.teleport.recordingmetadata.v1.SessionRecordingJoinEventH\x00R\x04join\x12T\n" +
	"\x06resize\x18\x05 \x01(\v2:.teleport.recordingmetadata.v1.SessionRecordingResizeEventH\x00R\x06resizeB\a\n" +
	"\x05event\"!\n" +
	"\x1fSessionRecordingInactivityEvent\"/\n" +
	"\x19SessionRecordingJoinEvent\x12\x12\n" +
	"\x04user\x18\x01 \x01(\tR\x04user\"E\n" +
	"\x1bSessionRecordingResizeEvent\x12\x12\n" +
	"\x04cols\x18\x01 \x01(\x05R\x04cols\x12\x12\n" +
	"\x04rows\x18\x02 \x01(\x05R\x04rows\"\xf2\x02\n" +
	"\x18SessionRecordingMetadata\x125\n" +
	"\bduration\x18\x01 \x01(\v2\x19.google.protobuf.DurationR\bduration\x12L\n" +
	"\x06events\x18\x02 \x03(\v24.teleport.recordingmetadata.v1.SessionRecordingEventR\x06events\x12\x1d\n" +
	"\n" +
	"start_cols\x18\x03 \x01(\x05R\tstartCols\x12\x1d\n" +
	"\n" +
	"start_rows\x18\x04 \x01(\x05R\tstartRows\x129\n" +
	"\n" +
	"start_time\x18\x05 \x01(\v2\x1a.google.protobuf.TimestampR\tstartTime\x125\n" +
	"\bend_time\x18\x06 \x01(\v2\x1a.google.protobuf.TimestampR\aendTime\x12!\n" +
	"\fcluster_name\x18\a \x01(\tR\vclusterName\"\xcb\x01\n" +
	"\"SessionRecordingMetadataWithFrames\x12S\n" +
	"\bmetadata\x18\x01 \x01(\v27.teleport.recordingmetadata.v1.SessionRecordingMetadataR\bmetadata\x12P\n" +
	"\x06frames\x18\x02 \x03(\v28.teleport.recordingmetadata.v1.SessionRecordingThumbnailR\x06frames\"\x83\x02\n" +
	"\x19SessionRecordingThumbnail\x12\x10\n" +
	"\x03svg\x18\x01 \x01(\fR\x03svg\x12\x12\n" +
	"\x04cols\x18\x02 \x01(\x05R\x04cols\x12\x12\n" +
	"\x04rows\x18\x03 \x01(\x05R\x04rows\x12\x19\n" +
	"\bcursor_x\x18\x04 \x01(\x05R\acursorX\x12\x19\n" +
	"\bcursor_y\x18\x05 \x01(\x05R\acursorY\x12<\n" +
	"\fstart_offset\x18\x06 \x01(\v2\x19.google.protobuf.DurationR\vstartOffset\x128\n" +
	"\n" +
	"end_offset\x18\a \x01(\v2\x19.google.protobuf.DurationR\tendOffsetBfZdgithub.com/gravitational/teleport/api/gen/proto/go/teleport/recordingmetadata/v1;recordingmetadatav1b\x06proto3"

var (
	file_teleport_recordingmetadata_v1_recordingmetadata_proto_rawDescOnce sync.Once
	file_teleport_recordingmetadata_v1_recordingmetadata_proto_rawDescData []byte
)

func file_teleport_recordingmetadata_v1_recordingmetadata_proto_rawDescGZIP() []byte {
	file_teleport_recordingmetadata_v1_recordingmetadata_proto_rawDescOnce.Do(func() {
		file_teleport_recordingmetadata_v1_recordingmetadata_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_teleport_recordingmetadata_v1_recordingmetadata_proto_rawDesc), len(file_teleport_recordingmetadata_v1_recordingmetadata_proto_rawDesc)))
	})
	return file_teleport_recordingmetadata_v1_recordingmetadata_proto_rawDescData
}

var file_teleport_recordingmetadata_v1_recordingmetadata_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_teleport_recordingmetadata_v1_recordingmetadata_proto_goTypes = []any{
	(*SessionRecordingEvent)(nil),              // 0: teleport.recordingmetadata.v1.SessionRecordingEvent
	(*SessionRecordingInactivityEvent)(nil),    // 1: teleport.recordingmetadata.v1.SessionRecordingInactivityEvent
	(*SessionRecordingJoinEvent)(nil),          // 2: teleport.recordingmetadata.v1.SessionRecordingJoinEvent
	(*SessionRecordingResizeEvent)(nil),        // 3: teleport.recordingmetadata.v1.SessionRecordingResizeEvent
	(*SessionRecordingMetadata)(nil),           // 4: teleport.recordingmetadata.v1.SessionRecordingMetadata
	(*SessionRecordingMetadataWithFrames)(nil), // 5: teleport.recordingmetadata.v1.SessionRecordingMetadataWithFrames
	(*SessionRecordingThumbnail)(nil),          // 6: teleport.recordingmetadata.v1.SessionRecordingThumbnail
	(*durationpb.Duration)(nil),                // 7: google.protobuf.Duration
	(*timestamppb.Timestamp)(nil),              // 8: google.protobuf.Timestamp
}
var file_teleport_recordingmetadata_v1_recordingmetadata_proto_depIdxs = []int32{
	7,  // 0: teleport.recordingmetadata.v1.SessionRecordingEvent.start_offset:type_name -> google.protobuf.Duration
	7,  // 1: teleport.recordingmetadata.v1.SessionRecordingEvent.end_offset:type_name -> google.protobuf.Duration
	1,  // 2: teleport.recordingmetadata.v1.SessionRecordingEvent.inactivity:type_name -> teleport.recordingmetadata.v1.SessionRecordingInactivityEvent
	2,  // 3: teleport.recordingmetadata.v1.SessionRecordingEvent.join:type_name -> teleport.recordingmetadata.v1.SessionRecordingJoinEvent
	3,  // 4: teleport.recordingmetadata.v1.SessionRecordingEvent.resize:type_name -> teleport.recordingmetadata.v1.SessionRecordingResizeEvent
	7,  // 5: teleport.recordingmetadata.v1.SessionRecordingMetadata.duration:type_name -> google.protobuf.Duration
	0,  // 6: teleport.recordingmetadata.v1.SessionRecordingMetadata.events:type_name -> teleport.recordingmetadata.v1.SessionRecordingEvent
	8,  // 7: teleport.recordingmetadata.v1.SessionRecordingMetadata.start_time:type_name -> google.protobuf.Timestamp
	8,  // 8: teleport.recordingmetadata.v1.SessionRecordingMetadata.end_time:type_name -> google.protobuf.Timestamp
	4,  // 9: teleport.recordingmetadata.v1.SessionRecordingMetadataWithFrames.metadata:type_name -> teleport.recordingmetadata.v1.SessionRecordingMetadata
	6,  // 10: teleport.recordingmetadata.v1.SessionRecordingMetadataWithFrames.frames:type_name -> teleport.recordingmetadata.v1.SessionRecordingThumbnail
	7,  // 11: teleport.recordingmetadata.v1.SessionRecordingThumbnail.start_offset:type_name -> google.protobuf.Duration
	7,  // 12: teleport.recordingmetadata.v1.SessionRecordingThumbnail.end_offset:type_name -> google.protobuf.Duration
	13, // [13:13] is the sub-list for method output_type
	13, // [13:13] is the sub-list for method input_type
	13, // [13:13] is the sub-list for extension type_name
	13, // [13:13] is the sub-list for extension extendee
	0,  // [0:13] is the sub-list for field type_name
}

func init() { file_teleport_recordingmetadata_v1_recordingmetadata_proto_init() }
func file_teleport_recordingmetadata_v1_recordingmetadata_proto_init() {
	if File_teleport_recordingmetadata_v1_recordingmetadata_proto != nil {
		return
	}
	file_teleport_recordingmetadata_v1_recordingmetadata_proto_msgTypes[0].OneofWrappers = []any{
		(*SessionRecordingEvent_Inactivity)(nil),
		(*SessionRecordingEvent_Join)(nil),
		(*SessionRecordingEvent_Resize)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_teleport_recordingmetadata_v1_recordingmetadata_proto_rawDesc), len(file_teleport_recordingmetadata_v1_recordingmetadata_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_teleport_recordingmetadata_v1_recordingmetadata_proto_goTypes,
		DependencyIndexes: file_teleport_recordingmetadata_v1_recordingmetadata_proto_depIdxs,
		MessageInfos:      file_teleport_recordingmetadata_v1_recordingmetadata_proto_msgTypes,
	}.Build()
	File_teleport_recordingmetadata_v1_recordingmetadata_proto = out.File
	file_teleport_recordingmetadata_v1_recordingmetadata_proto_goTypes = nil
	file_teleport_recordingmetadata_v1_recordingmetadata_proto_depIdxs = nil
}
