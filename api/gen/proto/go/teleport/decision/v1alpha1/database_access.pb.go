// Copyright 2024 Gravitational, Inc
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: teleport/decision/v1alpha1/database_access.proto

package decisionpb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// EvaluateDatabaseAccessRequest describes a request to evaluate whether or not
// a given database access attempt should be permitted.
type EvaluateDatabaseAccessRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Metadata      *RequestMetadata       `protobuf:"bytes,1,opt,name=metadata,proto3" json:"metadata,omitempty"`
	TlsIdentity   *TLSIdentity           `protobuf:"bytes,2,opt,name=tls_identity,json=tlsIdentity,proto3" json:"tls_identity,omitempty"`
	Database      *Resource              `protobuf:"bytes,3,opt,name=database,proto3" json:"database,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EvaluateDatabaseAccessRequest) Reset() {
	*x = EvaluateDatabaseAccessRequest{}
	mi := &file_teleport_decision_v1alpha1_database_access_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EvaluateDatabaseAccessRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EvaluateDatabaseAccessRequest) ProtoMessage() {}

func (x *EvaluateDatabaseAccessRequest) ProtoReflect() protoreflect.Message {
	mi := &file_teleport_decision_v1alpha1_database_access_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EvaluateDatabaseAccessRequest.ProtoReflect.Descriptor instead.
func (*EvaluateDatabaseAccessRequest) Descriptor() ([]byte, []int) {
	return file_teleport_decision_v1alpha1_database_access_proto_rawDescGZIP(), []int{0}
}

func (x *EvaluateDatabaseAccessRequest) GetMetadata() *RequestMetadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *EvaluateDatabaseAccessRequest) GetTlsIdentity() *TLSIdentity {
	if x != nil {
		return x.TlsIdentity
	}
	return nil
}

func (x *EvaluateDatabaseAccessRequest) GetDatabase() *Resource {
	if x != nil {
		return x.Database
	}
	return nil
}

// EvaluateDatabaseAccessResponse describes the result of a database access
// evaluation.
type EvaluateDatabaseAccessResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Result:
	//
	//	*EvaluateDatabaseAccessResponse_Permit
	//	*EvaluateDatabaseAccessResponse_Denial
	Result        isEvaluateDatabaseAccessResponse_Result `protobuf_oneof:"result"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EvaluateDatabaseAccessResponse) Reset() {
	*x = EvaluateDatabaseAccessResponse{}
	mi := &file_teleport_decision_v1alpha1_database_access_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EvaluateDatabaseAccessResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EvaluateDatabaseAccessResponse) ProtoMessage() {}

func (x *EvaluateDatabaseAccessResponse) ProtoReflect() protoreflect.Message {
	mi := &file_teleport_decision_v1alpha1_database_access_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EvaluateDatabaseAccessResponse.ProtoReflect.Descriptor instead.
func (*EvaluateDatabaseAccessResponse) Descriptor() ([]byte, []int) {
	return file_teleport_decision_v1alpha1_database_access_proto_rawDescGZIP(), []int{1}
}

func (x *EvaluateDatabaseAccessResponse) GetResult() isEvaluateDatabaseAccessResponse_Result {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *EvaluateDatabaseAccessResponse) GetPermit() *DatabaseAccessPermit {
	if x != nil {
		if x, ok := x.Result.(*EvaluateDatabaseAccessResponse_Permit); ok {
			return x.Permit
		}
	}
	return nil
}

func (x *EvaluateDatabaseAccessResponse) GetDenial() *DatabaseAccessDenial {
	if x != nil {
		if x, ok := x.Result.(*EvaluateDatabaseAccessResponse_Denial); ok {
			return x.Denial
		}
	}
	return nil
}

type isEvaluateDatabaseAccessResponse_Result interface {
	isEvaluateDatabaseAccessResponse_Result()
}

type EvaluateDatabaseAccessResponse_Permit struct {
	Permit *DatabaseAccessPermit `protobuf:"bytes,1,opt,name=permit,proto3,oneof"`
}

type EvaluateDatabaseAccessResponse_Denial struct {
	Denial *DatabaseAccessDenial `protobuf:"bytes,2,opt,name=denial,proto3,oneof"`
}

func (*EvaluateDatabaseAccessResponse_Permit) isEvaluateDatabaseAccessResponse_Result() {}

func (*EvaluateDatabaseAccessResponse_Denial) isEvaluateDatabaseAccessResponse_Result() {}

// DatabaseAccessPermit describes the parameters/constraints of a permissible
// database access attempt.
type DatabaseAccessPermit struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Metadata      *PermitMetadata        `protobuf:"bytes,1,opt,name=metadata,proto3" json:"metadata,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DatabaseAccessPermit) Reset() {
	*x = DatabaseAccessPermit{}
	mi := &file_teleport_decision_v1alpha1_database_access_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DatabaseAccessPermit) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DatabaseAccessPermit) ProtoMessage() {}

func (x *DatabaseAccessPermit) ProtoReflect() protoreflect.Message {
	mi := &file_teleport_decision_v1alpha1_database_access_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DatabaseAccessPermit.ProtoReflect.Descriptor instead.
func (*DatabaseAccessPermit) Descriptor() ([]byte, []int) {
	return file_teleport_decision_v1alpha1_database_access_proto_rawDescGZIP(), []int{2}
}

func (x *DatabaseAccessPermit) GetMetadata() *PermitMetadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

// DatabaseAccessDenial describes a database access denial.
type DatabaseAccessDenial struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Metadata      *DenialMetadata        `protobuf:"bytes,1,opt,name=metadata,proto3" json:"metadata,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DatabaseAccessDenial) Reset() {
	*x = DatabaseAccessDenial{}
	mi := &file_teleport_decision_v1alpha1_database_access_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DatabaseAccessDenial) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DatabaseAccessDenial) ProtoMessage() {}

func (x *DatabaseAccessDenial) ProtoReflect() protoreflect.Message {
	mi := &file_teleport_decision_v1alpha1_database_access_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DatabaseAccessDenial.ProtoReflect.Descriptor instead.
func (*DatabaseAccessDenial) Descriptor() ([]byte, []int) {
	return file_teleport_decision_v1alpha1_database_access_proto_rawDescGZIP(), []int{3}
}

func (x *DatabaseAccessDenial) GetMetadata() *DenialMetadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

var File_teleport_decision_v1alpha1_database_access_proto protoreflect.FileDescriptor

const file_teleport_decision_v1alpha1_database_access_proto_rawDesc = "" +
	"\n" +
	"0teleport/decision/v1alpha1/database_access.proto\x12\x1ateleport.decision.v1alpha1\x1a0teleport/decision/v1alpha1/denial_metadata.proto\x1a0teleport/decision/v1alpha1/permit_metadata.proto\x1a1teleport/decision/v1alpha1/request_metadata.proto\x1a)teleport/decision/v1alpha1/resource.proto\x1a-teleport/decision/v1alpha1/tls_identity.proto\"\xf6\x01\n" +
	"\x1dEvaluateDatabaseAccessRequest\x12G\n" +
	"\bmetadata\x18\x01 \x01(\v2+.teleport.decision.v1alpha1.RequestMetadataR\bmetadata\x12J\n" +
	"\ftls_identity\x18\x02 \x01(\v2'.teleport.decision.v1alpha1.TLSIdentityR\vtlsIdentity\x12@\n" +
	"\bdatabase\x18\x03 \x01(\v2$.teleport.decision.v1alpha1.ResourceR\bdatabase\"\xc2\x01\n" +
	"\x1eEvaluateDatabaseAccessResponse\x12J\n" +
	"\x06permit\x18\x01 \x01(\v20.teleport.decision.v1alpha1.DatabaseAccessPermitH\x00R\x06permit\x12J\n" +
	"\x06denial\x18\x02 \x01(\v20.teleport.decision.v1alpha1.DatabaseAccessDenialH\x00R\x06denialB\b\n" +
	"\x06result\"^\n" +
	"\x14DatabaseAccessPermit\x12F\n" +
	"\bmetadata\x18\x01 \x01(\v2*.teleport.decision.v1alpha1.PermitMetadataR\bmetadata\"^\n" +
	"\x14DatabaseAccessDenial\x12F\n" +
	"\bmetadata\x18\x01 \x01(\v2*.teleport.decision.v1alpha1.DenialMetadataR\bmetadataBZZXgithub.com/gravitational/teleport/api/gen/proto/go/teleport/decision/v1alpha1;decisionpbb\x06proto3"

var (
	file_teleport_decision_v1alpha1_database_access_proto_rawDescOnce sync.Once
	file_teleport_decision_v1alpha1_database_access_proto_rawDescData []byte
)

func file_teleport_decision_v1alpha1_database_access_proto_rawDescGZIP() []byte {
	file_teleport_decision_v1alpha1_database_access_proto_rawDescOnce.Do(func() {
		file_teleport_decision_v1alpha1_database_access_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_teleport_decision_v1alpha1_database_access_proto_rawDesc), len(file_teleport_decision_v1alpha1_database_access_proto_rawDesc)))
	})
	return file_teleport_decision_v1alpha1_database_access_proto_rawDescData
}

var file_teleport_decision_v1alpha1_database_access_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_teleport_decision_v1alpha1_database_access_proto_goTypes = []any{
	(*EvaluateDatabaseAccessRequest)(nil),  // 0: teleport.decision.v1alpha1.EvaluateDatabaseAccessRequest
	(*EvaluateDatabaseAccessResponse)(nil), // 1: teleport.decision.v1alpha1.EvaluateDatabaseAccessResponse
	(*DatabaseAccessPermit)(nil),           // 2: teleport.decision.v1alpha1.DatabaseAccessPermit
	(*DatabaseAccessDenial)(nil),           // 3: teleport.decision.v1alpha1.DatabaseAccessDenial
	(*RequestMetadata)(nil),                // 4: teleport.decision.v1alpha1.RequestMetadata
	(*TLSIdentity)(nil),                    // 5: teleport.decision.v1alpha1.TLSIdentity
	(*Resource)(nil),                       // 6: teleport.decision.v1alpha1.Resource
	(*PermitMetadata)(nil),                 // 7: teleport.decision.v1alpha1.PermitMetadata
	(*DenialMetadata)(nil),                 // 8: teleport.decision.v1alpha1.DenialMetadata
}
var file_teleport_decision_v1alpha1_database_access_proto_depIdxs = []int32{
	4, // 0: teleport.decision.v1alpha1.EvaluateDatabaseAccessRequest.metadata:type_name -> teleport.decision.v1alpha1.RequestMetadata
	5, // 1: teleport.decision.v1alpha1.EvaluateDatabaseAccessRequest.tls_identity:type_name -> teleport.decision.v1alpha1.TLSIdentity
	6, // 2: teleport.decision.v1alpha1.EvaluateDatabaseAccessRequest.database:type_name -> teleport.decision.v1alpha1.Resource
	2, // 3: teleport.decision.v1alpha1.EvaluateDatabaseAccessResponse.permit:type_name -> teleport.decision.v1alpha1.DatabaseAccessPermit
	3, // 4: teleport.decision.v1alpha1.EvaluateDatabaseAccessResponse.denial:type_name -> teleport.decision.v1alpha1.DatabaseAccessDenial
	7, // 5: teleport.decision.v1alpha1.DatabaseAccessPermit.metadata:type_name -> teleport.decision.v1alpha1.PermitMetadata
	8, // 6: teleport.decision.v1alpha1.DatabaseAccessDenial.metadata:type_name -> teleport.decision.v1alpha1.DenialMetadata
	7, // [7:7] is the sub-list for method output_type
	7, // [7:7] is the sub-list for method input_type
	7, // [7:7] is the sub-list for extension type_name
	7, // [7:7] is the sub-list for extension extendee
	0, // [0:7] is the sub-list for field type_name
}

func init() { file_teleport_decision_v1alpha1_database_access_proto_init() }
func file_teleport_decision_v1alpha1_database_access_proto_init() {
	if File_teleport_decision_v1alpha1_database_access_proto != nil {
		return
	}
	file_teleport_decision_v1alpha1_denial_metadata_proto_init()
	file_teleport_decision_v1alpha1_permit_metadata_proto_init()
	file_teleport_decision_v1alpha1_request_metadata_proto_init()
	file_teleport_decision_v1alpha1_resource_proto_init()
	file_teleport_decision_v1alpha1_tls_identity_proto_init()
	file_teleport_decision_v1alpha1_database_access_proto_msgTypes[1].OneofWrappers = []any{
		(*EvaluateDatabaseAccessResponse_Permit)(nil),
		(*EvaluateDatabaseAccessResponse_Denial)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_teleport_decision_v1alpha1_database_access_proto_rawDesc), len(file_teleport_decision_v1alpha1_database_access_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_teleport_decision_v1alpha1_database_access_proto_goTypes,
		DependencyIndexes: file_teleport_decision_v1alpha1_database_access_proto_depIdxs,
		MessageInfos:      file_teleport_decision_v1alpha1_database_access_proto_msgTypes,
	}.Build()
	File_teleport_decision_v1alpha1_database_access_proto = out.File
	file_teleport_decision_v1alpha1_database_access_proto_goTypes = nil
	file_teleport_decision_v1alpha1_database_access_proto_depIdxs = nil
}
