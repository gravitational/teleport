// Copyright 2025 Gravitational, Inc
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: teleport/accesslisttemplate/v1/accesslisttemplate.proto

package accesslisttemplatev1

import (
	_ "github.com/gogo/protobuf/gogoproto"
	v1 "github.com/gravitational/teleport/api/gen/proto/go/teleport/label/v1"
	types "github.com/gravitational/teleport/api/types"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// TemplateLongTerm describes fields required to create
// an access list with long term access grant.
type TemplateLongTerm struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// access_condition defines access to resources
	// and its principals.
	Allow         *AccessConditions `protobuf:"bytes,1,opt,name=allow,proto3" json:"allow,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TemplateLongTerm) Reset() {
	*x = TemplateLongTerm{}
	mi := &file_teleport_accesslisttemplate_v1_accesslisttemplate_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TemplateLongTerm) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TemplateLongTerm) ProtoMessage() {}

func (x *TemplateLongTerm) ProtoReflect() protoreflect.Message {
	mi := &file_teleport_accesslisttemplate_v1_accesslisttemplate_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TemplateLongTerm.ProtoReflect.Descriptor instead.
func (*TemplateLongTerm) Descriptor() ([]byte, []int) {
	return file_teleport_accesslisttemplate_v1_accesslisttemplate_proto_rawDescGZIP(), []int{0}
}

func (x *TemplateLongTerm) GetAllow() *AccessConditions {
	if x != nil {
		return x.Allow
	}
	return nil
}

// TemplateShortTerm describes fields required to create
// an access list with short term access grant.
type TemplateShortTerm struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// access_condition defines access to resources
	// and its principals.
	Allow         *AccessConditions `protobuf:"bytes,1,opt,name=allow,proto3" json:"allow,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TemplateShortTerm) Reset() {
	*x = TemplateShortTerm{}
	mi := &file_teleport_accesslisttemplate_v1_accesslisttemplate_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TemplateShortTerm) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TemplateShortTerm) ProtoMessage() {}

func (x *TemplateShortTerm) ProtoReflect() protoreflect.Message {
	mi := &file_teleport_accesslisttemplate_v1_accesslisttemplate_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TemplateShortTerm.ProtoReflect.Descriptor instead.
func (*TemplateShortTerm) Descriptor() ([]byte, []int) {
	return file_teleport_accesslisttemplate_v1_accesslisttemplate_proto_rawDescGZIP(), []int{1}
}

func (x *TemplateShortTerm) GetAllow() *AccessConditions {
	if x != nil {
		return x.Allow
	}
	return nil
}

// AllowResourceAccessConditions defines the access to different resources.
type AccessConditions struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	Application    *ApplicationAccess     `protobuf:"bytes,1,opt,name=application,proto3" json:"application,omitempty"`
	Database       *DatabaseAccess        `protobuf:"bytes,2,opt,name=database,proto3" json:"database,omitempty"`
	GitServer      *GitServerAccess       `protobuf:"bytes,3,opt,name=git_server,json=gitServer,proto3" json:"git_server,omitempty"`
	Kubernetes     *KubernetesAccess      `protobuf:"bytes,4,opt,name=kubernetes,proto3" json:"kubernetes,omitempty"`
	Server         *ServerAccess          `protobuf:"bytes,5,opt,name=server,proto3" json:"server,omitempty"`
	WindowsDesktop *WindowsDesktopAccess  `protobuf:"bytes,6,opt,name=windows_desktop,json=windowsDesktop,proto3" json:"windows_desktop,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *AccessConditions) Reset() {
	*x = AccessConditions{}
	mi := &file_teleport_accesslisttemplate_v1_accesslisttemplate_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AccessConditions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccessConditions) ProtoMessage() {}

func (x *AccessConditions) ProtoReflect() protoreflect.Message {
	mi := &file_teleport_accesslisttemplate_v1_accesslisttemplate_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccessConditions.ProtoReflect.Descriptor instead.
func (*AccessConditions) Descriptor() ([]byte, []int) {
	return file_teleport_accesslisttemplate_v1_accesslisttemplate_proto_rawDescGZIP(), []int{2}
}

func (x *AccessConditions) GetApplication() *ApplicationAccess {
	if x != nil {
		return x.Application
	}
	return nil
}

func (x *AccessConditions) GetDatabase() *DatabaseAccess {
	if x != nil {
		return x.Database
	}
	return nil
}

func (x *AccessConditions) GetGitServer() *GitServerAccess {
	if x != nil {
		return x.GitServer
	}
	return nil
}

func (x *AccessConditions) GetKubernetes() *KubernetesAccess {
	if x != nil {
		return x.Kubernetes
	}
	return nil
}

func (x *AccessConditions) GetServer() *ServerAccess {
	if x != nil {
		return x.Server
	}
	return nil
}

func (x *AccessConditions) GetWindowsDesktop() *WindowsDesktopAccess {
	if x != nil {
		return x.WindowsDesktop
	}
	return nil
}

// ApplicationAccess are access related fields for application resource.
type ApplicationAccess struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// labels define access to applications.
	Labels []*v1.Label `protobuf:"bytes,1,rep,name=labels,proto3" json:"labels,omitempty"`
	// AWSRoleARNs is a list of AWS role ARNs access.
	AwsRoleArns []string `protobuf:"bytes,2,rep,name=aws_role_arns,json=awsRoleArns,proto3" json:"aws_role_arns,omitempty"`
	// AzureIdentities is a list of Azure identities access.
	AzureIdentities []string `protobuf:"bytes,3,rep,name=azure_identities,json=azureIdentities,proto3" json:"azure_identities,omitempty"`
	// GCPServiceAccounts is a list of GCP service accounts access.
	GcpServiceAccounts []string `protobuf:"bytes,4,rep,name=gcp_service_accounts,json=gcpServiceAccounts,proto3" json:"gcp_service_accounts,omitempty"`
	// MCPPermissions defines MCP servers related permissions.
	Mcp           *types.MCPPermissions `protobuf:"bytes,5,opt,name=mcp,proto3" json:"mcp,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ApplicationAccess) Reset() {
	*x = ApplicationAccess{}
	mi := &file_teleport_accesslisttemplate_v1_accesslisttemplate_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ApplicationAccess) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApplicationAccess) ProtoMessage() {}

func (x *ApplicationAccess) ProtoReflect() protoreflect.Message {
	mi := &file_teleport_accesslisttemplate_v1_accesslisttemplate_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApplicationAccess.ProtoReflect.Descriptor instead.
func (*ApplicationAccess) Descriptor() ([]byte, []int) {
	return file_teleport_accesslisttemplate_v1_accesslisttemplate_proto_rawDescGZIP(), []int{3}
}

func (x *ApplicationAccess) GetLabels() []*v1.Label {
	if x != nil {
		return x.Labels
	}
	return nil
}

func (x *ApplicationAccess) GetAwsRoleArns() []string {
	if x != nil {
		return x.AwsRoleArns
	}
	return nil
}

func (x *ApplicationAccess) GetAzureIdentities() []string {
	if x != nil {
		return x.AzureIdentities
	}
	return nil
}

func (x *ApplicationAccess) GetGcpServiceAccounts() []string {
	if x != nil {
		return x.GcpServiceAccounts
	}
	return nil
}

func (x *ApplicationAccess) GetMcp() *types.MCPPermissions {
	if x != nil {
		return x.Mcp
	}
	return nil
}

// DatabaseAccess are access related fields for db resource.
type DatabaseAccess struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// labels define access to databases.
	Labels []*v1.Label `protobuf:"bytes,1,rep,name=labels,proto3" json:"labels,omitempty"`
	// names is a list of connectable database names.
	Names []string `protobuf:"bytes,2,rep,name=names,proto3" json:"names,omitempty"`
	// users is a list of connectable databases users.
	Users         []string `protobuf:"bytes,3,rep,name=users,proto3" json:"users,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DatabaseAccess) Reset() {
	*x = DatabaseAccess{}
	mi := &file_teleport_accesslisttemplate_v1_accesslisttemplate_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DatabaseAccess) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DatabaseAccess) ProtoMessage() {}

func (x *DatabaseAccess) ProtoReflect() protoreflect.Message {
	mi := &file_teleport_accesslisttemplate_v1_accesslisttemplate_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DatabaseAccess.ProtoReflect.Descriptor instead.
func (*DatabaseAccess) Descriptor() ([]byte, []int) {
	return file_teleport_accesslisttemplate_v1_accesslisttemplate_proto_rawDescGZIP(), []int{4}
}

func (x *DatabaseAccess) GetLabels() []*v1.Label {
	if x != nil {
		return x.Labels
	}
	return nil
}

func (x *DatabaseAccess) GetNames() []string {
	if x != nil {
		return x.Names
	}
	return nil
}

func (x *DatabaseAccess) GetUsers() []string {
	if x != nil {
		return x.Users
	}
	return nil
}

// GitServerAccess are access related fields for git server resource.
type GitServerAccess struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// permissions defines GitHub integration related permissions.
	Permissions   []*types.GitHubPermission `protobuf:"bytes,1,rep,name=permissions,proto3" json:"permissions,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GitServerAccess) Reset() {
	*x = GitServerAccess{}
	mi := &file_teleport_accesslisttemplate_v1_accesslisttemplate_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GitServerAccess) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GitServerAccess) ProtoMessage() {}

func (x *GitServerAccess) ProtoReflect() protoreflect.Message {
	mi := &file_teleport_accesslisttemplate_v1_accesslisttemplate_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GitServerAccess.ProtoReflect.Descriptor instead.
func (*GitServerAccess) Descriptor() ([]byte, []int) {
	return file_teleport_accesslisttemplate_v1_accesslisttemplate_proto_rawDescGZIP(), []int{5}
}

func (x *GitServerAccess) GetPermissions() []*types.GitHubPermission {
	if x != nil {
		return x.Permissions
	}
	return nil
}

// KubernetesAccess are access related fields for kube resource.
type KubernetesAccess struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// labels define access to kubernetes.
	Labels []*v1.Label `protobuf:"bytes,1,rep,name=labels,proto3" json:"labels,omitempty"`
	// groups is a list of kubernetes groups.
	Groups []string `protobuf:"bytes,2,rep,name=groups,proto3" json:"groups,omitempty"`
	// users is a list of impersonable kubernetes users
	Users []string `protobuf:"bytes,3,rep,name=users,proto3" json:"users,omitempty"`
	// resources is a list of Kubernetes Resources.
	Resources     []*types.KubernetesResource `protobuf:"bytes,4,rep,name=resources,proto3" json:"resources,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *KubernetesAccess) Reset() {
	*x = KubernetesAccess{}
	mi := &file_teleport_accesslisttemplate_v1_accesslisttemplate_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *KubernetesAccess) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KubernetesAccess) ProtoMessage() {}

func (x *KubernetesAccess) ProtoReflect() protoreflect.Message {
	mi := &file_teleport_accesslisttemplate_v1_accesslisttemplate_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KubernetesAccess.ProtoReflect.Descriptor instead.
func (*KubernetesAccess) Descriptor() ([]byte, []int) {
	return file_teleport_accesslisttemplate_v1_accesslisttemplate_proto_rawDescGZIP(), []int{6}
}

func (x *KubernetesAccess) GetLabels() []*v1.Label {
	if x != nil {
		return x.Labels
	}
	return nil
}

func (x *KubernetesAccess) GetGroups() []string {
	if x != nil {
		return x.Groups
	}
	return nil
}

func (x *KubernetesAccess) GetUsers() []string {
	if x != nil {
		return x.Users
	}
	return nil
}

func (x *KubernetesAccess) GetResources() []*types.KubernetesResource {
	if x != nil {
		return x.Resources
	}
	return nil
}

// ServerAccess are access related fields for server resource.
type ServerAccess struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// labels define access to servers.
	Labels []*v1.Label `protobuf:"bytes,1,rep,name=labels,proto3" json:"labels,omitempty"`
	// logins is a list of *nix system logins.
	Logins        []string `protobuf:"bytes,2,rep,name=logins,proto3" json:"logins,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ServerAccess) Reset() {
	*x = ServerAccess{}
	mi := &file_teleport_accesslisttemplate_v1_accesslisttemplate_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ServerAccess) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerAccess) ProtoMessage() {}

func (x *ServerAccess) ProtoReflect() protoreflect.Message {
	mi := &file_teleport_accesslisttemplate_v1_accesslisttemplate_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerAccess.ProtoReflect.Descriptor instead.
func (*ServerAccess) Descriptor() ([]byte, []int) {
	return file_teleport_accesslisttemplate_v1_accesslisttemplate_proto_rawDescGZIP(), []int{7}
}

func (x *ServerAccess) GetLabels() []*v1.Label {
	if x != nil {
		return x.Labels
	}
	return nil
}

func (x *ServerAccess) GetLogins() []string {
	if x != nil {
		return x.Logins
	}
	return nil
}

// WindowsDesktopAccess are access related fields for windows desktop resource.
type WindowsDesktopAccess struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// labels define access to windows desktops.
	Labels []*v1.Label `protobuf:"bytes,1,rep,name=labels,proto3" json:"labels,omitempty"`
	// logins is a list of desktop login names.
	Logins        []string `protobuf:"bytes,2,rep,name=logins,proto3" json:"logins,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WindowsDesktopAccess) Reset() {
	*x = WindowsDesktopAccess{}
	mi := &file_teleport_accesslisttemplate_v1_accesslisttemplate_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WindowsDesktopAccess) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WindowsDesktopAccess) ProtoMessage() {}

func (x *WindowsDesktopAccess) ProtoReflect() protoreflect.Message {
	mi := &file_teleport_accesslisttemplate_v1_accesslisttemplate_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WindowsDesktopAccess.ProtoReflect.Descriptor instead.
func (*WindowsDesktopAccess) Descriptor() ([]byte, []int) {
	return file_teleport_accesslisttemplate_v1_accesslisttemplate_proto_rawDescGZIP(), []int{8}
}

func (x *WindowsDesktopAccess) GetLabels() []*v1.Label {
	if x != nil {
		return x.Labels
	}
	return nil
}

func (x *WindowsDesktopAccess) GetLogins() []string {
	if x != nil {
		return x.Logins
	}
	return nil
}

var File_teleport_accesslisttemplate_v1_accesslisttemplate_proto protoreflect.FileDescriptor

const file_teleport_accesslisttemplate_v1_accesslisttemplate_proto_rawDesc = "" +
	"\n" +
	"7teleport/accesslisttemplate/v1/accesslisttemplate.proto\x12\x1eteleport.accesslisttemplate.v1\x1a\x14gogoproto/gogo.proto\x1a\x1dteleport/label/v1/label.proto\x1a!teleport/legacy/types/types.proto\"Z\n" +
	"\x10TemplateLongTerm\x12F\n" +
	"\x05allow\x18\x01 \x01(\v20.teleport.accesslisttemplate.v1.AccessConditionsR\x05allow\"[\n" +
	"\x11TemplateShortTerm\x12F\n" +
	"\x05allow\x18\x01 \x01(\v20.teleport.accesslisttemplate.v1.AccessConditionsR\x05allow\"\xfa\x03\n" +
	"\x10AccessConditions\x12S\n" +
	"\vapplication\x18\x01 \x01(\v21.teleport.accesslisttemplate.v1.ApplicationAccessR\vapplication\x12J\n" +
	"\bdatabase\x18\x02 \x01(\v2..teleport.accesslisttemplate.v1.DatabaseAccessR\bdatabase\x12N\n" +
	"\n" +
	"git_server\x18\x03 \x01(\v2/.teleport.accesslisttemplate.v1.GitServerAccessR\tgitServer\x12P\n" +
	"\n" +
	"kubernetes\x18\x04 \x01(\v20.teleport.accesslisttemplate.v1.KubernetesAccessR\n" +
	"kubernetes\x12D\n" +
	"\x06server\x18\x05 \x01(\v2,.teleport.accesslisttemplate.v1.ServerAccessR\x06server\x12]\n" +
	"\x0fwindows_desktop\x18\x06 \x01(\v24.teleport.accesslisttemplate.v1.WindowsDesktopAccessR\x0ewindowsDesktop\"\xef\x01\n" +
	"\x11ApplicationAccess\x120\n" +
	"\x06labels\x18\x01 \x03(\v2\x18.teleport.label.v1.LabelR\x06labels\x12\"\n" +
	"\raws_role_arns\x18\x02 \x03(\tR\vawsRoleArns\x12)\n" +
	"\x10azure_identities\x18\x03 \x03(\tR\x0fazureIdentities\x120\n" +
	"\x14gcp_service_accounts\x18\x04 \x03(\tR\x12gcpServiceAccounts\x12'\n" +
	"\x03mcp\x18\x05 \x01(\v2\x15.types.MCPPermissionsR\x03mcp\"n\n" +
	"\x0eDatabaseAccess\x120\n" +
	"\x06labels\x18\x01 \x03(\v2\x18.teleport.label.v1.LabelR\x06labels\x12\x14\n" +
	"\x05names\x18\x02 \x03(\tR\x05names\x12\x14\n" +
	"\x05users\x18\x03 \x03(\tR\x05users\"L\n" +
	"\x0fGitServerAccess\x129\n" +
	"\vpermissions\x18\x01 \x03(\v2\x17.types.GitHubPermissionR\vpermissions\"\xab\x01\n" +
	"\x10KubernetesAccess\x120\n" +
	"\x06labels\x18\x01 \x03(\v2\x18.teleport.label.v1.LabelR\x06labels\x12\x16\n" +
	"\x06groups\x18\x02 \x03(\tR\x06groups\x12\x14\n" +
	"\x05users\x18\x03 \x03(\tR\x05users\x127\n" +
	"\tresources\x18\x04 \x03(\v2\x19.types.KubernetesResourceR\tresources\"X\n" +
	"\fServerAccess\x120\n" +
	"\x06labels\x18\x01 \x03(\v2\x18.teleport.label.v1.LabelR\x06labels\x12\x16\n" +
	"\x06logins\x18\x02 \x03(\tR\x06logins\"`\n" +
	"\x14WindowsDesktopAccess\x120\n" +
	"\x06labels\x18\x01 \x03(\v2\x18.teleport.label.v1.LabelR\x06labels\x12\x16\n" +
	"\x06logins\x18\x02 \x03(\tR\x06loginsBt\xc8\xe1\x1e\x00\xc8\xe2\x1e\x01\xd0\xe2\x1e\x01Zfgithub.com/gravitational/teleport/api/gen/proto/go/teleport/accesslisttemplate/v1;accesslisttemplatev1b\x06proto3"

var (
	file_teleport_accesslisttemplate_v1_accesslisttemplate_proto_rawDescOnce sync.Once
	file_teleport_accesslisttemplate_v1_accesslisttemplate_proto_rawDescData []byte
)

func file_teleport_accesslisttemplate_v1_accesslisttemplate_proto_rawDescGZIP() []byte {
	file_teleport_accesslisttemplate_v1_accesslisttemplate_proto_rawDescOnce.Do(func() {
		file_teleport_accesslisttemplate_v1_accesslisttemplate_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_teleport_accesslisttemplate_v1_accesslisttemplate_proto_rawDesc), len(file_teleport_accesslisttemplate_v1_accesslisttemplate_proto_rawDesc)))
	})
	return file_teleport_accesslisttemplate_v1_accesslisttemplate_proto_rawDescData
}

var file_teleport_accesslisttemplate_v1_accesslisttemplate_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_teleport_accesslisttemplate_v1_accesslisttemplate_proto_goTypes = []any{
	(*TemplateLongTerm)(nil),         // 0: teleport.accesslisttemplate.v1.TemplateLongTerm
	(*TemplateShortTerm)(nil),        // 1: teleport.accesslisttemplate.v1.TemplateShortTerm
	(*AccessConditions)(nil),         // 2: teleport.accesslisttemplate.v1.AccessConditions
	(*ApplicationAccess)(nil),        // 3: teleport.accesslisttemplate.v1.ApplicationAccess
	(*DatabaseAccess)(nil),           // 4: teleport.accesslisttemplate.v1.DatabaseAccess
	(*GitServerAccess)(nil),          // 5: teleport.accesslisttemplate.v1.GitServerAccess
	(*KubernetesAccess)(nil),         // 6: teleport.accesslisttemplate.v1.KubernetesAccess
	(*ServerAccess)(nil),             // 7: teleport.accesslisttemplate.v1.ServerAccess
	(*WindowsDesktopAccess)(nil),     // 8: teleport.accesslisttemplate.v1.WindowsDesktopAccess
	(*v1.Label)(nil),                 // 9: teleport.label.v1.Label
	(*types.MCPPermissions)(nil),     // 10: types.MCPPermissions
	(*types.GitHubPermission)(nil),   // 11: types.GitHubPermission
	(*types.KubernetesResource)(nil), // 12: types.KubernetesResource
}
var file_teleport_accesslisttemplate_v1_accesslisttemplate_proto_depIdxs = []int32{
	2,  // 0: teleport.accesslisttemplate.v1.TemplateLongTerm.allow:type_name -> teleport.accesslisttemplate.v1.AccessConditions
	2,  // 1: teleport.accesslisttemplate.v1.TemplateShortTerm.allow:type_name -> teleport.accesslisttemplate.v1.AccessConditions
	3,  // 2: teleport.accesslisttemplate.v1.AccessConditions.application:type_name -> teleport.accesslisttemplate.v1.ApplicationAccess
	4,  // 3: teleport.accesslisttemplate.v1.AccessConditions.database:type_name -> teleport.accesslisttemplate.v1.DatabaseAccess
	5,  // 4: teleport.accesslisttemplate.v1.AccessConditions.git_server:type_name -> teleport.accesslisttemplate.v1.GitServerAccess
	6,  // 5: teleport.accesslisttemplate.v1.AccessConditions.kubernetes:type_name -> teleport.accesslisttemplate.v1.KubernetesAccess
	7,  // 6: teleport.accesslisttemplate.v1.AccessConditions.server:type_name -> teleport.accesslisttemplate.v1.ServerAccess
	8,  // 7: teleport.accesslisttemplate.v1.AccessConditions.windows_desktop:type_name -> teleport.accesslisttemplate.v1.WindowsDesktopAccess
	9,  // 8: teleport.accesslisttemplate.v1.ApplicationAccess.labels:type_name -> teleport.label.v1.Label
	10, // 9: teleport.accesslisttemplate.v1.ApplicationAccess.mcp:type_name -> types.MCPPermissions
	9,  // 10: teleport.accesslisttemplate.v1.DatabaseAccess.labels:type_name -> teleport.label.v1.Label
	11, // 11: teleport.accesslisttemplate.v1.GitServerAccess.permissions:type_name -> types.GitHubPermission
	9,  // 12: teleport.accesslisttemplate.v1.KubernetesAccess.labels:type_name -> teleport.label.v1.Label
	12, // 13: teleport.accesslisttemplate.v1.KubernetesAccess.resources:type_name -> types.KubernetesResource
	9,  // 14: teleport.accesslisttemplate.v1.ServerAccess.labels:type_name -> teleport.label.v1.Label
	9,  // 15: teleport.accesslisttemplate.v1.WindowsDesktopAccess.labels:type_name -> teleport.label.v1.Label
	16, // [16:16] is the sub-list for method output_type
	16, // [16:16] is the sub-list for method input_type
	16, // [16:16] is the sub-list for extension type_name
	16, // [16:16] is the sub-list for extension extendee
	0,  // [0:16] is the sub-list for field type_name
}

func init() { file_teleport_accesslisttemplate_v1_accesslisttemplate_proto_init() }
func file_teleport_accesslisttemplate_v1_accesslisttemplate_proto_init() {
	if File_teleport_accesslisttemplate_v1_accesslisttemplate_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_teleport_accesslisttemplate_v1_accesslisttemplate_proto_rawDesc), len(file_teleport_accesslisttemplate_v1_accesslisttemplate_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_teleport_accesslisttemplate_v1_accesslisttemplate_proto_goTypes,
		DependencyIndexes: file_teleport_accesslisttemplate_v1_accesslisttemplate_proto_depIdxs,
		MessageInfos:      file_teleport_accesslisttemplate_v1_accesslisttemplate_proto_msgTypes,
	}.Build()
	File_teleport_accesslisttemplate_v1_accesslisttemplate_proto = out.File
	file_teleport_accesslisttemplate_v1_accesslisttemplate_proto_goTypes = nil
	file_teleport_accesslisttemplate_v1_accesslisttemplate_proto_depIdxs = nil
}
