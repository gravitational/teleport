// Copyright 2023 Gravitational, Inc
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        (unknown)
// source: teleport/externalauditstorage/v1/externalauditstorage_service.proto

package externalauditstoragev1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// GetDraftExternalAuditStorageRequest is a request to get the draft external
// audit storage configuration.
type GetDraftExternalAuditStorageRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetDraftExternalAuditStorageRequest) Reset() {
	*x = GetDraftExternalAuditStorageRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_teleport_externalauditstorage_v1_externalauditstorage_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDraftExternalAuditStorageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDraftExternalAuditStorageRequest) ProtoMessage() {}

func (x *GetDraftExternalAuditStorageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_teleport_externalauditstorage_v1_externalauditstorage_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDraftExternalAuditStorageRequest.ProtoReflect.Descriptor instead.
func (*GetDraftExternalAuditStorageRequest) Descriptor() ([]byte, []int) {
	return file_teleport_externalauditstorage_v1_externalauditstorage_service_proto_rawDescGZIP(), []int{0}
}

// GetDraftExternalAuditStorageResponse is a response to getting the draft
// external audit storage configuration.
type GetDraftExternalAuditStorageResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// ExternalAuditStorage is the current draft ExternalAuditStorage.
	ExternalAuditStorage *ExternalAuditStorage `protobuf:"bytes,1,opt,name=external_audit_storage,json=externalAuditStorage,proto3" json:"external_audit_storage,omitempty"`
}

func (x *GetDraftExternalAuditStorageResponse) Reset() {
	*x = GetDraftExternalAuditStorageResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_teleport_externalauditstorage_v1_externalauditstorage_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDraftExternalAuditStorageResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDraftExternalAuditStorageResponse) ProtoMessage() {}

func (x *GetDraftExternalAuditStorageResponse) ProtoReflect() protoreflect.Message {
	mi := &file_teleport_externalauditstorage_v1_externalauditstorage_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDraftExternalAuditStorageResponse.ProtoReflect.Descriptor instead.
func (*GetDraftExternalAuditStorageResponse) Descriptor() ([]byte, []int) {
	return file_teleport_externalauditstorage_v1_externalauditstorage_service_proto_rawDescGZIP(), []int{1}
}

func (x *GetDraftExternalAuditStorageResponse) GetExternalAuditStorage() *ExternalAuditStorage {
	if x != nil {
		return x.ExternalAuditStorage
	}
	return nil
}

// CreateDraftExternalAuditStorageRequest is a request to create the provided
// draft external audit storage configuration if one does not already exist.
type CreateDraftExternalAuditStorageRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// ExternalAuditStorage is the ExternalAuditStorage to be created.
	ExternalAuditStorage *ExternalAuditStorage `protobuf:"bytes,1,opt,name=external_audit_storage,json=externalAuditStorage,proto3" json:"external_audit_storage,omitempty"`
}

func (x *CreateDraftExternalAuditStorageRequest) Reset() {
	*x = CreateDraftExternalAuditStorageRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_teleport_externalauditstorage_v1_externalauditstorage_service_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateDraftExternalAuditStorageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateDraftExternalAuditStorageRequest) ProtoMessage() {}

func (x *CreateDraftExternalAuditStorageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_teleport_externalauditstorage_v1_externalauditstorage_service_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateDraftExternalAuditStorageRequest.ProtoReflect.Descriptor instead.
func (*CreateDraftExternalAuditStorageRequest) Descriptor() ([]byte, []int) {
	return file_teleport_externalauditstorage_v1_externalauditstorage_service_proto_rawDescGZIP(), []int{2}
}

func (x *CreateDraftExternalAuditStorageRequest) GetExternalAuditStorage() *ExternalAuditStorage {
	if x != nil {
		return x.ExternalAuditStorage
	}
	return nil
}

// CreateDraftExternalAuditStorageResponse is a response to creating the draft
// external audit storage configuration.
type CreateDraftExternalAuditStorageResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// ExternalAuditStorage is the ExternalAuditStorage that was created.
	ExternalAuditStorage *ExternalAuditStorage `protobuf:"bytes,1,opt,name=external_audit_storage,json=externalAuditStorage,proto3" json:"external_audit_storage,omitempty"`
}

func (x *CreateDraftExternalAuditStorageResponse) Reset() {
	*x = CreateDraftExternalAuditStorageResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_teleport_externalauditstorage_v1_externalauditstorage_service_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateDraftExternalAuditStorageResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateDraftExternalAuditStorageResponse) ProtoMessage() {}

func (x *CreateDraftExternalAuditStorageResponse) ProtoReflect() protoreflect.Message {
	mi := &file_teleport_externalauditstorage_v1_externalauditstorage_service_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateDraftExternalAuditStorageResponse.ProtoReflect.Descriptor instead.
func (*CreateDraftExternalAuditStorageResponse) Descriptor() ([]byte, []int) {
	return file_teleport_externalauditstorage_v1_externalauditstorage_service_proto_rawDescGZIP(), []int{3}
}

func (x *CreateDraftExternalAuditStorageResponse) GetExternalAuditStorage() *ExternalAuditStorage {
	if x != nil {
		return x.ExternalAuditStorage
	}
	return nil
}

// UpsertDraftExternalAuditStorageRequest is a request to upsert the provided
// draft external audit storage configuration.
type UpsertDraftExternalAuditStorageRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// ExternalAuditStorage is the ExternalAuditStorage to be upserted.
	ExternalAuditStorage *ExternalAuditStorage `protobuf:"bytes,1,opt,name=external_audit_storage,json=externalAuditStorage,proto3" json:"external_audit_storage,omitempty"`
}

func (x *UpsertDraftExternalAuditStorageRequest) Reset() {
	*x = UpsertDraftExternalAuditStorageRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_teleport_externalauditstorage_v1_externalauditstorage_service_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpsertDraftExternalAuditStorageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpsertDraftExternalAuditStorageRequest) ProtoMessage() {}

func (x *UpsertDraftExternalAuditStorageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_teleport_externalauditstorage_v1_externalauditstorage_service_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpsertDraftExternalAuditStorageRequest.ProtoReflect.Descriptor instead.
func (*UpsertDraftExternalAuditStorageRequest) Descriptor() ([]byte, []int) {
	return file_teleport_externalauditstorage_v1_externalauditstorage_service_proto_rawDescGZIP(), []int{4}
}

func (x *UpsertDraftExternalAuditStorageRequest) GetExternalAuditStorage() *ExternalAuditStorage {
	if x != nil {
		return x.ExternalAuditStorage
	}
	return nil
}

// UpsertDraftExternalAuditStorageResponse is a response to upserting the draft
// external audit storage configuration.
type UpsertDraftExternalAuditStorageResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// ExternalAuditStorage is the ExternalAuditStorage that was upserted.
	ExternalAuditStorage *ExternalAuditStorage `protobuf:"bytes,1,opt,name=external_audit_storage,json=externalAuditStorage,proto3" json:"external_audit_storage,omitempty"`
}

func (x *UpsertDraftExternalAuditStorageResponse) Reset() {
	*x = UpsertDraftExternalAuditStorageResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_teleport_externalauditstorage_v1_externalauditstorage_service_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpsertDraftExternalAuditStorageResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpsertDraftExternalAuditStorageResponse) ProtoMessage() {}

func (x *UpsertDraftExternalAuditStorageResponse) ProtoReflect() protoreflect.Message {
	mi := &file_teleport_externalauditstorage_v1_externalauditstorage_service_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpsertDraftExternalAuditStorageResponse.ProtoReflect.Descriptor instead.
func (*UpsertDraftExternalAuditStorageResponse) Descriptor() ([]byte, []int) {
	return file_teleport_externalauditstorage_v1_externalauditstorage_service_proto_rawDescGZIP(), []int{5}
}

func (x *UpsertDraftExternalAuditStorageResponse) GetExternalAuditStorage() *ExternalAuditStorage {
	if x != nil {
		return x.ExternalAuditStorage
	}
	return nil
}

// DeleteDraftExternalAuditStorageRequest is a request to delete a draft External
// Audit Storage configuration.
type DeleteDraftExternalAuditStorageRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteDraftExternalAuditStorageRequest) Reset() {
	*x = DeleteDraftExternalAuditStorageRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_teleport_externalauditstorage_v1_externalauditstorage_service_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteDraftExternalAuditStorageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteDraftExternalAuditStorageRequest) ProtoMessage() {}

func (x *DeleteDraftExternalAuditStorageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_teleport_externalauditstorage_v1_externalauditstorage_service_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteDraftExternalAuditStorageRequest.ProtoReflect.Descriptor instead.
func (*DeleteDraftExternalAuditStorageRequest) Descriptor() ([]byte, []int) {
	return file_teleport_externalauditstorage_v1_externalauditstorage_service_proto_rawDescGZIP(), []int{6}
}

// PromoteToClusterExternalAuditStorageRequest is a request to promote the current
// draft to cluster external audit storage.
type PromoteToClusterExternalAuditStorageRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *PromoteToClusterExternalAuditStorageRequest) Reset() {
	*x = PromoteToClusterExternalAuditStorageRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_teleport_externalauditstorage_v1_externalauditstorage_service_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PromoteToClusterExternalAuditStorageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PromoteToClusterExternalAuditStorageRequest) ProtoMessage() {}

func (x *PromoteToClusterExternalAuditStorageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_teleport_externalauditstorage_v1_externalauditstorage_service_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PromoteToClusterExternalAuditStorageRequest.ProtoReflect.Descriptor instead.
func (*PromoteToClusterExternalAuditStorageRequest) Descriptor() ([]byte, []int) {
	return file_teleport_externalauditstorage_v1_externalauditstorage_service_proto_rawDescGZIP(), []int{7}
}

// PromoteToClusterExternalAuditStorageResponse is a response of promote the
// current draft to cluster external audit storage.
type PromoteToClusterExternalAuditStorageResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// ClusterExternalAuditStorage is the ExternalAuditStorage will be used in cluster.
	ClusterExternalAuditStorage *ExternalAuditStorage `protobuf:"bytes,1,opt,name=cluster_external_audit_storage,json=clusterExternalAuditStorage,proto3" json:"cluster_external_audit_storage,omitempty"`
}

func (x *PromoteToClusterExternalAuditStorageResponse) Reset() {
	*x = PromoteToClusterExternalAuditStorageResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_teleport_externalauditstorage_v1_externalauditstorage_service_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PromoteToClusterExternalAuditStorageResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PromoteToClusterExternalAuditStorageResponse) ProtoMessage() {}

func (x *PromoteToClusterExternalAuditStorageResponse) ProtoReflect() protoreflect.Message {
	mi := &file_teleport_externalauditstorage_v1_externalauditstorage_service_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PromoteToClusterExternalAuditStorageResponse.ProtoReflect.Descriptor instead.
func (*PromoteToClusterExternalAuditStorageResponse) Descriptor() ([]byte, []int) {
	return file_teleport_externalauditstorage_v1_externalauditstorage_service_proto_rawDescGZIP(), []int{8}
}

func (x *PromoteToClusterExternalAuditStorageResponse) GetClusterExternalAuditStorage() *ExternalAuditStorage {
	if x != nil {
		return x.ClusterExternalAuditStorage
	}
	return nil
}

// GetClusterExternalAuditStorageRequest is a request to get an cluster External
// Audit Storage configuration.
type GetClusterExternalAuditStorageRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetClusterExternalAuditStorageRequest) Reset() {
	*x = GetClusterExternalAuditStorageRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_teleport_externalauditstorage_v1_externalauditstorage_service_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetClusterExternalAuditStorageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetClusterExternalAuditStorageRequest) ProtoMessage() {}

func (x *GetClusterExternalAuditStorageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_teleport_externalauditstorage_v1_externalauditstorage_service_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetClusterExternalAuditStorageRequest.ProtoReflect.Descriptor instead.
func (*GetClusterExternalAuditStorageRequest) Descriptor() ([]byte, []int) {
	return file_teleport_externalauditstorage_v1_externalauditstorage_service_proto_rawDescGZIP(), []int{9}
}

// GetClusterExternalAuditStorageResponse is a response of getting an cluster
// external audit storage configuration.
type GetClusterExternalAuditStorageResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// ClusterExternalAuditStorage contains name of external audit storage.
	ClusterExternalAuditStorage *ExternalAuditStorage `protobuf:"bytes,1,opt,name=cluster_external_audit_storage,json=clusterExternalAuditStorage,proto3" json:"cluster_external_audit_storage,omitempty"`
}

func (x *GetClusterExternalAuditStorageResponse) Reset() {
	*x = GetClusterExternalAuditStorageResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_teleport_externalauditstorage_v1_externalauditstorage_service_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetClusterExternalAuditStorageResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetClusterExternalAuditStorageResponse) ProtoMessage() {}

func (x *GetClusterExternalAuditStorageResponse) ProtoReflect() protoreflect.Message {
	mi := &file_teleport_externalauditstorage_v1_externalauditstorage_service_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetClusterExternalAuditStorageResponse.ProtoReflect.Descriptor instead.
func (*GetClusterExternalAuditStorageResponse) Descriptor() ([]byte, []int) {
	return file_teleport_externalauditstorage_v1_externalauditstorage_service_proto_rawDescGZIP(), []int{10}
}

func (x *GetClusterExternalAuditStorageResponse) GetClusterExternalAuditStorage() *ExternalAuditStorage {
	if x != nil {
		return x.ClusterExternalAuditStorage
	}
	return nil
}

// DisableClusterExternalAuditStorageRequest is a request for disabling cluster
// external audit storage.
type DisableClusterExternalAuditStorageRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DisableClusterExternalAuditStorageRequest) Reset() {
	*x = DisableClusterExternalAuditStorageRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_teleport_externalauditstorage_v1_externalauditstorage_service_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DisableClusterExternalAuditStorageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DisableClusterExternalAuditStorageRequest) ProtoMessage() {}

func (x *DisableClusterExternalAuditStorageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_teleport_externalauditstorage_v1_externalauditstorage_service_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DisableClusterExternalAuditStorageRequest.ProtoReflect.Descriptor instead.
func (*DisableClusterExternalAuditStorageRequest) Descriptor() ([]byte, []int) {
	return file_teleport_externalauditstorage_v1_externalauditstorage_service_proto_rawDescGZIP(), []int{11}
}

// GenerateDraftExternalAuditStorageRequest is a request for
// GenerateDraftExternalAuditStorage.
type GenerateDraftExternalAuditStorageRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// IntegrationName is name of existing AWS OIDC integration used to get AWS
	// credentials.
	IntegrationName string `protobuf:"bytes,1,opt,name=integration_name,json=integrationName,proto3" json:"integration_name,omitempty"`
	// Region is the AWS region where infrastructure is hosted.
	Region string `protobuf:"bytes,2,opt,name=region,proto3" json:"region,omitempty"`
}

func (x *GenerateDraftExternalAuditStorageRequest) Reset() {
	*x = GenerateDraftExternalAuditStorageRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_teleport_externalauditstorage_v1_externalauditstorage_service_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GenerateDraftExternalAuditStorageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenerateDraftExternalAuditStorageRequest) ProtoMessage() {}

func (x *GenerateDraftExternalAuditStorageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_teleport_externalauditstorage_v1_externalauditstorage_service_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenerateDraftExternalAuditStorageRequest.ProtoReflect.Descriptor instead.
func (*GenerateDraftExternalAuditStorageRequest) Descriptor() ([]byte, []int) {
	return file_teleport_externalauditstorage_v1_externalauditstorage_service_proto_rawDescGZIP(), []int{12}
}

func (x *GenerateDraftExternalAuditStorageRequest) GetIntegrationName() string {
	if x != nil {
		return x.IntegrationName
	}
	return ""
}

func (x *GenerateDraftExternalAuditStorageRequest) GetRegion() string {
	if x != nil {
		return x.Region
	}
	return ""
}

// GenerateDraftExternalAuditStorageResponse is a response for
// GenerateDraftExternalAuditStorage.
type GenerateDraftExternalAuditStorageResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// ExternalAuditStorage is the generated ExternalAuditStorage that has been set as
	// the current draft.
	ExternalAuditStorage *ExternalAuditStorage `protobuf:"bytes,1,opt,name=external_audit_storage,json=externalAuditStorage,proto3" json:"external_audit_storage,omitempty"`
}

func (x *GenerateDraftExternalAuditStorageResponse) Reset() {
	*x = GenerateDraftExternalAuditStorageResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_teleport_externalauditstorage_v1_externalauditstorage_service_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GenerateDraftExternalAuditStorageResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenerateDraftExternalAuditStorageResponse) ProtoMessage() {}

func (x *GenerateDraftExternalAuditStorageResponse) ProtoReflect() protoreflect.Message {
	mi := &file_teleport_externalauditstorage_v1_externalauditstorage_service_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenerateDraftExternalAuditStorageResponse.ProtoReflect.Descriptor instead.
func (*GenerateDraftExternalAuditStorageResponse) Descriptor() ([]byte, []int) {
	return file_teleport_externalauditstorage_v1_externalauditstorage_service_proto_rawDescGZIP(), []int{13}
}

func (x *GenerateDraftExternalAuditStorageResponse) GetExternalAuditStorage() *ExternalAuditStorage {
	if x != nil {
		return x.ExternalAuditStorage
	}
	return nil
}

// TestDraftExternalAuditStorageBucketsRequest is a request to test the connection of
// the current draft external audit storage configuration buckets.
type TestDraftExternalAuditStorageBucketsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *TestDraftExternalAuditStorageBucketsRequest) Reset() {
	*x = TestDraftExternalAuditStorageBucketsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_teleport_externalauditstorage_v1_externalauditstorage_service_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TestDraftExternalAuditStorageBucketsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TestDraftExternalAuditStorageBucketsRequest) ProtoMessage() {}

func (x *TestDraftExternalAuditStorageBucketsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_teleport_externalauditstorage_v1_externalauditstorage_service_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TestDraftExternalAuditStorageBucketsRequest.ProtoReflect.Descriptor instead.
func (*TestDraftExternalAuditStorageBucketsRequest) Descriptor() ([]byte, []int) {
	return file_teleport_externalauditstorage_v1_externalauditstorage_service_proto_rawDescGZIP(), []int{14}
}

// TestDraftExternalAuditStorageBucketsResponse is a response from testing the connection
// of the current draft external audit storage configuration buckets.
type TestDraftExternalAuditStorageBucketsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *TestDraftExternalAuditStorageBucketsResponse) Reset() {
	*x = TestDraftExternalAuditStorageBucketsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_teleport_externalauditstorage_v1_externalauditstorage_service_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TestDraftExternalAuditStorageBucketsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TestDraftExternalAuditStorageBucketsResponse) ProtoMessage() {}

func (x *TestDraftExternalAuditStorageBucketsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_teleport_externalauditstorage_v1_externalauditstorage_service_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TestDraftExternalAuditStorageBucketsResponse.ProtoReflect.Descriptor instead.
func (*TestDraftExternalAuditStorageBucketsResponse) Descriptor() ([]byte, []int) {
	return file_teleport_externalauditstorage_v1_externalauditstorage_service_proto_rawDescGZIP(), []int{15}
}

// TestDraftExternalAuditStorageGlueRequest is a request to test the connection of
// the current draft external audit storage configuration glue table.
type TestDraftExternalAuditStorageGlueRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *TestDraftExternalAuditStorageGlueRequest) Reset() {
	*x = TestDraftExternalAuditStorageGlueRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_teleport_externalauditstorage_v1_externalauditstorage_service_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TestDraftExternalAuditStorageGlueRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TestDraftExternalAuditStorageGlueRequest) ProtoMessage() {}

func (x *TestDraftExternalAuditStorageGlueRequest) ProtoReflect() protoreflect.Message {
	mi := &file_teleport_externalauditstorage_v1_externalauditstorage_service_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TestDraftExternalAuditStorageGlueRequest.ProtoReflect.Descriptor instead.
func (*TestDraftExternalAuditStorageGlueRequest) Descriptor() ([]byte, []int) {
	return file_teleport_externalauditstorage_v1_externalauditstorage_service_proto_rawDescGZIP(), []int{16}
}

// TestDraftExternalAuditStorageGlueResponse is a response from testing the connection
// of the current draft external audit storage configuration glue table.
type TestDraftExternalAuditStorageGlueResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *TestDraftExternalAuditStorageGlueResponse) Reset() {
	*x = TestDraftExternalAuditStorageGlueResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_teleport_externalauditstorage_v1_externalauditstorage_service_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TestDraftExternalAuditStorageGlueResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TestDraftExternalAuditStorageGlueResponse) ProtoMessage() {}

func (x *TestDraftExternalAuditStorageGlueResponse) ProtoReflect() protoreflect.Message {
	mi := &file_teleport_externalauditstorage_v1_externalauditstorage_service_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TestDraftExternalAuditStorageGlueResponse.ProtoReflect.Descriptor instead.
func (*TestDraftExternalAuditStorageGlueResponse) Descriptor() ([]byte, []int) {
	return file_teleport_externalauditstorage_v1_externalauditstorage_service_proto_rawDescGZIP(), []int{17}
}

// TestDraftExternalAuditStorageAthenaRequest is a request to test the connection of
// the current draft external audit storage configuration athena.
type TestDraftExternalAuditStorageAthenaRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *TestDraftExternalAuditStorageAthenaRequest) Reset() {
	*x = TestDraftExternalAuditStorageAthenaRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_teleport_externalauditstorage_v1_externalauditstorage_service_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TestDraftExternalAuditStorageAthenaRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TestDraftExternalAuditStorageAthenaRequest) ProtoMessage() {}

func (x *TestDraftExternalAuditStorageAthenaRequest) ProtoReflect() protoreflect.Message {
	mi := &file_teleport_externalauditstorage_v1_externalauditstorage_service_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TestDraftExternalAuditStorageAthenaRequest.ProtoReflect.Descriptor instead.
func (*TestDraftExternalAuditStorageAthenaRequest) Descriptor() ([]byte, []int) {
	return file_teleport_externalauditstorage_v1_externalauditstorage_service_proto_rawDescGZIP(), []int{18}
}

// TestDraftExternalAuditStorageAthenaResponse is a response from testing the connection
// of the current draft external audit storage configuration athena.
type TestDraftExternalAuditStorageAthenaResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *TestDraftExternalAuditStorageAthenaResponse) Reset() {
	*x = TestDraftExternalAuditStorageAthenaResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_teleport_externalauditstorage_v1_externalauditstorage_service_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TestDraftExternalAuditStorageAthenaResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TestDraftExternalAuditStorageAthenaResponse) ProtoMessage() {}

func (x *TestDraftExternalAuditStorageAthenaResponse) ProtoReflect() protoreflect.Message {
	mi := &file_teleport_externalauditstorage_v1_externalauditstorage_service_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TestDraftExternalAuditStorageAthenaResponse.ProtoReflect.Descriptor instead.
func (*TestDraftExternalAuditStorageAthenaResponse) Descriptor() ([]byte, []int) {
	return file_teleport_externalauditstorage_v1_externalauditstorage_service_proto_rawDescGZIP(), []int{19}
}

var File_teleport_externalauditstorage_v1_externalauditstorage_service_proto protoreflect.FileDescriptor

var file_teleport_externalauditstorage_v1_externalauditstorage_service_proto_rawDesc = []byte{
	0x0a, 0x43, 0x74, 0x65, 0x6c, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x2f, 0x65, 0x78, 0x74, 0x65, 0x72,
	0x6e, 0x61, 0x6c, 0x61, 0x75, 0x64, 0x69, 0x74, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2f,
	0x76, 0x31, 0x2f, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x61, 0x75, 0x64, 0x69, 0x74,
	0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x20, 0x74, 0x65, 0x6c, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x2e,
	0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x61, 0x75, 0x64, 0x69, 0x74, 0x73, 0x74, 0x6f,
	0x72, 0x61, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x3b, 0x74, 0x65, 0x6c, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x2f, 0x65,
	0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x61, 0x75, 0x64, 0x69, 0x74, 0x73, 0x74, 0x6f, 0x72,
	0x61, 0x67, 0x65, 0x2f, 0x76, 0x31, 0x2f, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x61,
	0x75, 0x64, 0x69, 0x74, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x22, 0x25, 0x0a, 0x23, 0x47, 0x65, 0x74, 0x44, 0x72, 0x61, 0x66, 0x74, 0x45, 0x78, 0x74,
	0x65, 0x72, 0x6e, 0x61, 0x6c, 0x41, 0x75, 0x64, 0x69, 0x74, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x94, 0x01, 0x0a, 0x24, 0x47, 0x65, 0x74,
	0x44, 0x72, 0x61, 0x66, 0x74, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x41, 0x75, 0x64,
	0x69, 0x74, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x6c, 0x0a, 0x16, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x5f, 0x61, 0x75,
	0x64, 0x69, 0x74, 0x5f, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x36, 0x2e, 0x74, 0x65, 0x6c, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x65, 0x78, 0x74,
	0x65, 0x72, 0x6e, 0x61, 0x6c, 0x61, 0x75, 0x64, 0x69, 0x74, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67,
	0x65, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x41, 0x75, 0x64,
	0x69, 0x74, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x52, 0x14, 0x65, 0x78, 0x74, 0x65, 0x72,
	0x6e, 0x61, 0x6c, 0x41, 0x75, 0x64, 0x69, 0x74, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x22,
	0x96, 0x01, 0x0a, 0x26, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x72, 0x61, 0x66, 0x74, 0x45,
	0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x41, 0x75, 0x64, 0x69, 0x74, 0x53, 0x74, 0x6f, 0x72,
	0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x6c, 0x0a, 0x16, 0x65, 0x78,
	0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x5f, 0x61, 0x75, 0x64, 0x69, 0x74, 0x5f, 0x73, 0x74, 0x6f,
	0x72, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x36, 0x2e, 0x74, 0x65, 0x6c,
	0x65, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x61, 0x75,
	0x64, 0x69, 0x74, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x78,
	0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x41, 0x75, 0x64, 0x69, 0x74, 0x53, 0x74, 0x6f, 0x72, 0x61,
	0x67, 0x65, 0x52, 0x14, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x41, 0x75, 0x64, 0x69,
	0x74, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x22, 0x97, 0x01, 0x0a, 0x27, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x44, 0x72, 0x61, 0x66, 0x74, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c,
	0x41, 0x75, 0x64, 0x69, 0x74, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x6c, 0x0a, 0x16, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c,
	0x5f, 0x61, 0x75, 0x64, 0x69, 0x74, 0x5f, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x36, 0x2e, 0x74, 0x65, 0x6c, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x2e,
	0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x61, 0x75, 0x64, 0x69, 0x74, 0x73, 0x74, 0x6f,
	0x72, 0x61, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c,
	0x41, 0x75, 0x64, 0x69, 0x74, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x52, 0x14, 0x65, 0x78,
	0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x41, 0x75, 0x64, 0x69, 0x74, 0x53, 0x74, 0x6f, 0x72, 0x61,
	0x67, 0x65, 0x22, 0x96, 0x01, 0x0a, 0x26, 0x55, 0x70, 0x73, 0x65, 0x72, 0x74, 0x44, 0x72, 0x61,
	0x66, 0x74, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x41, 0x75, 0x64, 0x69, 0x74, 0x53,
	0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x6c, 0x0a,
	0x16, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x5f, 0x61, 0x75, 0x64, 0x69, 0x74, 0x5f,
	0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x36, 0x2e,
	0x74, 0x65, 0x6c, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61,
	0x6c, 0x61, 0x75, 0x64, 0x69, 0x74, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x41, 0x75, 0x64, 0x69, 0x74, 0x53, 0x74,
	0x6f, 0x72, 0x61, 0x67, 0x65, 0x52, 0x14, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x41,
	0x75, 0x64, 0x69, 0x74, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x22, 0x97, 0x01, 0x0a, 0x27,
	0x55, 0x70, 0x73, 0x65, 0x72, 0x74, 0x44, 0x72, 0x61, 0x66, 0x74, 0x45, 0x78, 0x74, 0x65, 0x72,
	0x6e, 0x61, 0x6c, 0x41, 0x75, 0x64, 0x69, 0x74, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x6c, 0x0a, 0x16, 0x65, 0x78, 0x74, 0x65, 0x72,
	0x6e, 0x61, 0x6c, 0x5f, 0x61, 0x75, 0x64, 0x69, 0x74, 0x5f, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x36, 0x2e, 0x74, 0x65, 0x6c, 0x65, 0x70, 0x6f,
	0x72, 0x74, 0x2e, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x61, 0x75, 0x64, 0x69, 0x74,
	0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x78, 0x74, 0x65, 0x72,
	0x6e, 0x61, 0x6c, 0x41, 0x75, 0x64, 0x69, 0x74, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x52,
	0x14, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x41, 0x75, 0x64, 0x69, 0x74, 0x53, 0x74,
	0x6f, 0x72, 0x61, 0x67, 0x65, 0x22, 0x28, 0x0a, 0x26, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x44,
	0x72, 0x61, 0x66, 0x74, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x41, 0x75, 0x64, 0x69,
	0x74, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22,
	0x2d, 0x0a, 0x2b, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x65, 0x54, 0x6f, 0x43, 0x6c, 0x75, 0x73,
	0x74, 0x65, 0x72, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x41, 0x75, 0x64, 0x69, 0x74,
	0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0xab,
	0x01, 0x0a, 0x2c, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x65, 0x54, 0x6f, 0x43, 0x6c, 0x75, 0x73,
	0x74, 0x65, 0x72, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x41, 0x75, 0x64, 0x69, 0x74,
	0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x7b, 0x0a, 0x1e, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x65, 0x78, 0x74, 0x65, 0x72,
	0x6e, 0x61, 0x6c, 0x5f, 0x61, 0x75, 0x64, 0x69, 0x74, 0x5f, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x36, 0x2e, 0x74, 0x65, 0x6c, 0x65, 0x70, 0x6f,
	0x72, 0x74, 0x2e, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x61, 0x75, 0x64, 0x69, 0x74,
	0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x78, 0x74, 0x65, 0x72,
	0x6e, 0x61, 0x6c, 0x41, 0x75, 0x64, 0x69, 0x74, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x52,
	0x1b, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c,
	0x41, 0x75, 0x64, 0x69, 0x74, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x22, 0x27, 0x0a, 0x25,
	0x47, 0x65, 0x74, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e,
	0x61, 0x6c, 0x41, 0x75, 0x64, 0x69, 0x74, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0xa5, 0x01, 0x0a, 0x26, 0x47, 0x65, 0x74, 0x43, 0x6c, 0x75,
	0x73, 0x74, 0x65, 0x72, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x41, 0x75, 0x64, 0x69,
	0x74, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x7b, 0x0a, 0x1e, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x65, 0x78, 0x74, 0x65,
	0x72, 0x6e, 0x61, 0x6c, 0x5f, 0x61, 0x75, 0x64, 0x69, 0x74, 0x5f, 0x73, 0x74, 0x6f, 0x72, 0x61,
	0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x36, 0x2e, 0x74, 0x65, 0x6c, 0x65, 0x70,
	0x6f, 0x72, 0x74, 0x2e, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x61, 0x75, 0x64, 0x69,
	0x74, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x78, 0x74, 0x65,
	0x72, 0x6e, 0x61, 0x6c, 0x41, 0x75, 0x64, 0x69, 0x74, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65,
	0x52, 0x1b, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61,
	0x6c, 0x41, 0x75, 0x64, 0x69, 0x74, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x22, 0x2b, 0x0a,
	0x29, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x45,
	0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x41, 0x75, 0x64, 0x69, 0x74, 0x53, 0x74, 0x6f, 0x72,
	0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x6d, 0x0a, 0x28, 0x47, 0x65,
	0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x44, 0x72, 0x61, 0x66, 0x74, 0x45, 0x78, 0x74, 0x65, 0x72,
	0x6e, 0x61, 0x6c, 0x41, 0x75, 0x64, 0x69, 0x74, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x29, 0x0a, 0x10, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0f, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x22, 0x99, 0x01, 0x0a, 0x29, 0x47, 0x65,
	0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x44, 0x72, 0x61, 0x66, 0x74, 0x45, 0x78, 0x74, 0x65, 0x72,
	0x6e, 0x61, 0x6c, 0x41, 0x75, 0x64, 0x69, 0x74, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x6c, 0x0a, 0x16, 0x65, 0x78, 0x74, 0x65, 0x72,
	0x6e, 0x61, 0x6c, 0x5f, 0x61, 0x75, 0x64, 0x69, 0x74, 0x5f, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x36, 0x2e, 0x74, 0x65, 0x6c, 0x65, 0x70, 0x6f,
	0x72, 0x74, 0x2e, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x61, 0x75, 0x64, 0x69, 0x74,
	0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x78, 0x74, 0x65, 0x72,
	0x6e, 0x61, 0x6c, 0x41, 0x75, 0x64, 0x69, 0x74, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x52,
	0x14, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x41, 0x75, 0x64, 0x69, 0x74, 0x53, 0x74,
	0x6f, 0x72, 0x61, 0x67, 0x65, 0x22, 0x2d, 0x0a, 0x2b, 0x54, 0x65, 0x73, 0x74, 0x44, 0x72, 0x61,
	0x66, 0x74, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x41, 0x75, 0x64, 0x69, 0x74, 0x53,
	0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x22, 0x2e, 0x0a, 0x2c, 0x54, 0x65, 0x73, 0x74, 0x44, 0x72, 0x61, 0x66,
	0x74, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x41, 0x75, 0x64, 0x69, 0x74, 0x53, 0x74,
	0x6f, 0x72, 0x61, 0x67, 0x65, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x2a, 0x0a, 0x28, 0x54, 0x65, 0x73, 0x74, 0x44, 0x72, 0x61, 0x66,
	0x74, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x41, 0x75, 0x64, 0x69, 0x74, 0x53, 0x74,
	0x6f, 0x72, 0x61, 0x67, 0x65, 0x47, 0x6c, 0x75, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x22, 0x2b, 0x0a, 0x29, 0x54, 0x65, 0x73, 0x74, 0x44, 0x72, 0x61, 0x66, 0x74, 0x45, 0x78, 0x74,
	0x65, 0x72, 0x6e, 0x61, 0x6c, 0x41, 0x75, 0x64, 0x69, 0x74, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67,
	0x65, 0x47, 0x6c, 0x75, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x2c, 0x0a,
	0x2a, 0x54, 0x65, 0x73, 0x74, 0x44, 0x72, 0x61, 0x66, 0x74, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e,
	0x61, 0x6c, 0x41, 0x75, 0x64, 0x69, 0x74, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x41, 0x74,
	0x68, 0x65, 0x6e, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x2d, 0x0a, 0x2b, 0x54,
	0x65, 0x73, 0x74, 0x44, 0x72, 0x61, 0x66, 0x74, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c,
	0x41, 0x75, 0x64, 0x69, 0x74, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x41, 0x74, 0x68, 0x65,
	0x6e, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x32, 0xda, 0x0f, 0x0a, 0x1b, 0x45,
	0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x41, 0x75, 0x64, 0x69, 0x74, 0x53, 0x74, 0x6f, 0x72,
	0x61, 0x67, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0xad, 0x01, 0x0a, 0x1c, 0x47,
	0x65, 0x74, 0x44, 0x72, 0x61, 0x66, 0x74, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x41,
	0x75, 0x64, 0x69, 0x74, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x12, 0x45, 0x2e, 0x74, 0x65,
	0x6c, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x61,
	0x75, 0x64, 0x69, 0x74, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47,
	0x65, 0x74, 0x44, 0x72, 0x61, 0x66, 0x74, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x41,
	0x75, 0x64, 0x69, 0x74, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x46, 0x2e, 0x74, 0x65, 0x6c, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x65, 0x78,
	0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x61, 0x75, 0x64, 0x69, 0x74, 0x73, 0x74, 0x6f, 0x72, 0x61,
	0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x72, 0x61, 0x66, 0x74, 0x45, 0x78,
	0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x41, 0x75, 0x64, 0x69, 0x74, 0x53, 0x74, 0x6f, 0x72, 0x61,
	0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0xb6, 0x01, 0x0a, 0x1f, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x72, 0x61, 0x66, 0x74, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e,
	0x61, 0x6c, 0x41, 0x75, 0x64, 0x69, 0x74, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x12, 0x48,
	0x2e, 0x74, 0x65, 0x6c, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e,
	0x61, 0x6c, 0x61, 0x75, 0x64, 0x69, 0x74, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x76,
	0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x72, 0x61, 0x66, 0x74, 0x45, 0x78, 0x74,
	0x65, 0x72, 0x6e, 0x61, 0x6c, 0x41, 0x75, 0x64, 0x69, 0x74, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x49, 0x2e, 0x74, 0x65, 0x6c, 0x65, 0x70,
	0x6f, 0x72, 0x74, 0x2e, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x61, 0x75, 0x64, 0x69,
	0x74, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x44, 0x72, 0x61, 0x66, 0x74, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x41,
	0x75, 0x64, 0x69, 0x74, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0xb6, 0x01, 0x0a, 0x1f, 0x55, 0x70, 0x73, 0x65, 0x72, 0x74, 0x44, 0x72,
	0x61, 0x66, 0x74, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x41, 0x75, 0x64, 0x69, 0x74,
	0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x12, 0x48, 0x2e, 0x74, 0x65, 0x6c, 0x65, 0x70, 0x6f,
	0x72, 0x74, 0x2e, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x61, 0x75, 0x64, 0x69, 0x74,
	0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x73, 0x65, 0x72,
	0x74, 0x44, 0x72, 0x61, 0x66, 0x74, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x41, 0x75,
	0x64, 0x69, 0x74, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x49, 0x2e, 0x74, 0x65, 0x6c, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x65, 0x78, 0x74,
	0x65, 0x72, 0x6e, 0x61, 0x6c, 0x61, 0x75, 0x64, 0x69, 0x74, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67,
	0x65, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x73, 0x65, 0x72, 0x74, 0x44, 0x72, 0x61, 0x66, 0x74,
	0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x41, 0x75, 0x64, 0x69, 0x74, 0x53, 0x74, 0x6f,
	0x72, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x83, 0x01, 0x0a,
	0x1f, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x44, 0x72, 0x61, 0x66, 0x74, 0x45, 0x78, 0x74, 0x65,
	0x72, 0x6e, 0x61, 0x6c, 0x41, 0x75, 0x64, 0x69, 0x74, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65,
	0x12, 0x48, 0x2e, 0x74, 0x65, 0x6c, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x65, 0x78, 0x74, 0x65,
	0x72, 0x6e, 0x61, 0x6c, 0x61, 0x75, 0x64, 0x69, 0x74, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x44, 0x72, 0x61, 0x66, 0x74, 0x45,
	0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x41, 0x75, 0x64, 0x69, 0x74, 0x53, 0x74, 0x6f, 0x72,
	0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70,
	0x74, 0x79, 0x12, 0xc5, 0x01, 0x0a, 0x24, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x65, 0x54, 0x6f,
	0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x41,
	0x75, 0x64, 0x69, 0x74, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x12, 0x4d, 0x2e, 0x74, 0x65,
	0x6c, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x61,
	0x75, 0x64, 0x69, 0x74, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x50,
	0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x65, 0x54, 0x6f, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x45,
	0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x41, 0x75, 0x64, 0x69, 0x74, 0x53, 0x74, 0x6f, 0x72,
	0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x4e, 0x2e, 0x74, 0x65, 0x6c,
	0x65, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x61, 0x75,
	0x64, 0x69, 0x74, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x72,
	0x6f, 0x6d, 0x6f, 0x74, 0x65, 0x54, 0x6f, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x45, 0x78,
	0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x41, 0x75, 0x64, 0x69, 0x74, 0x53, 0x74, 0x6f, 0x72, 0x61,
	0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0xb3, 0x01, 0x0a, 0x1e, 0x47,
	0x65, 0x74, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61,
	0x6c, 0x41, 0x75, 0x64, 0x69, 0x74, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x12, 0x47, 0x2e,
	0x74, 0x65, 0x6c, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61,
	0x6c, 0x61, 0x75, 0x64, 0x69, 0x74, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x47, 0x65, 0x74, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x45, 0x78, 0x74, 0x65, 0x72,
	0x6e, 0x61, 0x6c, 0x41, 0x75, 0x64, 0x69, 0x74, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x48, 0x2e, 0x74, 0x65, 0x6c, 0x65, 0x70, 0x6f, 0x72,
	0x74, 0x2e, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x61, 0x75, 0x64, 0x69, 0x74, 0x73,
	0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6c, 0x75,
	0x73, 0x74, 0x65, 0x72, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x41, 0x75, 0x64, 0x69,
	0x74, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x89, 0x01, 0x0a, 0x22, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x43, 0x6c, 0x75, 0x73,
	0x74, 0x65, 0x72, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x41, 0x75, 0x64, 0x69, 0x74,
	0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x12, 0x4b, 0x2e, 0x74, 0x65, 0x6c, 0x65, 0x70, 0x6f,
	0x72, 0x74, 0x2e, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x61, 0x75, 0x64, 0x69, 0x74,
	0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x69, 0x73, 0x61, 0x62,
	0x6c, 0x65, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61,
	0x6c, 0x41, 0x75, 0x64, 0x69, 0x74, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0xbc, 0x01, 0x0a,
	0x21, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x44, 0x72, 0x61, 0x66, 0x74, 0x45, 0x78,
	0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x41, 0x75, 0x64, 0x69, 0x74, 0x53, 0x74, 0x6f, 0x72, 0x61,
	0x67, 0x65, 0x12, 0x4a, 0x2e, 0x74, 0x65, 0x6c, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x65, 0x78,
	0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x61, 0x75, 0x64, 0x69, 0x74, 0x73, 0x74, 0x6f, 0x72, 0x61,
	0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x44, 0x72,
	0x61, 0x66, 0x74, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x41, 0x75, 0x64, 0x69, 0x74,
	0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x4b,
	0x2e, 0x74, 0x65, 0x6c, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e,
	0x61, 0x6c, 0x61, 0x75, 0x64, 0x69, 0x74, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x76,
	0x31, 0x2e, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x44, 0x72, 0x61, 0x66, 0x74, 0x45,
	0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x41, 0x75, 0x64, 0x69, 0x74, 0x53, 0x74, 0x6f, 0x72,
	0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0xc5, 0x01, 0x0a, 0x24,
	0x54, 0x65, 0x73, 0x74, 0x44, 0x72, 0x61, 0x66, 0x74, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61,
	0x6c, 0x41, 0x75, 0x64, 0x69, 0x74, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x42, 0x75, 0x63,
	0x6b, 0x65, 0x74, 0x73, 0x12, 0x4d, 0x2e, 0x74, 0x65, 0x6c, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x2e,
	0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x61, 0x75, 0x64, 0x69, 0x74, 0x73, 0x74, 0x6f,
	0x72, 0x61, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x65, 0x73, 0x74, 0x44, 0x72, 0x61, 0x66,
	0x74, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x41, 0x75, 0x64, 0x69, 0x74, 0x53, 0x74,
	0x6f, 0x72, 0x61, 0x67, 0x65, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x4e, 0x2e, 0x74, 0x65, 0x6c, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x65,
	0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x61, 0x75, 0x64, 0x69, 0x74, 0x73, 0x74, 0x6f, 0x72,
	0x61, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x65, 0x73, 0x74, 0x44, 0x72, 0x61, 0x66, 0x74,
	0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x41, 0x75, 0x64, 0x69, 0x74, 0x53, 0x74, 0x6f,
	0x72, 0x61, 0x67, 0x65, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0xbc, 0x01, 0x0a, 0x21, 0x54, 0x65, 0x73, 0x74, 0x44, 0x72, 0x61, 0x66,
	0x74, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x41, 0x75, 0x64, 0x69, 0x74, 0x53, 0x74,
	0x6f, 0x72, 0x61, 0x67, 0x65, 0x47, 0x6c, 0x75, 0x65, 0x12, 0x4a, 0x2e, 0x74, 0x65, 0x6c, 0x65,
	0x70, 0x6f, 0x72, 0x74, 0x2e, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x61, 0x75, 0x64,
	0x69, 0x74, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x65, 0x73,
	0x74, 0x44, 0x72, 0x61, 0x66, 0x74, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x41, 0x75,
	0x64, 0x69, 0x74, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x47, 0x6c, 0x75, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x4b, 0x2e, 0x74, 0x65, 0x6c, 0x65, 0x70, 0x6f, 0x72, 0x74,
	0x2e, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x61, 0x75, 0x64, 0x69, 0x74, 0x73, 0x74,
	0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x65, 0x73, 0x74, 0x44, 0x72, 0x61,
	0x66, 0x74, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x41, 0x75, 0x64, 0x69, 0x74, 0x53,
	0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x47, 0x6c, 0x75, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0xc2, 0x01, 0x0a, 0x23, 0x54, 0x65, 0x73, 0x74, 0x44, 0x72, 0x61, 0x66, 0x74,
	0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x41, 0x75, 0x64, 0x69, 0x74, 0x53, 0x74, 0x6f,
	0x72, 0x61, 0x67, 0x65, 0x41, 0x74, 0x68, 0x65, 0x6e, 0x61, 0x12, 0x4c, 0x2e, 0x74, 0x65, 0x6c,
	0x65, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x61, 0x75,
	0x64, 0x69, 0x74, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x65,
	0x73, 0x74, 0x44, 0x72, 0x61, 0x66, 0x74, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x41,
	0x75, 0x64, 0x69, 0x74, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x41, 0x74, 0x68, 0x65, 0x6e,
	0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x4d, 0x2e, 0x74, 0x65, 0x6c, 0x65, 0x70,
	0x6f, 0x72, 0x74, 0x2e, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x61, 0x75, 0x64, 0x69,
	0x74, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x65, 0x73, 0x74,
	0x44, 0x72, 0x61, 0x66, 0x74, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x41, 0x75, 0x64,
	0x69, 0x74, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x41, 0x74, 0x68, 0x65, 0x6e, 0x61, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x6c, 0x5a, 0x6a, 0x67, 0x69, 0x74, 0x68, 0x75,
	0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x67, 0x72, 0x61, 0x76, 0x69, 0x74, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x61, 0x6c, 0x2f, 0x74, 0x65, 0x6c, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x2f, 0x61, 0x70, 0x69,
	0x2f, 0x67, 0x65, 0x6e, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x6f, 0x2f, 0x74, 0x65,
	0x6c, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x2f, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x61,
	0x75, 0x64, 0x69, 0x74, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2f, 0x76, 0x31, 0x3b, 0x65,
	0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x61, 0x75, 0x64, 0x69, 0x74, 0x73, 0x74, 0x6f, 0x72,
	0x61, 0x67, 0x65, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_teleport_externalauditstorage_v1_externalauditstorage_service_proto_rawDescOnce sync.Once
	file_teleport_externalauditstorage_v1_externalauditstorage_service_proto_rawDescData = file_teleport_externalauditstorage_v1_externalauditstorage_service_proto_rawDesc
)

func file_teleport_externalauditstorage_v1_externalauditstorage_service_proto_rawDescGZIP() []byte {
	file_teleport_externalauditstorage_v1_externalauditstorage_service_proto_rawDescOnce.Do(func() {
		file_teleport_externalauditstorage_v1_externalauditstorage_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_teleport_externalauditstorage_v1_externalauditstorage_service_proto_rawDescData)
	})
	return file_teleport_externalauditstorage_v1_externalauditstorage_service_proto_rawDescData
}

var file_teleport_externalauditstorage_v1_externalauditstorage_service_proto_msgTypes = make([]protoimpl.MessageInfo, 20)
var file_teleport_externalauditstorage_v1_externalauditstorage_service_proto_goTypes = []any{
	(*GetDraftExternalAuditStorageRequest)(nil),          // 0: teleport.externalauditstorage.v1.GetDraftExternalAuditStorageRequest
	(*GetDraftExternalAuditStorageResponse)(nil),         // 1: teleport.externalauditstorage.v1.GetDraftExternalAuditStorageResponse
	(*CreateDraftExternalAuditStorageRequest)(nil),       // 2: teleport.externalauditstorage.v1.CreateDraftExternalAuditStorageRequest
	(*CreateDraftExternalAuditStorageResponse)(nil),      // 3: teleport.externalauditstorage.v1.CreateDraftExternalAuditStorageResponse
	(*UpsertDraftExternalAuditStorageRequest)(nil),       // 4: teleport.externalauditstorage.v1.UpsertDraftExternalAuditStorageRequest
	(*UpsertDraftExternalAuditStorageResponse)(nil),      // 5: teleport.externalauditstorage.v1.UpsertDraftExternalAuditStorageResponse
	(*DeleteDraftExternalAuditStorageRequest)(nil),       // 6: teleport.externalauditstorage.v1.DeleteDraftExternalAuditStorageRequest
	(*PromoteToClusterExternalAuditStorageRequest)(nil),  // 7: teleport.externalauditstorage.v1.PromoteToClusterExternalAuditStorageRequest
	(*PromoteToClusterExternalAuditStorageResponse)(nil), // 8: teleport.externalauditstorage.v1.PromoteToClusterExternalAuditStorageResponse
	(*GetClusterExternalAuditStorageRequest)(nil),        // 9: teleport.externalauditstorage.v1.GetClusterExternalAuditStorageRequest
	(*GetClusterExternalAuditStorageResponse)(nil),       // 10: teleport.externalauditstorage.v1.GetClusterExternalAuditStorageResponse
	(*DisableClusterExternalAuditStorageRequest)(nil),    // 11: teleport.externalauditstorage.v1.DisableClusterExternalAuditStorageRequest
	(*GenerateDraftExternalAuditStorageRequest)(nil),     // 12: teleport.externalauditstorage.v1.GenerateDraftExternalAuditStorageRequest
	(*GenerateDraftExternalAuditStorageResponse)(nil),    // 13: teleport.externalauditstorage.v1.GenerateDraftExternalAuditStorageResponse
	(*TestDraftExternalAuditStorageBucketsRequest)(nil),  // 14: teleport.externalauditstorage.v1.TestDraftExternalAuditStorageBucketsRequest
	(*TestDraftExternalAuditStorageBucketsResponse)(nil), // 15: teleport.externalauditstorage.v1.TestDraftExternalAuditStorageBucketsResponse
	(*TestDraftExternalAuditStorageGlueRequest)(nil),     // 16: teleport.externalauditstorage.v1.TestDraftExternalAuditStorageGlueRequest
	(*TestDraftExternalAuditStorageGlueResponse)(nil),    // 17: teleport.externalauditstorage.v1.TestDraftExternalAuditStorageGlueResponse
	(*TestDraftExternalAuditStorageAthenaRequest)(nil),   // 18: teleport.externalauditstorage.v1.TestDraftExternalAuditStorageAthenaRequest
	(*TestDraftExternalAuditStorageAthenaResponse)(nil),  // 19: teleport.externalauditstorage.v1.TestDraftExternalAuditStorageAthenaResponse
	(*ExternalAuditStorage)(nil),                         // 20: teleport.externalauditstorage.v1.ExternalAuditStorage
	(*emptypb.Empty)(nil),                                // 21: google.protobuf.Empty
}
var file_teleport_externalauditstorage_v1_externalauditstorage_service_proto_depIdxs = []int32{
	20, // 0: teleport.externalauditstorage.v1.GetDraftExternalAuditStorageResponse.external_audit_storage:type_name -> teleport.externalauditstorage.v1.ExternalAuditStorage
	20, // 1: teleport.externalauditstorage.v1.CreateDraftExternalAuditStorageRequest.external_audit_storage:type_name -> teleport.externalauditstorage.v1.ExternalAuditStorage
	20, // 2: teleport.externalauditstorage.v1.CreateDraftExternalAuditStorageResponse.external_audit_storage:type_name -> teleport.externalauditstorage.v1.ExternalAuditStorage
	20, // 3: teleport.externalauditstorage.v1.UpsertDraftExternalAuditStorageRequest.external_audit_storage:type_name -> teleport.externalauditstorage.v1.ExternalAuditStorage
	20, // 4: teleport.externalauditstorage.v1.UpsertDraftExternalAuditStorageResponse.external_audit_storage:type_name -> teleport.externalauditstorage.v1.ExternalAuditStorage
	20, // 5: teleport.externalauditstorage.v1.PromoteToClusterExternalAuditStorageResponse.cluster_external_audit_storage:type_name -> teleport.externalauditstorage.v1.ExternalAuditStorage
	20, // 6: teleport.externalauditstorage.v1.GetClusterExternalAuditStorageResponse.cluster_external_audit_storage:type_name -> teleport.externalauditstorage.v1.ExternalAuditStorage
	20, // 7: teleport.externalauditstorage.v1.GenerateDraftExternalAuditStorageResponse.external_audit_storage:type_name -> teleport.externalauditstorage.v1.ExternalAuditStorage
	0,  // 8: teleport.externalauditstorage.v1.ExternalAuditStorageService.GetDraftExternalAuditStorage:input_type -> teleport.externalauditstorage.v1.GetDraftExternalAuditStorageRequest
	2,  // 9: teleport.externalauditstorage.v1.ExternalAuditStorageService.CreateDraftExternalAuditStorage:input_type -> teleport.externalauditstorage.v1.CreateDraftExternalAuditStorageRequest
	4,  // 10: teleport.externalauditstorage.v1.ExternalAuditStorageService.UpsertDraftExternalAuditStorage:input_type -> teleport.externalauditstorage.v1.UpsertDraftExternalAuditStorageRequest
	6,  // 11: teleport.externalauditstorage.v1.ExternalAuditStorageService.DeleteDraftExternalAuditStorage:input_type -> teleport.externalauditstorage.v1.DeleteDraftExternalAuditStorageRequest
	7,  // 12: teleport.externalauditstorage.v1.ExternalAuditStorageService.PromoteToClusterExternalAuditStorage:input_type -> teleport.externalauditstorage.v1.PromoteToClusterExternalAuditStorageRequest
	9,  // 13: teleport.externalauditstorage.v1.ExternalAuditStorageService.GetClusterExternalAuditStorage:input_type -> teleport.externalauditstorage.v1.GetClusterExternalAuditStorageRequest
	11, // 14: teleport.externalauditstorage.v1.ExternalAuditStorageService.DisableClusterExternalAuditStorage:input_type -> teleport.externalauditstorage.v1.DisableClusterExternalAuditStorageRequest
	12, // 15: teleport.externalauditstorage.v1.ExternalAuditStorageService.GenerateDraftExternalAuditStorage:input_type -> teleport.externalauditstorage.v1.GenerateDraftExternalAuditStorageRequest
	14, // 16: teleport.externalauditstorage.v1.ExternalAuditStorageService.TestDraftExternalAuditStorageBuckets:input_type -> teleport.externalauditstorage.v1.TestDraftExternalAuditStorageBucketsRequest
	16, // 17: teleport.externalauditstorage.v1.ExternalAuditStorageService.TestDraftExternalAuditStorageGlue:input_type -> teleport.externalauditstorage.v1.TestDraftExternalAuditStorageGlueRequest
	18, // 18: teleport.externalauditstorage.v1.ExternalAuditStorageService.TestDraftExternalAuditStorageAthena:input_type -> teleport.externalauditstorage.v1.TestDraftExternalAuditStorageAthenaRequest
	1,  // 19: teleport.externalauditstorage.v1.ExternalAuditStorageService.GetDraftExternalAuditStorage:output_type -> teleport.externalauditstorage.v1.GetDraftExternalAuditStorageResponse
	3,  // 20: teleport.externalauditstorage.v1.ExternalAuditStorageService.CreateDraftExternalAuditStorage:output_type -> teleport.externalauditstorage.v1.CreateDraftExternalAuditStorageResponse
	5,  // 21: teleport.externalauditstorage.v1.ExternalAuditStorageService.UpsertDraftExternalAuditStorage:output_type -> teleport.externalauditstorage.v1.UpsertDraftExternalAuditStorageResponse
	21, // 22: teleport.externalauditstorage.v1.ExternalAuditStorageService.DeleteDraftExternalAuditStorage:output_type -> google.protobuf.Empty
	8,  // 23: teleport.externalauditstorage.v1.ExternalAuditStorageService.PromoteToClusterExternalAuditStorage:output_type -> teleport.externalauditstorage.v1.PromoteToClusterExternalAuditStorageResponse
	10, // 24: teleport.externalauditstorage.v1.ExternalAuditStorageService.GetClusterExternalAuditStorage:output_type -> teleport.externalauditstorage.v1.GetClusterExternalAuditStorageResponse
	21, // 25: teleport.externalauditstorage.v1.ExternalAuditStorageService.DisableClusterExternalAuditStorage:output_type -> google.protobuf.Empty
	13, // 26: teleport.externalauditstorage.v1.ExternalAuditStorageService.GenerateDraftExternalAuditStorage:output_type -> teleport.externalauditstorage.v1.GenerateDraftExternalAuditStorageResponse
	15, // 27: teleport.externalauditstorage.v1.ExternalAuditStorageService.TestDraftExternalAuditStorageBuckets:output_type -> teleport.externalauditstorage.v1.TestDraftExternalAuditStorageBucketsResponse
	17, // 28: teleport.externalauditstorage.v1.ExternalAuditStorageService.TestDraftExternalAuditStorageGlue:output_type -> teleport.externalauditstorage.v1.TestDraftExternalAuditStorageGlueResponse
	19, // 29: teleport.externalauditstorage.v1.ExternalAuditStorageService.TestDraftExternalAuditStorageAthena:output_type -> teleport.externalauditstorage.v1.TestDraftExternalAuditStorageAthenaResponse
	19, // [19:30] is the sub-list for method output_type
	8,  // [8:19] is the sub-list for method input_type
	8,  // [8:8] is the sub-list for extension type_name
	8,  // [8:8] is the sub-list for extension extendee
	0,  // [0:8] is the sub-list for field type_name
}

func init() { file_teleport_externalauditstorage_v1_externalauditstorage_service_proto_init() }
func file_teleport_externalauditstorage_v1_externalauditstorage_service_proto_init() {
	if File_teleport_externalauditstorage_v1_externalauditstorage_service_proto != nil {
		return
	}
	file_teleport_externalauditstorage_v1_externalauditstorage_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_teleport_externalauditstorage_v1_externalauditstorage_service_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*GetDraftExternalAuditStorageRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_teleport_externalauditstorage_v1_externalauditstorage_service_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*GetDraftExternalAuditStorageResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_teleport_externalauditstorage_v1_externalauditstorage_service_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*CreateDraftExternalAuditStorageRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_teleport_externalauditstorage_v1_externalauditstorage_service_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*CreateDraftExternalAuditStorageResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_teleport_externalauditstorage_v1_externalauditstorage_service_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*UpsertDraftExternalAuditStorageRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_teleport_externalauditstorage_v1_externalauditstorage_service_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*UpsertDraftExternalAuditStorageResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_teleport_externalauditstorage_v1_externalauditstorage_service_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*DeleteDraftExternalAuditStorageRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_teleport_externalauditstorage_v1_externalauditstorage_service_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*PromoteToClusterExternalAuditStorageRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_teleport_externalauditstorage_v1_externalauditstorage_service_proto_msgTypes[8].Exporter = func(v any, i int) any {
			switch v := v.(*PromoteToClusterExternalAuditStorageResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_teleport_externalauditstorage_v1_externalauditstorage_service_proto_msgTypes[9].Exporter = func(v any, i int) any {
			switch v := v.(*GetClusterExternalAuditStorageRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_teleport_externalauditstorage_v1_externalauditstorage_service_proto_msgTypes[10].Exporter = func(v any, i int) any {
			switch v := v.(*GetClusterExternalAuditStorageResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_teleport_externalauditstorage_v1_externalauditstorage_service_proto_msgTypes[11].Exporter = func(v any, i int) any {
			switch v := v.(*DisableClusterExternalAuditStorageRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_teleport_externalauditstorage_v1_externalauditstorage_service_proto_msgTypes[12].Exporter = func(v any, i int) any {
			switch v := v.(*GenerateDraftExternalAuditStorageRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_teleport_externalauditstorage_v1_externalauditstorage_service_proto_msgTypes[13].Exporter = func(v any, i int) any {
			switch v := v.(*GenerateDraftExternalAuditStorageResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_teleport_externalauditstorage_v1_externalauditstorage_service_proto_msgTypes[14].Exporter = func(v any, i int) any {
			switch v := v.(*TestDraftExternalAuditStorageBucketsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_teleport_externalauditstorage_v1_externalauditstorage_service_proto_msgTypes[15].Exporter = func(v any, i int) any {
			switch v := v.(*TestDraftExternalAuditStorageBucketsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_teleport_externalauditstorage_v1_externalauditstorage_service_proto_msgTypes[16].Exporter = func(v any, i int) any {
			switch v := v.(*TestDraftExternalAuditStorageGlueRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_teleport_externalauditstorage_v1_externalauditstorage_service_proto_msgTypes[17].Exporter = func(v any, i int) any {
			switch v := v.(*TestDraftExternalAuditStorageGlueResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_teleport_externalauditstorage_v1_externalauditstorage_service_proto_msgTypes[18].Exporter = func(v any, i int) any {
			switch v := v.(*TestDraftExternalAuditStorageAthenaRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_teleport_externalauditstorage_v1_externalauditstorage_service_proto_msgTypes[19].Exporter = func(v any, i int) any {
			switch v := v.(*TestDraftExternalAuditStorageAthenaResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_teleport_externalauditstorage_v1_externalauditstorage_service_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   20,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_teleport_externalauditstorage_v1_externalauditstorage_service_proto_goTypes,
		DependencyIndexes: file_teleport_externalauditstorage_v1_externalauditstorage_service_proto_depIdxs,
		MessageInfos:      file_teleport_externalauditstorage_v1_externalauditstorage_service_proto_msgTypes,
	}.Build()
	File_teleport_externalauditstorage_v1_externalauditstorage_service_proto = out.File
	file_teleport_externalauditstorage_v1_externalauditstorage_service_proto_rawDesc = nil
	file_teleport_externalauditstorage_v1_externalauditstorage_service_proto_goTypes = nil
	file_teleport_externalauditstorage_v1_externalauditstorage_service_proto_depIdxs = nil
}
