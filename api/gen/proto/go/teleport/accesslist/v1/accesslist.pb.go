// Copyright 2023 Gravitational, Inc
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: teleport/accesslist/v1/accesslist.proto

package accesslistv1

import (
	v1 "github.com/gravitational/teleport/api/gen/proto/go/teleport/header/v1"
	v11 "github.com/gravitational/teleport/api/gen/proto/go/teleport/trait/v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	durationpb "google.golang.org/protobuf/types/known/durationpb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// ReviewFrequency is the frequency of reviews.
type ReviewFrequency int32

const (
	ReviewFrequency_REVIEW_FREQUENCY_UNSPECIFIED  ReviewFrequency = 0
	ReviewFrequency_REVIEW_FREQUENCY_ONE_MONTH    ReviewFrequency = 1
	ReviewFrequency_REVIEW_FREQUENCY_THREE_MONTHS ReviewFrequency = 3
	ReviewFrequency_REVIEW_FREQUENCY_SIX_MONTHS   ReviewFrequency = 6
	ReviewFrequency_REVIEW_FREQUENCY_ONE_YEAR     ReviewFrequency = 12
)

// Enum value maps for ReviewFrequency.
var (
	ReviewFrequency_name = map[int32]string{
		0:  "REVIEW_FREQUENCY_UNSPECIFIED",
		1:  "REVIEW_FREQUENCY_ONE_MONTH",
		3:  "REVIEW_FREQUENCY_THREE_MONTHS",
		6:  "REVIEW_FREQUENCY_SIX_MONTHS",
		12: "REVIEW_FREQUENCY_ONE_YEAR",
	}
	ReviewFrequency_value = map[string]int32{
		"REVIEW_FREQUENCY_UNSPECIFIED":  0,
		"REVIEW_FREQUENCY_ONE_MONTH":    1,
		"REVIEW_FREQUENCY_THREE_MONTHS": 3,
		"REVIEW_FREQUENCY_SIX_MONTHS":   6,
		"REVIEW_FREQUENCY_ONE_YEAR":     12,
	}
)

func (x ReviewFrequency) Enum() *ReviewFrequency {
	p := new(ReviewFrequency)
	*p = x
	return p
}

func (x ReviewFrequency) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ReviewFrequency) Descriptor() protoreflect.EnumDescriptor {
	return file_teleport_accesslist_v1_accesslist_proto_enumTypes[0].Descriptor()
}

func (ReviewFrequency) Type() protoreflect.EnumType {
	return &file_teleport_accesslist_v1_accesslist_proto_enumTypes[0]
}

func (x ReviewFrequency) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ReviewFrequency.Descriptor instead.
func (ReviewFrequency) EnumDescriptor() ([]byte, []int) {
	return file_teleport_accesslist_v1_accesslist_proto_rawDescGZIP(), []int{0}
}

// ReviewDayOfMonth is the day of month that reviews will repeat on.
type ReviewDayOfMonth int32

const (
	ReviewDayOfMonth_REVIEW_DAY_OF_MONTH_UNSPECIFIED ReviewDayOfMonth = 0
	ReviewDayOfMonth_REVIEW_DAY_OF_MONTH_FIRST       ReviewDayOfMonth = 1
	ReviewDayOfMonth_REVIEW_DAY_OF_MONTH_FIFTEENTH   ReviewDayOfMonth = 15
	ReviewDayOfMonth_REVIEW_DAY_OF_MONTH_LAST        ReviewDayOfMonth = 31
)

// Enum value maps for ReviewDayOfMonth.
var (
	ReviewDayOfMonth_name = map[int32]string{
		0:  "REVIEW_DAY_OF_MONTH_UNSPECIFIED",
		1:  "REVIEW_DAY_OF_MONTH_FIRST",
		15: "REVIEW_DAY_OF_MONTH_FIFTEENTH",
		31: "REVIEW_DAY_OF_MONTH_LAST",
	}
	ReviewDayOfMonth_value = map[string]int32{
		"REVIEW_DAY_OF_MONTH_UNSPECIFIED": 0,
		"REVIEW_DAY_OF_MONTH_FIRST":       1,
		"REVIEW_DAY_OF_MONTH_FIFTEENTH":   15,
		"REVIEW_DAY_OF_MONTH_LAST":        31,
	}
)

func (x ReviewDayOfMonth) Enum() *ReviewDayOfMonth {
	p := new(ReviewDayOfMonth)
	*p = x
	return p
}

func (x ReviewDayOfMonth) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ReviewDayOfMonth) Descriptor() protoreflect.EnumDescriptor {
	return file_teleport_accesslist_v1_accesslist_proto_enumTypes[1].Descriptor()
}

func (ReviewDayOfMonth) Type() protoreflect.EnumType {
	return &file_teleport_accesslist_v1_accesslist_proto_enumTypes[1]
}

func (x ReviewDayOfMonth) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ReviewDayOfMonth.Descriptor instead.
func (ReviewDayOfMonth) EnumDescriptor() ([]byte, []int) {
	return file_teleport_accesslist_v1_accesslist_proto_rawDescGZIP(), []int{1}
}

// MembershipKind represents the different kinds of list membership
type MembershipKind int32

const (
	// MEMBERSHIP_KIND_UNSPECIFIED represents list members that are of
	// unknown membership kind, defaulting to being treated as type USER
	MembershipKind_MEMBERSHIP_KIND_UNSPECIFIED MembershipKind = 0
	// MEMBERSHIP_KIND_USER represents list members that are normal users
	MembershipKind_MEMBERSHIP_KIND_USER MembershipKind = 1
	// MEMBERSHIP_KIND_LIST represents list members that are nested Access Lists
	MembershipKind_MEMBERSHIP_KIND_LIST MembershipKind = 2
)

// Enum value maps for MembershipKind.
var (
	MembershipKind_name = map[int32]string{
		0: "MEMBERSHIP_KIND_UNSPECIFIED",
		1: "MEMBERSHIP_KIND_USER",
		2: "MEMBERSHIP_KIND_LIST",
	}
	MembershipKind_value = map[string]int32{
		"MEMBERSHIP_KIND_UNSPECIFIED": 0,
		"MEMBERSHIP_KIND_USER":        1,
		"MEMBERSHIP_KIND_LIST":        2,
	}
)

func (x MembershipKind) Enum() *MembershipKind {
	p := new(MembershipKind)
	*p = x
	return p
}

func (x MembershipKind) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MembershipKind) Descriptor() protoreflect.EnumDescriptor {
	return file_teleport_accesslist_v1_accesslist_proto_enumTypes[2].Descriptor()
}

func (MembershipKind) Type() protoreflect.EnumType {
	return &file_teleport_accesslist_v1_accesslist_proto_enumTypes[2]
}

func (x MembershipKind) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MembershipKind.Descriptor instead.
func (MembershipKind) EnumDescriptor() ([]byte, []int) {
	return file_teleport_accesslist_v1_accesslist_proto_rawDescGZIP(), []int{2}
}

// IneligibleStatus describes how the user is ineligible.
type IneligibleStatus int32

const (
	// INELIGIBLE_STATUS_UNSPECIFIED means eligiblity is unknown.
	IneligibleStatus_INELIGIBLE_STATUS_UNSPECIFIED IneligibleStatus = 0
	// INELIGIBLE_STATUS_ELIGIBLE means checks were done and user met all
	// requirements.
	IneligibleStatus_INELIGIBLE_STATUS_ELIGIBLE IneligibleStatus = 1
	// INELIGIBLE_STATUS_USER_NOT_EXIST means user was not found in backend.
	IneligibleStatus_INELIGIBLE_STATUS_USER_NOT_EXIST IneligibleStatus = 2
	// INELIGIBLE_STATUS_MISSING_REQUIREMENTS means user is missing some
	// requirements defined by AccessListRequires (fields can be either
	// ownership_requires or membership_requires)
	IneligibleStatus_INELIGIBLE_STATUS_MISSING_REQUIREMENTS IneligibleStatus = 3
	// INELIGIBLE_STATUS_EXPIRED means user is expired.
	// Only applicable to members.
	IneligibleStatus_INELIGIBLE_STATUS_EXPIRED IneligibleStatus = 4
)

// Enum value maps for IneligibleStatus.
var (
	IneligibleStatus_name = map[int32]string{
		0: "INELIGIBLE_STATUS_UNSPECIFIED",
		1: "INELIGIBLE_STATUS_ELIGIBLE",
		2: "INELIGIBLE_STATUS_USER_NOT_EXIST",
		3: "INELIGIBLE_STATUS_MISSING_REQUIREMENTS",
		4: "INELIGIBLE_STATUS_EXPIRED",
	}
	IneligibleStatus_value = map[string]int32{
		"INELIGIBLE_STATUS_UNSPECIFIED":          0,
		"INELIGIBLE_STATUS_ELIGIBLE":             1,
		"INELIGIBLE_STATUS_USER_NOT_EXIST":       2,
		"INELIGIBLE_STATUS_MISSING_REQUIREMENTS": 3,
		"INELIGIBLE_STATUS_EXPIRED":              4,
	}
)

func (x IneligibleStatus) Enum() *IneligibleStatus {
	p := new(IneligibleStatus)
	*p = x
	return p
}

func (x IneligibleStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (IneligibleStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_teleport_accesslist_v1_accesslist_proto_enumTypes[3].Descriptor()
}

func (IneligibleStatus) Type() protoreflect.EnumType {
	return &file_teleport_accesslist_v1_accesslist_proto_enumTypes[3]
}

func (x IneligibleStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use IneligibleStatus.Descriptor instead.
func (IneligibleStatus) EnumDescriptor() ([]byte, []int) {
	return file_teleport_accesslist_v1_accesslist_proto_rawDescGZIP(), []int{3}
}

// AccessListUserAssignmentType describes the type of membership anr/or ownership
// a user has in an access list.
type AccessListUserAssignmentType int32

const (
	// ACCESS_LIST_USER_ASSIGNMENT_TYPE_UNSPECIFIED means the user is not an explicit nor an inherited member or owner
	AccessListUserAssignmentType_ACCESS_LIST_USER_ASSIGNMENT_TYPE_UNSPECIFIED AccessListUserAssignmentType = 0
	// ACCESS_LIST_USER_ASSIGNMENT_TYPE_EXPLICIT means the user has explicit membership or ownership
	AccessListUserAssignmentType_ACCESS_LIST_USER_ASSIGNMENT_TYPE_EXPLICIT AccessListUserAssignmentType = 1
	// ACCESS_LIST_USER_ASSIGNMENT_TYPE_INHERITED means the user has inherited membership or ownership
	AccessListUserAssignmentType_ACCESS_LIST_USER_ASSIGNMENT_TYPE_INHERITED AccessListUserAssignmentType = 2
)

// Enum value maps for AccessListUserAssignmentType.
var (
	AccessListUserAssignmentType_name = map[int32]string{
		0: "ACCESS_LIST_USER_ASSIGNMENT_TYPE_UNSPECIFIED",
		1: "ACCESS_LIST_USER_ASSIGNMENT_TYPE_EXPLICIT",
		2: "ACCESS_LIST_USER_ASSIGNMENT_TYPE_INHERITED",
	}
	AccessListUserAssignmentType_value = map[string]int32{
		"ACCESS_LIST_USER_ASSIGNMENT_TYPE_UNSPECIFIED": 0,
		"ACCESS_LIST_USER_ASSIGNMENT_TYPE_EXPLICIT":    1,
		"ACCESS_LIST_USER_ASSIGNMENT_TYPE_INHERITED":   2,
	}
)

func (x AccessListUserAssignmentType) Enum() *AccessListUserAssignmentType {
	p := new(AccessListUserAssignmentType)
	*p = x
	return p
}

func (x AccessListUserAssignmentType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AccessListUserAssignmentType) Descriptor() protoreflect.EnumDescriptor {
	return file_teleport_accesslist_v1_accesslist_proto_enumTypes[4].Descriptor()
}

func (AccessListUserAssignmentType) Type() protoreflect.EnumType {
	return &file_teleport_accesslist_v1_accesslist_proto_enumTypes[4]
}

func (x AccessListUserAssignmentType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AccessListUserAssignmentType.Descriptor instead.
func (AccessListUserAssignmentType) EnumDescriptor() ([]byte, []int) {
	return file_teleport_accesslist_v1_accesslist_proto_rawDescGZIP(), []int{4}
}

// AccessList describes the basic building block of access grants, which are
// similar to access requests but for longer lived permissions that need to be
// regularly audited.
type AccessList struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// header is the header for the resource.
	Header *v1.ResourceHeader `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	// spec is the specification for the Access List.
	Spec *AccessListSpec `protobuf:"bytes,2,opt,name=spec,proto3" json:"spec,omitempty"`
	// status contains dynamically calculated fields.
	Status        *AccessListStatus `protobuf:"bytes,3,opt,name=status,proto3" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AccessList) Reset() {
	*x = AccessList{}
	mi := &file_teleport_accesslist_v1_accesslist_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AccessList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccessList) ProtoMessage() {}

func (x *AccessList) ProtoReflect() protoreflect.Message {
	mi := &file_teleport_accesslist_v1_accesslist_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccessList.ProtoReflect.Descriptor instead.
func (*AccessList) Descriptor() ([]byte, []int) {
	return file_teleport_accesslist_v1_accesslist_proto_rawDescGZIP(), []int{0}
}

func (x *AccessList) GetHeader() *v1.ResourceHeader {
	if x != nil {
		return x.Header
	}
	return nil
}

func (x *AccessList) GetSpec() *AccessListSpec {
	if x != nil {
		return x.Spec
	}
	return nil
}

func (x *AccessList) GetStatus() *AccessListStatus {
	if x != nil {
		return x.Status
	}
	return nil
}

// AccessListSpec is the specification for an Access List.
type AccessListSpec struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// description is an optional plaintext description of the Access List.
	Description string `protobuf:"bytes,1,opt,name=description,proto3" json:"description,omitempty"`
	// owners is a list of owners of the Access List.
	Owners []*AccessListOwner `protobuf:"bytes,2,rep,name=owners,proto3" json:"owners,omitempty"`
	// audit describes the frequency that this Access List must be audited.
	Audit *AccessListAudit `protobuf:"bytes,3,opt,name=audit,proto3" json:"audit,omitempty"`
	// membership_requires describes the requirements for a user to be a member of
	// the Access List. For a membership to an Access List to be effective, the
	// user must meet the requirements of Membership_requires and must be in the
	// members list.
	MembershipRequires *AccessListRequires `protobuf:"bytes,4,opt,name=membership_requires,json=membershipRequires,proto3" json:"membership_requires,omitempty"`
	// ownership_requires describes the requirements for a user to be an owner of
	// the Access List. For ownership of an Access List to be effective, the user
	// must meet the requirements of ownership_requires and must be in the owners
	// list.
	OwnershipRequires *AccessListRequires `protobuf:"bytes,5,opt,name=ownership_requires,json=ownershipRequires,proto3" json:"ownership_requires,omitempty"`
	// grants describes the access granted by membership to this Access List.
	Grants *AccessListGrants `protobuf:"bytes,6,opt,name=grants,proto3" json:"grants,omitempty"`
	// title is a plaintext short description of the Access List.
	Title string `protobuf:"bytes,8,opt,name=title,proto3" json:"title,omitempty"`
	// owner_grants describes the access granted by owners to this Access List.
	OwnerGrants   *AccessListGrants `protobuf:"bytes,11,opt,name=owner_grants,json=ownerGrants,proto3" json:"owner_grants,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AccessListSpec) Reset() {
	*x = AccessListSpec{}
	mi := &file_teleport_accesslist_v1_accesslist_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AccessListSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccessListSpec) ProtoMessage() {}

func (x *AccessListSpec) ProtoReflect() protoreflect.Message {
	mi := &file_teleport_accesslist_v1_accesslist_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccessListSpec.ProtoReflect.Descriptor instead.
func (*AccessListSpec) Descriptor() ([]byte, []int) {
	return file_teleport_accesslist_v1_accesslist_proto_rawDescGZIP(), []int{1}
}

func (x *AccessListSpec) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *AccessListSpec) GetOwners() []*AccessListOwner {
	if x != nil {
		return x.Owners
	}
	return nil
}

func (x *AccessListSpec) GetAudit() *AccessListAudit {
	if x != nil {
		return x.Audit
	}
	return nil
}

func (x *AccessListSpec) GetMembershipRequires() *AccessListRequires {
	if x != nil {
		return x.MembershipRequires
	}
	return nil
}

func (x *AccessListSpec) GetOwnershipRequires() *AccessListRequires {
	if x != nil {
		return x.OwnershipRequires
	}
	return nil
}

func (x *AccessListSpec) GetGrants() *AccessListGrants {
	if x != nil {
		return x.Grants
	}
	return nil
}

func (x *AccessListSpec) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *AccessListSpec) GetOwnerGrants() *AccessListGrants {
	if x != nil {
		return x.OwnerGrants
	}
	return nil
}

// AccessListOwner is an owner of an Access List.
type AccessListOwner struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// name is the username of the owner.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// description is the plaintext description of the owner and why they are an
	// owner.
	Description string `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	// ineligible_status describes if this owner is eligible or not
	// and if not, describes how they're lacking eligibility.
	IneligibleStatus IneligibleStatus `protobuf:"varint,3,opt,name=ineligible_status,json=ineligibleStatus,proto3,enum=teleport.accesslist.v1.IneligibleStatus" json:"ineligible_status,omitempty"`
	// membership_kind describes the type of membership, either
	// `MEMBERSHIP_KIND_USER` or `MEMBERSHIP_KIND_LIST`.
	MembershipKind MembershipKind `protobuf:"varint,4,opt,name=membership_kind,json=membershipKind,proto3,enum=teleport.accesslist.v1.MembershipKind" json:"membership_kind,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *AccessListOwner) Reset() {
	*x = AccessListOwner{}
	mi := &file_teleport_accesslist_v1_accesslist_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AccessListOwner) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccessListOwner) ProtoMessage() {}

func (x *AccessListOwner) ProtoReflect() protoreflect.Message {
	mi := &file_teleport_accesslist_v1_accesslist_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccessListOwner.ProtoReflect.Descriptor instead.
func (*AccessListOwner) Descriptor() ([]byte, []int) {
	return file_teleport_accesslist_v1_accesslist_proto_rawDescGZIP(), []int{2}
}

func (x *AccessListOwner) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AccessListOwner) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *AccessListOwner) GetIneligibleStatus() IneligibleStatus {
	if x != nil {
		return x.IneligibleStatus
	}
	return IneligibleStatus_INELIGIBLE_STATUS_UNSPECIFIED
}

func (x *AccessListOwner) GetMembershipKind() MembershipKind {
	if x != nil {
		return x.MembershipKind
	}
	return MembershipKind_MEMBERSHIP_KIND_UNSPECIFIED
}

// AccessListAudit describes the audit configuration for an Access List.
type AccessListAudit struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// next_audit_date is when the next audit date should be done by.
	NextAuditDate *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=next_audit_date,json=nextAuditDate,proto3" json:"next_audit_date,omitempty"`
	// recurrence is the recurrence definition
	Recurrence *Recurrence `protobuf:"bytes,3,opt,name=recurrence,proto3" json:"recurrence,omitempty"`
	// notifications is the configuration for notifying users.
	Notifications *Notifications `protobuf:"bytes,4,opt,name=notifications,proto3" json:"notifications,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AccessListAudit) Reset() {
	*x = AccessListAudit{}
	mi := &file_teleport_accesslist_v1_accesslist_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AccessListAudit) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccessListAudit) ProtoMessage() {}

func (x *AccessListAudit) ProtoReflect() protoreflect.Message {
	mi := &file_teleport_accesslist_v1_accesslist_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccessListAudit.ProtoReflect.Descriptor instead.
func (*AccessListAudit) Descriptor() ([]byte, []int) {
	return file_teleport_accesslist_v1_accesslist_proto_rawDescGZIP(), []int{3}
}

func (x *AccessListAudit) GetNextAuditDate() *timestamppb.Timestamp {
	if x != nil {
		return x.NextAuditDate
	}
	return nil
}

func (x *AccessListAudit) GetRecurrence() *Recurrence {
	if x != nil {
		return x.Recurrence
	}
	return nil
}

func (x *AccessListAudit) GetNotifications() *Notifications {
	if x != nil {
		return x.Notifications
	}
	return nil
}

// Recurrence is the definition for when reviews will be scheduled.
type Recurrence struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// frequency is the frequency of reviews. This represents the period in months
	// between two reviews.
	// Supported values are 0, 1, 3, 6, and 12.
	Frequency ReviewFrequency `protobuf:"varint,1,opt,name=frequency,proto3,enum=teleport.accesslist.v1.ReviewFrequency" json:"frequency,omitempty"`
	// day_of_month is the day of month that reviews will be scheduled on.
	// Supported values are 0, 1, 15, and 31.
	DayOfMonth    ReviewDayOfMonth `protobuf:"varint,2,opt,name=day_of_month,json=dayOfMonth,proto3,enum=teleport.accesslist.v1.ReviewDayOfMonth" json:"day_of_month,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Recurrence) Reset() {
	*x = Recurrence{}
	mi := &file_teleport_accesslist_v1_accesslist_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Recurrence) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Recurrence) ProtoMessage() {}

func (x *Recurrence) ProtoReflect() protoreflect.Message {
	mi := &file_teleport_accesslist_v1_accesslist_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Recurrence.ProtoReflect.Descriptor instead.
func (*Recurrence) Descriptor() ([]byte, []int) {
	return file_teleport_accesslist_v1_accesslist_proto_rawDescGZIP(), []int{4}
}

func (x *Recurrence) GetFrequency() ReviewFrequency {
	if x != nil {
		return x.Frequency
	}
	return ReviewFrequency_REVIEW_FREQUENCY_UNSPECIFIED
}

func (x *Recurrence) GetDayOfMonth() ReviewDayOfMonth {
	if x != nil {
		return x.DayOfMonth
	}
	return ReviewDayOfMonth_REVIEW_DAY_OF_MONTH_UNSPECIFIED
}

// Notifications contains the configuration for notifying users of a nearing
// next audit date.
type Notifications struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// start specifies when to start notifying users that the next audit date is
	// coming up.
	Start         *durationpb.Duration `protobuf:"bytes,1,opt,name=start,proto3" json:"start,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Notifications) Reset() {
	*x = Notifications{}
	mi := &file_teleport_accesslist_v1_accesslist_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Notifications) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Notifications) ProtoMessage() {}

func (x *Notifications) ProtoReflect() protoreflect.Message {
	mi := &file_teleport_accesslist_v1_accesslist_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Notifications.ProtoReflect.Descriptor instead.
func (*Notifications) Descriptor() ([]byte, []int) {
	return file_teleport_accesslist_v1_accesslist_proto_rawDescGZIP(), []int{5}
}

func (x *Notifications) GetStart() *durationpb.Duration {
	if x != nil {
		return x.Start
	}
	return nil
}

// AccessListRequires describes a requirement section for an Access List. A user
// must meet the following criteria to obtain the specific access to the list.
type AccessListRequires struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// roles are the user roles that must be present for the user to obtain
	// access.
	Roles []string `protobuf:"bytes,1,rep,name=roles,proto3" json:"roles,omitempty"`
	// traits are the traits that must be present for the user to obtain access.
	Traits        []*v11.Trait `protobuf:"bytes,2,rep,name=traits,proto3" json:"traits,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AccessListRequires) Reset() {
	*x = AccessListRequires{}
	mi := &file_teleport_accesslist_v1_accesslist_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AccessListRequires) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccessListRequires) ProtoMessage() {}

func (x *AccessListRequires) ProtoReflect() protoreflect.Message {
	mi := &file_teleport_accesslist_v1_accesslist_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccessListRequires.ProtoReflect.Descriptor instead.
func (*AccessListRequires) Descriptor() ([]byte, []int) {
	return file_teleport_accesslist_v1_accesslist_proto_rawDescGZIP(), []int{6}
}

func (x *AccessListRequires) GetRoles() []string {
	if x != nil {
		return x.Roles
	}
	return nil
}

func (x *AccessListRequires) GetTraits() []*v11.Trait {
	if x != nil {
		return x.Traits
	}
	return nil
}

// AccessListGrants describes what access is granted by membership to the Access
// List.
type AccessListGrants struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// roles are the roles that are granted to users who are members of the Access
	// List.
	Roles []string `protobuf:"bytes,1,rep,name=roles,proto3" json:"roles,omitempty"`
	// traits are the traits that are granted to users who are members of the
	// Access List.
	Traits        []*v11.Trait `protobuf:"bytes,2,rep,name=traits,proto3" json:"traits,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AccessListGrants) Reset() {
	*x = AccessListGrants{}
	mi := &file_teleport_accesslist_v1_accesslist_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AccessListGrants) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccessListGrants) ProtoMessage() {}

func (x *AccessListGrants) ProtoReflect() protoreflect.Message {
	mi := &file_teleport_accesslist_v1_accesslist_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccessListGrants.ProtoReflect.Descriptor instead.
func (*AccessListGrants) Descriptor() ([]byte, []int) {
	return file_teleport_accesslist_v1_accesslist_proto_rawDescGZIP(), []int{7}
}

func (x *AccessListGrants) GetRoles() []string {
	if x != nil {
		return x.Roles
	}
	return nil
}

func (x *AccessListGrants) GetTraits() []*v11.Trait {
	if x != nil {
		return x.Traits
	}
	return nil
}

// Member describes a member of an Access List.
type Member struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// header is the header for the resource.
	Header *v1.ResourceHeader `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	// spec is the specification for the Access List member.
	Spec          *MemberSpec `protobuf:"bytes,2,opt,name=spec,proto3" json:"spec,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Member) Reset() {
	*x = Member{}
	mi := &file_teleport_accesslist_v1_accesslist_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Member) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Member) ProtoMessage() {}

func (x *Member) ProtoReflect() protoreflect.Message {
	mi := &file_teleport_accesslist_v1_accesslist_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Member.ProtoReflect.Descriptor instead.
func (*Member) Descriptor() ([]byte, []int) {
	return file_teleport_accesslist_v1_accesslist_proto_rawDescGZIP(), []int{8}
}

func (x *Member) GetHeader() *v1.ResourceHeader {
	if x != nil {
		return x.Header
	}
	return nil
}

func (x *Member) GetSpec() *MemberSpec {
	if x != nil {
		return x.Spec
	}
	return nil
}

// MemberSpec is the specification for an Access List member.
type MemberSpec struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// associated Access List
	AccessList string `protobuf:"bytes,1,opt,name=access_list,json=accessList,proto3" json:"access_list,omitempty"`
	// name is the name of the member of the Access List.
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// joined is when the user joined the Access List.
	Joined *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=joined,proto3" json:"joined,omitempty"`
	// expires is when the user's membership to the Access List expires.
	Expires *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=expires,proto3" json:"expires,omitempty"`
	// reason is the reason this user was added to the Access List.
	Reason string `protobuf:"bytes,5,opt,name=reason,proto3" json:"reason,omitempty"`
	// added_by is the user that added this user to the Access List.
	AddedBy string `protobuf:"bytes,6,opt,name=added_by,json=addedBy,proto3" json:"added_by,omitempty"`
	// ineligible_status describes if this member is eligible or not
	// and if not, describes how they're lacking eligibility.
	IneligibleStatus IneligibleStatus `protobuf:"varint,7,opt,name=ineligible_status,json=ineligibleStatus,proto3,enum=teleport.accesslist.v1.IneligibleStatus" json:"ineligible_status,omitempty"`
	// membership_kind describes the type of membership, either
	// `MEMBERSHIP_KIND_USER` or `MEMBERSHIP_KIND_LIST`.
	MembershipKind MembershipKind `protobuf:"varint,9,opt,name=membership_kind,json=membershipKind,proto3,enum=teleport.accesslist.v1.MembershipKind" json:"membership_kind,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *MemberSpec) Reset() {
	*x = MemberSpec{}
	mi := &file_teleport_accesslist_v1_accesslist_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MemberSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MemberSpec) ProtoMessage() {}

func (x *MemberSpec) ProtoReflect() protoreflect.Message {
	mi := &file_teleport_accesslist_v1_accesslist_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MemberSpec.ProtoReflect.Descriptor instead.
func (*MemberSpec) Descriptor() ([]byte, []int) {
	return file_teleport_accesslist_v1_accesslist_proto_rawDescGZIP(), []int{9}
}

func (x *MemberSpec) GetAccessList() string {
	if x != nil {
		return x.AccessList
	}
	return ""
}

func (x *MemberSpec) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *MemberSpec) GetJoined() *timestamppb.Timestamp {
	if x != nil {
		return x.Joined
	}
	return nil
}

func (x *MemberSpec) GetExpires() *timestamppb.Timestamp {
	if x != nil {
		return x.Expires
	}
	return nil
}

func (x *MemberSpec) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

func (x *MemberSpec) GetAddedBy() string {
	if x != nil {
		return x.AddedBy
	}
	return ""
}

func (x *MemberSpec) GetIneligibleStatus() IneligibleStatus {
	if x != nil {
		return x.IneligibleStatus
	}
	return IneligibleStatus_INELIGIBLE_STATUS_UNSPECIFIED
}

func (x *MemberSpec) GetMembershipKind() MembershipKind {
	if x != nil {
		return x.MembershipKind
	}
	return MembershipKind_MEMBERSHIP_KIND_UNSPECIFIED
}

// Review is a review of an Access List.
type Review struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// header is the header for the resource.
	Header *v1.ResourceHeader `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	// spec is the specification for the Access List review.
	Spec          *ReviewSpec `protobuf:"bytes,2,opt,name=spec,proto3" json:"spec,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Review) Reset() {
	*x = Review{}
	mi := &file_teleport_accesslist_v1_accesslist_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Review) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Review) ProtoMessage() {}

func (x *Review) ProtoReflect() protoreflect.Message {
	mi := &file_teleport_accesslist_v1_accesslist_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Review.ProtoReflect.Descriptor instead.
func (*Review) Descriptor() ([]byte, []int) {
	return file_teleport_accesslist_v1_accesslist_proto_rawDescGZIP(), []int{10}
}

func (x *Review) GetHeader() *v1.ResourceHeader {
	if x != nil {
		return x.Header
	}
	return nil
}

func (x *Review) GetSpec() *ReviewSpec {
	if x != nil {
		return x.Spec
	}
	return nil
}

// ReviewSpec is the specification for an Access List review.
type ReviewSpec struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// access_list is the name of the Access List that this review is for.
	AccessList string `protobuf:"bytes,1,opt,name=access_list,json=accessList,proto3" json:"access_list,omitempty"`
	// reviewers are the users who performed the review.
	Reviewers []string `protobuf:"bytes,2,rep,name=reviewers,proto3" json:"reviewers,omitempty"`
	// review_date is the date that this review was created.
	ReviewDate *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=review_date,json=reviewDate,proto3" json:"review_date,omitempty"`
	// notes is an optional plaintext attached to the review that can be used by
	// the review for arbitrary note taking on the review.
	Notes string `protobuf:"bytes,4,opt,name=notes,proto3" json:"notes,omitempty"`
	// changes are the changes made as part of the review.
	Changes       *ReviewChanges `protobuf:"bytes,5,opt,name=changes,proto3" json:"changes,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReviewSpec) Reset() {
	*x = ReviewSpec{}
	mi := &file_teleport_accesslist_v1_accesslist_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReviewSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReviewSpec) ProtoMessage() {}

func (x *ReviewSpec) ProtoReflect() protoreflect.Message {
	mi := &file_teleport_accesslist_v1_accesslist_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReviewSpec.ProtoReflect.Descriptor instead.
func (*ReviewSpec) Descriptor() ([]byte, []int) {
	return file_teleport_accesslist_v1_accesslist_proto_rawDescGZIP(), []int{11}
}

func (x *ReviewSpec) GetAccessList() string {
	if x != nil {
		return x.AccessList
	}
	return ""
}

func (x *ReviewSpec) GetReviewers() []string {
	if x != nil {
		return x.Reviewers
	}
	return nil
}

func (x *ReviewSpec) GetReviewDate() *timestamppb.Timestamp {
	if x != nil {
		return x.ReviewDate
	}
	return nil
}

func (x *ReviewSpec) GetNotes() string {
	if x != nil {
		return x.Notes
	}
	return ""
}

func (x *ReviewSpec) GetChanges() *ReviewChanges {
	if x != nil {
		return x.Changes
	}
	return nil
}

// ReviewChanges are the changes that were made as part of the review.
type ReviewChanges struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// membership_requirements_changed is populated if the requirements were
	// changed as part of this review.
	MembershipRequirementsChanged *AccessListRequires `protobuf:"bytes,2,opt,name=membership_requirements_changed,json=membershipRequirementsChanged,proto3" json:"membership_requirements_changed,omitempty"`
	// removed_members contains the members that were removed as part of this
	// review.
	RemovedMembers []string `protobuf:"bytes,3,rep,name=removed_members,json=removedMembers,proto3" json:"removed_members,omitempty"`
	// review_frequency_changed is populated if the review frequency has changed.
	ReviewFrequencyChanged ReviewFrequency `protobuf:"varint,4,opt,name=review_frequency_changed,json=reviewFrequencyChanged,proto3,enum=teleport.accesslist.v1.ReviewFrequency" json:"review_frequency_changed,omitempty"`
	// review_day_of_month_changed is populated if the review day of month has
	// changed.
	ReviewDayOfMonthChanged ReviewDayOfMonth `protobuf:"varint,5,opt,name=review_day_of_month_changed,json=reviewDayOfMonthChanged,proto3,enum=teleport.accesslist.v1.ReviewDayOfMonth" json:"review_day_of_month_changed,omitempty"`
	unknownFields           protoimpl.UnknownFields
	sizeCache               protoimpl.SizeCache
}

func (x *ReviewChanges) Reset() {
	*x = ReviewChanges{}
	mi := &file_teleport_accesslist_v1_accesslist_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReviewChanges) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReviewChanges) ProtoMessage() {}

func (x *ReviewChanges) ProtoReflect() protoreflect.Message {
	mi := &file_teleport_accesslist_v1_accesslist_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReviewChanges.ProtoReflect.Descriptor instead.
func (*ReviewChanges) Descriptor() ([]byte, []int) {
	return file_teleport_accesslist_v1_accesslist_proto_rawDescGZIP(), []int{12}
}

func (x *ReviewChanges) GetMembershipRequirementsChanged() *AccessListRequires {
	if x != nil {
		return x.MembershipRequirementsChanged
	}
	return nil
}

func (x *ReviewChanges) GetRemovedMembers() []string {
	if x != nil {
		return x.RemovedMembers
	}
	return nil
}

func (x *ReviewChanges) GetReviewFrequencyChanged() ReviewFrequency {
	if x != nil {
		return x.ReviewFrequencyChanged
	}
	return ReviewFrequency_REVIEW_FREQUENCY_UNSPECIFIED
}

func (x *ReviewChanges) GetReviewDayOfMonthChanged() ReviewDayOfMonth {
	if x != nil {
		return x.ReviewDayOfMonthChanged
	}
	return ReviewDayOfMonth_REVIEW_DAY_OF_MONTH_UNSPECIFIED
}

// CurrentUserAssignments describes the current user's ownership and membership status in the access list.
type CurrentUserAssignments struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ownership_type represents the current user's ownership type (explicit, inherited, or none) in the access list.
	OwnershipType AccessListUserAssignmentType `protobuf:"varint,1,opt,name=ownership_type,json=ownershipType,proto3,enum=teleport.accesslist.v1.AccessListUserAssignmentType" json:"ownership_type,omitempty"`
	// membership_type represents the current user's membership type (explicit, inherited, or none) in the access list.
	MembershipType AccessListUserAssignmentType `protobuf:"varint,2,opt,name=membership_type,json=membershipType,proto3,enum=teleport.accesslist.v1.AccessListUserAssignmentType" json:"membership_type,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *CurrentUserAssignments) Reset() {
	*x = CurrentUserAssignments{}
	mi := &file_teleport_accesslist_v1_accesslist_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CurrentUserAssignments) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CurrentUserAssignments) ProtoMessage() {}

func (x *CurrentUserAssignments) ProtoReflect() protoreflect.Message {
	mi := &file_teleport_accesslist_v1_accesslist_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CurrentUserAssignments.ProtoReflect.Descriptor instead.
func (*CurrentUserAssignments) Descriptor() ([]byte, []int) {
	return file_teleport_accesslist_v1_accesslist_proto_rawDescGZIP(), []int{13}
}

func (x *CurrentUserAssignments) GetOwnershipType() AccessListUserAssignmentType {
	if x != nil {
		return x.OwnershipType
	}
	return AccessListUserAssignmentType_ACCESS_LIST_USER_ASSIGNMENT_TYPE_UNSPECIFIED
}

func (x *CurrentUserAssignments) GetMembershipType() AccessListUserAssignmentType {
	if x != nil {
		return x.MembershipType
	}
	return AccessListUserAssignmentType_ACCESS_LIST_USER_ASSIGNMENT_TYPE_UNSPECIFIED
}

// AccessListStatus contains dynamic fields calculated during retrieval.
type AccessListStatus struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// member_count is the number of members in the Access List.
	MemberCount *uint32 `protobuf:"varint,1,opt,name=member_count,json=memberCount,proto3,oneof" json:"member_count,omitempty"`
	// member_list_count is the number of nested list members in the Access List.
	MemberListCount *uint32 `protobuf:"varint,2,opt,name=member_list_count,json=memberListCount,proto3,oneof" json:"member_list_count,omitempty"`
	// owner_of describes Access Lists where this Access List is an explicit owner.
	OwnerOf []string `protobuf:"bytes,3,rep,name=owner_of,json=ownerOf,proto3" json:"owner_of,omitempty"`
	// member_of describes Access Lists where this Access List is an explicit member.
	MemberOf []string `protobuf:"bytes,4,rep,name=member_of,json=memberOf,proto3" json:"member_of,omitempty"`
	// current_user_assignments describes the current user's ownership and membership status in the access list.
	CurrentUserAssignments *CurrentUserAssignments `protobuf:"bytes,5,opt,name=current_user_assignments,json=currentUserAssignments,proto3" json:"current_user_assignments,omitempty"`
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *AccessListStatus) Reset() {
	*x = AccessListStatus{}
	mi := &file_teleport_accesslist_v1_accesslist_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AccessListStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccessListStatus) ProtoMessage() {}

func (x *AccessListStatus) ProtoReflect() protoreflect.Message {
	mi := &file_teleport_accesslist_v1_accesslist_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccessListStatus.ProtoReflect.Descriptor instead.
func (*AccessListStatus) Descriptor() ([]byte, []int) {
	return file_teleport_accesslist_v1_accesslist_proto_rawDescGZIP(), []int{14}
}

func (x *AccessListStatus) GetMemberCount() uint32 {
	if x != nil && x.MemberCount != nil {
		return *x.MemberCount
	}
	return 0
}

func (x *AccessListStatus) GetMemberListCount() uint32 {
	if x != nil && x.MemberListCount != nil {
		return *x.MemberListCount
	}
	return 0
}

func (x *AccessListStatus) GetOwnerOf() []string {
	if x != nil {
		return x.OwnerOf
	}
	return nil
}

func (x *AccessListStatus) GetMemberOf() []string {
	if x != nil {
		return x.MemberOf
	}
	return nil
}

func (x *AccessListStatus) GetCurrentUserAssignments() *CurrentUserAssignments {
	if x != nil {
		return x.CurrentUserAssignments
	}
	return nil
}

var File_teleport_accesslist_v1_accesslist_proto protoreflect.FileDescriptor

const file_teleport_accesslist_v1_accesslist_proto_rawDesc = "" +
	"\n" +
	"'teleport/accesslist/v1/accesslist.proto\x12\x16teleport.accesslist.v1\x1a\x1egoogle/protobuf/duration.proto\x1a\x1fgoogle/protobuf/timestamp.proto\x1a'teleport/header/v1/resourceheader.proto\x1a\x1dteleport/trait/v1/trait.proto\"\xc6\x01\n" +
	"\n" +
	"AccessList\x12:\n" +
	"\x06header\x18\x01 \x01(\v2\".teleport.header.v1.ResourceHeaderR\x06header\x12:\n" +
	"\x04spec\x18\x02 \x01(\v2&.teleport.accesslist.v1.AccessListSpecR\x04spec\x12@\n" +
	"\x06status\x18\x03 \x01(\v2(.teleport.accesslist.v1.AccessListStatusR\x06status\"\xc1\x04\n" +
	"\x0eAccessListSpec\x12 \n" +
	"\vdescription\x18\x01 \x01(\tR\vdescription\x12?\n" +
	"\x06owners\x18\x02 \x03(\v2'.teleport.accesslist.v1.AccessListOwnerR\x06owners\x12=\n" +
	"\x05audit\x18\x03 \x01(\v2'.teleport.accesslist.v1.AccessListAuditR\x05audit\x12[\n" +
	"\x13membership_requires\x18\x04 \x01(\v2*.teleport.accesslist.v1.AccessListRequiresR\x12membershipRequires\x12Y\n" +
	"\x12ownership_requires\x18\x05 \x01(\v2*.teleport.accesslist.v1.AccessListRequiresR\x11ownershipRequires\x12@\n" +
	"\x06grants\x18\x06 \x01(\v2(.teleport.accesslist.v1.AccessListGrantsR\x06grants\x12\x14\n" +
	"\x05title\x18\b \x01(\tR\x05title\x12K\n" +
	"\fowner_grants\x18\v \x01(\v2(.teleport.accesslist.v1.AccessListGrantsR\vownerGrantsJ\x04\b\a\x10\bJ\x04\b\t\x10\n" +
	"J\x04\b\n" +
	"\x10\vR\amembersR\n" +
	"membershipR\townership\"\xef\x01\n" +
	"\x0fAccessListOwner\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12 \n" +
	"\vdescription\x18\x02 \x01(\tR\vdescription\x12U\n" +
	"\x11ineligible_status\x18\x03 \x01(\x0e2(.teleport.accesslist.v1.IneligibleStatusR\x10ineligibleStatus\x12O\n" +
	"\x0fmembership_kind\x18\x04 \x01(\x0e2&.teleport.accesslist.v1.MembershipKindR\x0emembershipKind\"\xf7\x01\n" +
	"\x0fAccessListAudit\x12B\n" +
	"\x0fnext_audit_date\x18\x02 \x01(\v2\x1a.google.protobuf.TimestampR\rnextAuditDate\x12B\n" +
	"\n" +
	"recurrence\x18\x03 \x01(\v2\".teleport.accesslist.v1.RecurrenceR\n" +
	"recurrence\x12K\n" +
	"\rnotifications\x18\x04 \x01(\v2%.teleport.accesslist.v1.NotificationsR\rnotificationsJ\x04\b\x01\x10\x02R\tfrequency\"\x9f\x01\n" +
	"\n" +
	"Recurrence\x12E\n" +
	"\tfrequency\x18\x01 \x01(\x0e2'.teleport.accesslist.v1.ReviewFrequencyR\tfrequency\x12J\n" +
	"\fday_of_month\x18\x02 \x01(\x0e2(.teleport.accesslist.v1.ReviewDayOfMonthR\n" +
	"dayOfMonth\"@\n" +
	"\rNotifications\x12/\n" +
	"\x05start\x18\x01 \x01(\v2\x19.google.protobuf.DurationR\x05start\"\\\n" +
	"\x12AccessListRequires\x12\x14\n" +
	"\x05roles\x18\x01 \x03(\tR\x05roles\x120\n" +
	"\x06traits\x18\x02 \x03(\v2\x18.teleport.trait.v1.TraitR\x06traits\"Z\n" +
	"\x10AccessListGrants\x12\x14\n" +
	"\x05roles\x18\x01 \x03(\tR\x05roles\x120\n" +
	"\x06traits\x18\x02 \x03(\v2\x18.teleport.trait.v1.TraitR\x06traits\"|\n" +
	"\x06Member\x12:\n" +
	"\x06header\x18\x01 \x01(\v2\".teleport.header.v1.ResourceHeaderR\x06header\x126\n" +
	"\x04spec\x18\x02 \x01(\v2\".teleport.accesslist.v1.MemberSpecR\x04spec\"\x98\x03\n" +
	"\n" +
	"MemberSpec\x12\x1f\n" +
	"\vaccess_list\x18\x01 \x01(\tR\n" +
	"accessList\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x122\n" +
	"\x06joined\x18\x03 \x01(\v2\x1a.google.protobuf.TimestampR\x06joined\x124\n" +
	"\aexpires\x18\x04 \x01(\v2\x1a.google.protobuf.TimestampR\aexpires\x12\x16\n" +
	"\x06reason\x18\x05 \x01(\tR\x06reason\x12\x19\n" +
	"\badded_by\x18\x06 \x01(\tR\aaddedBy\x12U\n" +
	"\x11ineligible_status\x18\a \x01(\x0e2(.teleport.accesslist.v1.IneligibleStatusR\x10ineligibleStatus\x12O\n" +
	"\x0fmembership_kind\x18\t \x01(\x0e2&.teleport.accesslist.v1.MembershipKindR\x0emembershipKindJ\x04\b\b\x10\tR\n" +
	"membership\"|\n" +
	"\x06Review\x12:\n" +
	"\x06header\x18\x01 \x01(\v2\".teleport.header.v1.ResourceHeaderR\x06header\x126\n" +
	"\x04spec\x18\x02 \x01(\v2\".teleport.accesslist.v1.ReviewSpecR\x04spec\"\xdf\x01\n" +
	"\n" +
	"ReviewSpec\x12\x1f\n" +
	"\vaccess_list\x18\x01 \x01(\tR\n" +
	"accessList\x12\x1c\n" +
	"\treviewers\x18\x02 \x03(\tR\treviewers\x12;\n" +
	"\vreview_date\x18\x03 \x01(\v2\x1a.google.protobuf.TimestampR\n" +
	"reviewDate\x12\x14\n" +
	"\x05notes\x18\x04 \x01(\tR\x05notes\x12?\n" +
	"\achanges\x18\x05 \x01(\v2%.teleport.accesslist.v1.ReviewChangesR\achanges\"\x90\x03\n" +
	"\rReviewChanges\x12r\n" +
	"\x1fmembership_requirements_changed\x18\x02 \x01(\v2*.teleport.accesslist.v1.AccessListRequiresR\x1dmembershipRequirementsChanged\x12'\n" +
	"\x0fremoved_members\x18\x03 \x03(\tR\x0eremovedMembers\x12a\n" +
	"\x18review_frequency_changed\x18\x04 \x01(\x0e2'.teleport.accesslist.v1.ReviewFrequencyR\x16reviewFrequencyChanged\x12f\n" +
	"\x1breview_day_of_month_changed\x18\x05 \x01(\x0e2(.teleport.accesslist.v1.ReviewDayOfMonthR\x17reviewDayOfMonthChangedJ\x04\b\x01\x10\x02R\x11frequency_changed\"\xd4\x01\n" +
	"\x16CurrentUserAssignments\x12[\n" +
	"\x0eownership_type\x18\x01 \x01(\x0e24.teleport.accesslist.v1.AccessListUserAssignmentTypeR\rownershipType\x12]\n" +
	"\x0fmembership_type\x18\x02 \x01(\x0e24.teleport.accesslist.v1.AccessListUserAssignmentTypeR\x0emembershipType\"\xb4\x02\n" +
	"\x10AccessListStatus\x12&\n" +
	"\fmember_count\x18\x01 \x01(\rH\x00R\vmemberCount\x88\x01\x01\x12/\n" +
	"\x11member_list_count\x18\x02 \x01(\rH\x01R\x0fmemberListCount\x88\x01\x01\x12\x19\n" +
	"\bowner_of\x18\x03 \x03(\tR\aownerOf\x12\x1b\n" +
	"\tmember_of\x18\x04 \x03(\tR\bmemberOf\x12h\n" +
	"\x18current_user_assignments\x18\x05 \x01(\v2..teleport.accesslist.v1.CurrentUserAssignmentsR\x16currentUserAssignmentsB\x0f\n" +
	"\r_member_countB\x14\n" +
	"\x12_member_list_count*\xb6\x01\n" +
	"\x0fReviewFrequency\x12 \n" +
	"\x1cREVIEW_FREQUENCY_UNSPECIFIED\x10\x00\x12\x1e\n" +
	"\x1aREVIEW_FREQUENCY_ONE_MONTH\x10\x01\x12!\n" +
	"\x1dREVIEW_FREQUENCY_THREE_MONTHS\x10\x03\x12\x1f\n" +
	"\x1bREVIEW_FREQUENCY_SIX_MONTHS\x10\x06\x12\x1d\n" +
	"\x19REVIEW_FREQUENCY_ONE_YEAR\x10\f*\x97\x01\n" +
	"\x10ReviewDayOfMonth\x12#\n" +
	"\x1fREVIEW_DAY_OF_MONTH_UNSPECIFIED\x10\x00\x12\x1d\n" +
	"\x19REVIEW_DAY_OF_MONTH_FIRST\x10\x01\x12!\n" +
	"\x1dREVIEW_DAY_OF_MONTH_FIFTEENTH\x10\x0f\x12\x1c\n" +
	"\x18REVIEW_DAY_OF_MONTH_LAST\x10\x1f*e\n" +
	"\x0eMembershipKind\x12\x1f\n" +
	"\x1bMEMBERSHIP_KIND_UNSPECIFIED\x10\x00\x12\x18\n" +
	"\x14MEMBERSHIP_KIND_USER\x10\x01\x12\x18\n" +
	"\x14MEMBERSHIP_KIND_LIST\x10\x02*\xc6\x01\n" +
	"\x10IneligibleStatus\x12!\n" +
	"\x1dINELIGIBLE_STATUS_UNSPECIFIED\x10\x00\x12\x1e\n" +
	"\x1aINELIGIBLE_STATUS_ELIGIBLE\x10\x01\x12$\n" +
	" INELIGIBLE_STATUS_USER_NOT_EXIST\x10\x02\x12*\n" +
	"&INELIGIBLE_STATUS_MISSING_REQUIREMENTS\x10\x03\x12\x1d\n" +
	"\x19INELIGIBLE_STATUS_EXPIRED\x10\x04*\xaf\x01\n" +
	"\x1cAccessListUserAssignmentType\x120\n" +
	",ACCESS_LIST_USER_ASSIGNMENT_TYPE_UNSPECIFIED\x10\x00\x12-\n" +
	")ACCESS_LIST_USER_ASSIGNMENT_TYPE_EXPLICIT\x10\x01\x12.\n" +
	"*ACCESS_LIST_USER_ASSIGNMENT_TYPE_INHERITED\x10\x02BXZVgithub.com/gravitational/teleport/api/gen/proto/go/teleport/accesslist/v1;accesslistv1b\x06proto3"

var (
	file_teleport_accesslist_v1_accesslist_proto_rawDescOnce sync.Once
	file_teleport_accesslist_v1_accesslist_proto_rawDescData []byte
)

func file_teleport_accesslist_v1_accesslist_proto_rawDescGZIP() []byte {
	file_teleport_accesslist_v1_accesslist_proto_rawDescOnce.Do(func() {
		file_teleport_accesslist_v1_accesslist_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_teleport_accesslist_v1_accesslist_proto_rawDesc), len(file_teleport_accesslist_v1_accesslist_proto_rawDesc)))
	})
	return file_teleport_accesslist_v1_accesslist_proto_rawDescData
}

var file_teleport_accesslist_v1_accesslist_proto_enumTypes = make([]protoimpl.EnumInfo, 5)
var file_teleport_accesslist_v1_accesslist_proto_msgTypes = make([]protoimpl.MessageInfo, 15)
var file_teleport_accesslist_v1_accesslist_proto_goTypes = []any{
	(ReviewFrequency)(0),              // 0: teleport.accesslist.v1.ReviewFrequency
	(ReviewDayOfMonth)(0),             // 1: teleport.accesslist.v1.ReviewDayOfMonth
	(MembershipKind)(0),               // 2: teleport.accesslist.v1.MembershipKind
	(IneligibleStatus)(0),             // 3: teleport.accesslist.v1.IneligibleStatus
	(AccessListUserAssignmentType)(0), // 4: teleport.accesslist.v1.AccessListUserAssignmentType
	(*AccessList)(nil),                // 5: teleport.accesslist.v1.AccessList
	(*AccessListSpec)(nil),            // 6: teleport.accesslist.v1.AccessListSpec
	(*AccessListOwner)(nil),           // 7: teleport.accesslist.v1.AccessListOwner
	(*AccessListAudit)(nil),           // 8: teleport.accesslist.v1.AccessListAudit
	(*Recurrence)(nil),                // 9: teleport.accesslist.v1.Recurrence
	(*Notifications)(nil),             // 10: teleport.accesslist.v1.Notifications
	(*AccessListRequires)(nil),        // 11: teleport.accesslist.v1.AccessListRequires
	(*AccessListGrants)(nil),          // 12: teleport.accesslist.v1.AccessListGrants
	(*Member)(nil),                    // 13: teleport.accesslist.v1.Member
	(*MemberSpec)(nil),                // 14: teleport.accesslist.v1.MemberSpec
	(*Review)(nil),                    // 15: teleport.accesslist.v1.Review
	(*ReviewSpec)(nil),                // 16: teleport.accesslist.v1.ReviewSpec
	(*ReviewChanges)(nil),             // 17: teleport.accesslist.v1.ReviewChanges
	(*CurrentUserAssignments)(nil),    // 18: teleport.accesslist.v1.CurrentUserAssignments
	(*AccessListStatus)(nil),          // 19: teleport.accesslist.v1.AccessListStatus
	(*v1.ResourceHeader)(nil),         // 20: teleport.header.v1.ResourceHeader
	(*timestamppb.Timestamp)(nil),     // 21: google.protobuf.Timestamp
	(*durationpb.Duration)(nil),       // 22: google.protobuf.Duration
	(*v11.Trait)(nil),                 // 23: teleport.trait.v1.Trait
}
var file_teleport_accesslist_v1_accesslist_proto_depIdxs = []int32{
	20, // 0: teleport.accesslist.v1.AccessList.header:type_name -> teleport.header.v1.ResourceHeader
	6,  // 1: teleport.accesslist.v1.AccessList.spec:type_name -> teleport.accesslist.v1.AccessListSpec
	19, // 2: teleport.accesslist.v1.AccessList.status:type_name -> teleport.accesslist.v1.AccessListStatus
	7,  // 3: teleport.accesslist.v1.AccessListSpec.owners:type_name -> teleport.accesslist.v1.AccessListOwner
	8,  // 4: teleport.accesslist.v1.AccessListSpec.audit:type_name -> teleport.accesslist.v1.AccessListAudit
	11, // 5: teleport.accesslist.v1.AccessListSpec.membership_requires:type_name -> teleport.accesslist.v1.AccessListRequires
	11, // 6: teleport.accesslist.v1.AccessListSpec.ownership_requires:type_name -> teleport.accesslist.v1.AccessListRequires
	12, // 7: teleport.accesslist.v1.AccessListSpec.grants:type_name -> teleport.accesslist.v1.AccessListGrants
	12, // 8: teleport.accesslist.v1.AccessListSpec.owner_grants:type_name -> teleport.accesslist.v1.AccessListGrants
	3,  // 9: teleport.accesslist.v1.AccessListOwner.ineligible_status:type_name -> teleport.accesslist.v1.IneligibleStatus
	2,  // 10: teleport.accesslist.v1.AccessListOwner.membership_kind:type_name -> teleport.accesslist.v1.MembershipKind
	21, // 11: teleport.accesslist.v1.AccessListAudit.next_audit_date:type_name -> google.protobuf.Timestamp
	9,  // 12: teleport.accesslist.v1.AccessListAudit.recurrence:type_name -> teleport.accesslist.v1.Recurrence
	10, // 13: teleport.accesslist.v1.AccessListAudit.notifications:type_name -> teleport.accesslist.v1.Notifications
	0,  // 14: teleport.accesslist.v1.Recurrence.frequency:type_name -> teleport.accesslist.v1.ReviewFrequency
	1,  // 15: teleport.accesslist.v1.Recurrence.day_of_month:type_name -> teleport.accesslist.v1.ReviewDayOfMonth
	22, // 16: teleport.accesslist.v1.Notifications.start:type_name -> google.protobuf.Duration
	23, // 17: teleport.accesslist.v1.AccessListRequires.traits:type_name -> teleport.trait.v1.Trait
	23, // 18: teleport.accesslist.v1.AccessListGrants.traits:type_name -> teleport.trait.v1.Trait
	20, // 19: teleport.accesslist.v1.Member.header:type_name -> teleport.header.v1.ResourceHeader
	14, // 20: teleport.accesslist.v1.Member.spec:type_name -> teleport.accesslist.v1.MemberSpec
	21, // 21: teleport.accesslist.v1.MemberSpec.joined:type_name -> google.protobuf.Timestamp
	21, // 22: teleport.accesslist.v1.MemberSpec.expires:type_name -> google.protobuf.Timestamp
	3,  // 23: teleport.accesslist.v1.MemberSpec.ineligible_status:type_name -> teleport.accesslist.v1.IneligibleStatus
	2,  // 24: teleport.accesslist.v1.MemberSpec.membership_kind:type_name -> teleport.accesslist.v1.MembershipKind
	20, // 25: teleport.accesslist.v1.Review.header:type_name -> teleport.header.v1.ResourceHeader
	16, // 26: teleport.accesslist.v1.Review.spec:type_name -> teleport.accesslist.v1.ReviewSpec
	21, // 27: teleport.accesslist.v1.ReviewSpec.review_date:type_name -> google.protobuf.Timestamp
	17, // 28: teleport.accesslist.v1.ReviewSpec.changes:type_name -> teleport.accesslist.v1.ReviewChanges
	11, // 29: teleport.accesslist.v1.ReviewChanges.membership_requirements_changed:type_name -> teleport.accesslist.v1.AccessListRequires
	0,  // 30: teleport.accesslist.v1.ReviewChanges.review_frequency_changed:type_name -> teleport.accesslist.v1.ReviewFrequency
	1,  // 31: teleport.accesslist.v1.ReviewChanges.review_day_of_month_changed:type_name -> teleport.accesslist.v1.ReviewDayOfMonth
	4,  // 32: teleport.accesslist.v1.CurrentUserAssignments.ownership_type:type_name -> teleport.accesslist.v1.AccessListUserAssignmentType
	4,  // 33: teleport.accesslist.v1.CurrentUserAssignments.membership_type:type_name -> teleport.accesslist.v1.AccessListUserAssignmentType
	18, // 34: teleport.accesslist.v1.AccessListStatus.current_user_assignments:type_name -> teleport.accesslist.v1.CurrentUserAssignments
	35, // [35:35] is the sub-list for method output_type
	35, // [35:35] is the sub-list for method input_type
	35, // [35:35] is the sub-list for extension type_name
	35, // [35:35] is the sub-list for extension extendee
	0,  // [0:35] is the sub-list for field type_name
}

func init() { file_teleport_accesslist_v1_accesslist_proto_init() }
func file_teleport_accesslist_v1_accesslist_proto_init() {
	if File_teleport_accesslist_v1_accesslist_proto != nil {
		return
	}
	file_teleport_accesslist_v1_accesslist_proto_msgTypes[14].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_teleport_accesslist_v1_accesslist_proto_rawDesc), len(file_teleport_accesslist_v1_accesslist_proto_rawDesc)),
			NumEnums:      5,
			NumMessages:   15,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_teleport_accesslist_v1_accesslist_proto_goTypes,
		DependencyIndexes: file_teleport_accesslist_v1_accesslist_proto_depIdxs,
		EnumInfos:         file_teleport_accesslist_v1_accesslist_proto_enumTypes,
		MessageInfos:      file_teleport_accesslist_v1_accesslist_proto_msgTypes,
	}.Build()
	File_teleport_accesslist_v1_accesslist_proto = out.File
	file_teleport_accesslist_v1_accesslist_proto_goTypes = nil
	file_teleport_accesslist_v1_accesslist_proto_depIdxs = nil
}
