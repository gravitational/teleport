// Copyright 2025 Gravitational, Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: teleport/summarizer/v1/summarizer.proto

package summarizerv1

import (
	v1 "github.com/gravitational/teleport/api/gen/proto/go/teleport/header/v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// SummarizationInferenceModel resource specifies a session summarization
// inference model configuration. It tells Teleport how to use a specific
// provider and model to summarize sessions.
type SummarizationInferenceModel struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Kind is the resource kind. Should always be set to
	// "summarization_inference_model".
	Kind string `protobuf:"bytes,1,opt,name=kind,proto3" json:"kind,omitempty"`
	// SubKind is the resource sub-kind. Should be empty.
	SubKind string `protobuf:"bytes,2,opt,name=sub_kind,json=subKind,proto3" json:"sub_kind,omitempty"`
	// Version is the resource version. Should be set to "v1".
	Version       string                           `protobuf:"bytes,3,opt,name=version,proto3" json:"version,omitempty"`
	Metadata      *v1.Metadata                     `protobuf:"bytes,4,opt,name=metadata,proto3" json:"metadata,omitempty"`
	Spec          *SummarizationInferenceModelSpec `protobuf:"bytes,5,opt,name=spec,proto3" json:"spec,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SummarizationInferenceModel) Reset() {
	*x = SummarizationInferenceModel{}
	mi := &file_teleport_summarizer_v1_summarizer_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SummarizationInferenceModel) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SummarizationInferenceModel) ProtoMessage() {}

func (x *SummarizationInferenceModel) ProtoReflect() protoreflect.Message {
	mi := &file_teleport_summarizer_v1_summarizer_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SummarizationInferenceModel.ProtoReflect.Descriptor instead.
func (*SummarizationInferenceModel) Descriptor() ([]byte, []int) {
	return file_teleport_summarizer_v1_summarizer_proto_rawDescGZIP(), []int{0}
}

func (x *SummarizationInferenceModel) GetKind() string {
	if x != nil {
		return x.Kind
	}
	return ""
}

func (x *SummarizationInferenceModel) GetSubKind() string {
	if x != nil {
		return x.SubKind
	}
	return ""
}

func (x *SummarizationInferenceModel) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *SummarizationInferenceModel) GetMetadata() *v1.Metadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *SummarizationInferenceModel) GetSpec() *SummarizationInferenceModelSpec {
	if x != nil {
		return x.Spec
	}
	return nil
}

// SummarizationInferenceModelSpec specifies the inference provider and
// provider-specific parameters.
type SummarizationInferenceModelSpec struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Provider:
	//
	//	*SummarizationInferenceModelSpec_Openai
	Provider      isSummarizationInferenceModelSpec_Provider `protobuf_oneof:"provider"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SummarizationInferenceModelSpec) Reset() {
	*x = SummarizationInferenceModelSpec{}
	mi := &file_teleport_summarizer_v1_summarizer_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SummarizationInferenceModelSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SummarizationInferenceModelSpec) ProtoMessage() {}

func (x *SummarizationInferenceModelSpec) ProtoReflect() protoreflect.Message {
	mi := &file_teleport_summarizer_v1_summarizer_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SummarizationInferenceModelSpec.ProtoReflect.Descriptor instead.
func (*SummarizationInferenceModelSpec) Descriptor() ([]byte, []int) {
	return file_teleport_summarizer_v1_summarizer_proto_rawDescGZIP(), []int{1}
}

func (x *SummarizationInferenceModelSpec) GetProvider() isSummarizationInferenceModelSpec_Provider {
	if x != nil {
		return x.Provider
	}
	return nil
}

func (x *SummarizationInferenceModelSpec) GetOpenai() *OpenAIProvider {
	if x != nil {
		if x, ok := x.Provider.(*SummarizationInferenceModelSpec_Openai); ok {
			return x.Openai
		}
	}
	return nil
}

type isSummarizationInferenceModelSpec_Provider interface {
	isSummarizationInferenceModelSpec_Provider()
}

type SummarizationInferenceModelSpec_Openai struct {
	// Openai indicates that this model uses OpenAI as the inference provider
	// and specifies OpenAI-specific parameters.
	Openai *OpenAIProvider `protobuf:"bytes,1,opt,name=openai,proto3,oneof"`
}

func (*SummarizationInferenceModelSpec_Openai) isSummarizationInferenceModelSpec_Provider() {}

// OpenAIProvider specifies OpenAI-specific parameters. It can be used to
// configure OpenAI or an OpenAI-compatible API, such as LiteLLM.
type OpenAIProvider struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// OpenaiModelId specifies the model ID, as understood by the OpenAI API.
	OpenaiModelId string `protobuf:"bytes,1,opt,name=openai_model_id,json=openaiModelId,proto3" json:"openai_model_id,omitempty"`
	// Temperature controls the randomness of the model's output.
	Temperature float64 `protobuf:"fixed64,2,opt,name=temperature,proto3" json:"temperature,omitempty"`
	// ApiKeySecretRef is a reference to an SummarizationInferenceSecret that
	// contains the OpenAI API key.
	ApiKeySecretRef string `protobuf:"bytes,3,opt,name=api_key_secret_ref,json=apiKeySecretRef,proto3" json:"api_key_secret_ref,omitempty"`
	// BaseUrl is the OpenAI API base URL. Optional, defaults to the public
	// OpenAI API URL. May be used to point to a custom OpenAI-compatible API,
	// such as LiteLLM. In such case, the `api_key_secret_ref` must point to a
	// secret that contains the API key for that custom API.
	BaseUrl       string `protobuf:"bytes,4,opt,name=base_url,json=baseUrl,proto3" json:"base_url,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *OpenAIProvider) Reset() {
	*x = OpenAIProvider{}
	mi := &file_teleport_summarizer_v1_summarizer_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OpenAIProvider) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OpenAIProvider) ProtoMessage() {}

func (x *OpenAIProvider) ProtoReflect() protoreflect.Message {
	mi := &file_teleport_summarizer_v1_summarizer_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OpenAIProvider.ProtoReflect.Descriptor instead.
func (*OpenAIProvider) Descriptor() ([]byte, []int) {
	return file_teleport_summarizer_v1_summarizer_proto_rawDescGZIP(), []int{2}
}

func (x *OpenAIProvider) GetOpenaiModelId() string {
	if x != nil {
		return x.OpenaiModelId
	}
	return ""
}

func (x *OpenAIProvider) GetTemperature() float64 {
	if x != nil {
		return x.Temperature
	}
	return 0
}

func (x *OpenAIProvider) GetApiKeySecretRef() string {
	if x != nil {
		return x.ApiKeySecretRef
	}
	return ""
}

func (x *OpenAIProvider) GetBaseUrl() string {
	if x != nil {
		return x.BaseUrl
	}
	return ""
}

// SummarizationInferenceSecret resource stores session summarization inference
// provider secrets, such as API keys. They need to be referenced by
// appropriate provider configuration inside `SummarizationInferenceModelSpec`.
type SummarizationInferenceSecret struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Kind is the resource kind. Should always be set to
	// "summarization_inference_secret".
	Kind string `protobuf:"bytes,1,opt,name=kind,proto3" json:"kind,omitempty"`
	// SubKind is the resource sub-kind. Should be empty.
	SubKind string `protobuf:"bytes,2,opt,name=sub_kind,json=subKind,proto3" json:"sub_kind,omitempty"`
	// Version is the resource version. Should be set to "v1".
	Version  string       `protobuf:"bytes,3,opt,name=version,proto3" json:"version,omitempty"`
	Metadata *v1.Metadata `protobuf:"bytes,4,opt,name=metadata,proto3" json:"metadata,omitempty"`
	// Spec contains the secret value. Once set, it can only be read by Teleport
	// itself; it will not be returned in API responses.
	Spec          *SummarizationInferenceSecretSpec `protobuf:"bytes,5,opt,name=spec,proto3" json:"spec,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SummarizationInferenceSecret) Reset() {
	*x = SummarizationInferenceSecret{}
	mi := &file_teleport_summarizer_v1_summarizer_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SummarizationInferenceSecret) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SummarizationInferenceSecret) ProtoMessage() {}

func (x *SummarizationInferenceSecret) ProtoReflect() protoreflect.Message {
	mi := &file_teleport_summarizer_v1_summarizer_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SummarizationInferenceSecret.ProtoReflect.Descriptor instead.
func (*SummarizationInferenceSecret) Descriptor() ([]byte, []int) {
	return file_teleport_summarizer_v1_summarizer_proto_rawDescGZIP(), []int{3}
}

func (x *SummarizationInferenceSecret) GetKind() string {
	if x != nil {
		return x.Kind
	}
	return ""
}

func (x *SummarizationInferenceSecret) GetSubKind() string {
	if x != nil {
		return x.SubKind
	}
	return ""
}

func (x *SummarizationInferenceSecret) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *SummarizationInferenceSecret) GetMetadata() *v1.Metadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *SummarizationInferenceSecret) GetSpec() *SummarizationInferenceSecretSpec {
	if x != nil {
		return x.Spec
	}
	return nil
}

// SummarizationInferenceSecretSpec defines the secret value for the inference
// model.
type SummarizationInferenceSecretSpec struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Value is the secret value, such as an API key.
	Value         string `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SummarizationInferenceSecretSpec) Reset() {
	*x = SummarizationInferenceSecretSpec{}
	mi := &file_teleport_summarizer_v1_summarizer_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SummarizationInferenceSecretSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SummarizationInferenceSecretSpec) ProtoMessage() {}

func (x *SummarizationInferenceSecretSpec) ProtoReflect() protoreflect.Message {
	mi := &file_teleport_summarizer_v1_summarizer_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SummarizationInferenceSecretSpec.ProtoReflect.Descriptor instead.
func (*SummarizationInferenceSecretSpec) Descriptor() ([]byte, []int) {
	return file_teleport_summarizer_v1_summarizer_proto_rawDescGZIP(), []int{4}
}

func (x *SummarizationInferenceSecretSpec) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

// SummarizationInferencePolicy resource maps sessions to summarization models.
type SummarizationInferencePolicy struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Kind is the resource kind. Should always be set to
	// "summarization_inference_policy".
	Kind string `protobuf:"bytes,1,opt,name=kind,proto3" json:"kind,omitempty"`
	// SubKind is the resource sub-kind. Should be empty.
	SubKind string `protobuf:"bytes,2,opt,name=sub_kind,json=subKind,proto3" json:"sub_kind,omitempty"`
	// Version is the resource version. Should be set to "v1".
	Version       string                            `protobuf:"bytes,3,opt,name=version,proto3" json:"version,omitempty"`
	Metadata      *v1.Metadata                      `protobuf:"bytes,4,opt,name=metadata,proto3" json:"metadata,omitempty"`
	Spec          *SummarizationInferencePolicySpec `protobuf:"bytes,5,opt,name=spec,proto3" json:"spec,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SummarizationInferencePolicy) Reset() {
	*x = SummarizationInferencePolicy{}
	mi := &file_teleport_summarizer_v1_summarizer_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SummarizationInferencePolicy) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SummarizationInferencePolicy) ProtoMessage() {}

func (x *SummarizationInferencePolicy) ProtoReflect() protoreflect.Message {
	mi := &file_teleport_summarizer_v1_summarizer_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SummarizationInferencePolicy.ProtoReflect.Descriptor instead.
func (*SummarizationInferencePolicy) Descriptor() ([]byte, []int) {
	return file_teleport_summarizer_v1_summarizer_proto_rawDescGZIP(), []int{5}
}

func (x *SummarizationInferencePolicy) GetKind() string {
	if x != nil {
		return x.Kind
	}
	return ""
}

func (x *SummarizationInferencePolicy) GetSubKind() string {
	if x != nil {
		return x.SubKind
	}
	return ""
}

func (x *SummarizationInferencePolicy) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *SummarizationInferencePolicy) GetMetadata() *v1.Metadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *SummarizationInferencePolicy) GetSpec() *SummarizationInferencePolicySpec {
	if x != nil {
		return x.Spec
	}
	return nil
}

// SummarizationInferencePolicySpec maps sessions to summarization models using
// a filter.
type SummarizationInferencePolicySpec struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Kinds are session kinds matched by this policy, e.g., "ssh", "k8s", "db"
	Kinds []string `protobuf:"bytes,1,rep,name=kinds,proto3" json:"kinds,omitempty"`
	// Model is the name of the `SummarizationInferenceModel` resource to be used
	// for summarization.
	Model string `protobuf:"bytes,2,opt,name=model,proto3" json:"model,omitempty"`
	// Filter is an optional filter expression using Teleport Predicate Language
	// to select sessions for summarization. If it's empty, all sessions that
	// match the list of kinds will be summarized using this model.
	Filter        string `protobuf:"bytes,3,opt,name=filter,proto3" json:"filter,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SummarizationInferencePolicySpec) Reset() {
	*x = SummarizationInferencePolicySpec{}
	mi := &file_teleport_summarizer_v1_summarizer_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SummarizationInferencePolicySpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SummarizationInferencePolicySpec) ProtoMessage() {}

func (x *SummarizationInferencePolicySpec) ProtoReflect() protoreflect.Message {
	mi := &file_teleport_summarizer_v1_summarizer_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SummarizationInferencePolicySpec.ProtoReflect.Descriptor instead.
func (*SummarizationInferencePolicySpec) Descriptor() ([]byte, []int) {
	return file_teleport_summarizer_v1_summarizer_proto_rawDescGZIP(), []int{6}
}

func (x *SummarizationInferencePolicySpec) GetKinds() []string {
	if x != nil {
		return x.Kinds
	}
	return nil
}

func (x *SummarizationInferencePolicySpec) GetModel() string {
	if x != nil {
		return x.Model
	}
	return ""
}

func (x *SummarizationInferencePolicySpec) GetFilter() string {
	if x != nil {
		return x.Filter
	}
	return ""
}

var File_teleport_summarizer_v1_summarizer_proto protoreflect.FileDescriptor

const file_teleport_summarizer_v1_summarizer_proto_rawDesc = "" +
	"\n" +
	"'teleport/summarizer/v1/summarizer.proto\x12\x16teleport.summarizer.v1\x1a!teleport/header/v1/metadata.proto\"\xed\x01\n" +
	"\x1bSummarizationInferenceModel\x12\x12\n" +
	"\x04kind\x18\x01 \x01(\tR\x04kind\x12\x19\n" +
	"\bsub_kind\x18\x02 \x01(\tR\asubKind\x12\x18\n" +
	"\aversion\x18\x03 \x01(\tR\aversion\x128\n" +
	"\bmetadata\x18\x04 \x01(\v2\x1c.teleport.header.v1.MetadataR\bmetadata\x12K\n" +
	"\x04spec\x18\x05 \x01(\v27.teleport.summarizer.v1.SummarizationInferenceModelSpecR\x04spec\"o\n" +
	"\x1fSummarizationInferenceModelSpec\x12@\n" +
	"\x06openai\x18\x01 \x01(\v2&.teleport.summarizer.v1.OpenAIProviderH\x00R\x06openaiB\n" +
	"\n" +
	"\bprovider\"\xa2\x01\n" +
	"\x0eOpenAIProvider\x12&\n" +
	"\x0fopenai_model_id\x18\x01 \x01(\tR\ropenaiModelId\x12 \n" +
	"\vtemperature\x18\x02 \x01(\x01R\vtemperature\x12+\n" +
	"\x12api_key_secret_ref\x18\x03 \x01(\tR\x0fapiKeySecretRef\x12\x19\n" +
	"\bbase_url\x18\x04 \x01(\tR\abaseUrl\"\xef\x01\n" +
	"\x1cSummarizationInferenceSecret\x12\x12\n" +
	"\x04kind\x18\x01 \x01(\tR\x04kind\x12\x19\n" +
	"\bsub_kind\x18\x02 \x01(\tR\asubKind\x12\x18\n" +
	"\aversion\x18\x03 \x01(\tR\aversion\x128\n" +
	"\bmetadata\x18\x04 \x01(\v2\x1c.teleport.header.v1.MetadataR\bmetadata\x12L\n" +
	"\x04spec\x18\x05 \x01(\v28.teleport.summarizer.v1.SummarizationInferenceSecretSpecR\x04spec\"8\n" +
	" SummarizationInferenceSecretSpec\x12\x14\n" +
	"\x05value\x18\x01 \x01(\tR\x05value\"\xef\x01\n" +
	"\x1cSummarizationInferencePolicy\x12\x12\n" +
	"\x04kind\x18\x01 \x01(\tR\x04kind\x12\x19\n" +
	"\bsub_kind\x18\x02 \x01(\tR\asubKind\x12\x18\n" +
	"\aversion\x18\x03 \x01(\tR\aversion\x128\n" +
	"\bmetadata\x18\x04 \x01(\v2\x1c.teleport.header.v1.MetadataR\bmetadata\x12L\n" +
	"\x04spec\x18\x05 \x01(\v28.teleport.summarizer.v1.SummarizationInferencePolicySpecR\x04spec\"f\n" +
	" SummarizationInferencePolicySpec\x12\x14\n" +
	"\x05kinds\x18\x01 \x03(\tR\x05kinds\x12\x14\n" +
	"\x05model\x18\x02 \x01(\tR\x05model\x12\x16\n" +
	"\x06filter\x18\x03 \x01(\tR\x06filterBXZVgithub.com/gravitational/teleport/api/gen/proto/go/teleport/summarizer/v1;summarizerv1b\x06proto3"

var (
	file_teleport_summarizer_v1_summarizer_proto_rawDescOnce sync.Once
	file_teleport_summarizer_v1_summarizer_proto_rawDescData []byte
)

func file_teleport_summarizer_v1_summarizer_proto_rawDescGZIP() []byte {
	file_teleport_summarizer_v1_summarizer_proto_rawDescOnce.Do(func() {
		file_teleport_summarizer_v1_summarizer_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_teleport_summarizer_v1_summarizer_proto_rawDesc), len(file_teleport_summarizer_v1_summarizer_proto_rawDesc)))
	})
	return file_teleport_summarizer_v1_summarizer_proto_rawDescData
}

var file_teleport_summarizer_v1_summarizer_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_teleport_summarizer_v1_summarizer_proto_goTypes = []any{
	(*SummarizationInferenceModel)(nil),      // 0: teleport.summarizer.v1.SummarizationInferenceModel
	(*SummarizationInferenceModelSpec)(nil),  // 1: teleport.summarizer.v1.SummarizationInferenceModelSpec
	(*OpenAIProvider)(nil),                   // 2: teleport.summarizer.v1.OpenAIProvider
	(*SummarizationInferenceSecret)(nil),     // 3: teleport.summarizer.v1.SummarizationInferenceSecret
	(*SummarizationInferenceSecretSpec)(nil), // 4: teleport.summarizer.v1.SummarizationInferenceSecretSpec
	(*SummarizationInferencePolicy)(nil),     // 5: teleport.summarizer.v1.SummarizationInferencePolicy
	(*SummarizationInferencePolicySpec)(nil), // 6: teleport.summarizer.v1.SummarizationInferencePolicySpec
	(*v1.Metadata)(nil),                      // 7: teleport.header.v1.Metadata
}
var file_teleport_summarizer_v1_summarizer_proto_depIdxs = []int32{
	7, // 0: teleport.summarizer.v1.SummarizationInferenceModel.metadata:type_name -> teleport.header.v1.Metadata
	1, // 1: teleport.summarizer.v1.SummarizationInferenceModel.spec:type_name -> teleport.summarizer.v1.SummarizationInferenceModelSpec
	2, // 2: teleport.summarizer.v1.SummarizationInferenceModelSpec.openai:type_name -> teleport.summarizer.v1.OpenAIProvider
	7, // 3: teleport.summarizer.v1.SummarizationInferenceSecret.metadata:type_name -> teleport.header.v1.Metadata
	4, // 4: teleport.summarizer.v1.SummarizationInferenceSecret.spec:type_name -> teleport.summarizer.v1.SummarizationInferenceSecretSpec
	7, // 5: teleport.summarizer.v1.SummarizationInferencePolicy.metadata:type_name -> teleport.header.v1.Metadata
	6, // 6: teleport.summarizer.v1.SummarizationInferencePolicy.spec:type_name -> teleport.summarizer.v1.SummarizationInferencePolicySpec
	7, // [7:7] is the sub-list for method output_type
	7, // [7:7] is the sub-list for method input_type
	7, // [7:7] is the sub-list for extension type_name
	7, // [7:7] is the sub-list for extension extendee
	0, // [0:7] is the sub-list for field type_name
}

func init() { file_teleport_summarizer_v1_summarizer_proto_init() }
func file_teleport_summarizer_v1_summarizer_proto_init() {
	if File_teleport_summarizer_v1_summarizer_proto != nil {
		return
	}
	file_teleport_summarizer_v1_summarizer_proto_msgTypes[1].OneofWrappers = []any{
		(*SummarizationInferenceModelSpec_Openai)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_teleport_summarizer_v1_summarizer_proto_rawDesc), len(file_teleport_summarizer_v1_summarizer_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_teleport_summarizer_v1_summarizer_proto_goTypes,
		DependencyIndexes: file_teleport_summarizer_v1_summarizer_proto_depIdxs,
		MessageInfos:      file_teleport_summarizer_v1_summarizer_proto_msgTypes,
	}.Build()
	File_teleport_summarizer_v1_summarizer_proto = out.File
	file_teleport_summarizer_v1_summarizer_proto_goTypes = nil
	file_teleport_summarizer_v1_summarizer_proto_depIdxs = nil
}
