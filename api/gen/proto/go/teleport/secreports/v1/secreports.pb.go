// Copyright 2023 Gravitational, Inc
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: teleport/secreports/v1/secreports.proto

package secreportsv1

import (
	v1 "github.com/gravitational/teleport/api/gen/proto/go/teleport/header/v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// AuditQuery is audit query resource.
type AuditQuery struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// header is the header for //the resource.
	Header *v1.ResourceHeader `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	// spec is audit query spec.
	Spec          *AuditQuerySpec `protobuf:"bytes,2,opt,name=spec,proto3" json:"spec,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AuditQuery) Reset() {
	*x = AuditQuery{}
	mi := &file_teleport_secreports_v1_secreports_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AuditQuery) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuditQuery) ProtoMessage() {}

func (x *AuditQuery) ProtoReflect() protoreflect.Message {
	mi := &file_teleport_secreports_v1_secreports_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuditQuery.ProtoReflect.Descriptor instead.
func (*AuditQuery) Descriptor() ([]byte, []int) {
	return file_teleport_secreports_v1_secreports_proto_rawDescGZIP(), []int{0}
}

func (x *AuditQuery) GetHeader() *v1.ResourceHeader {
	if x != nil {
		return x.Header
	}
	return nil
}

func (x *AuditQuery) GetSpec() *AuditQuerySpec {
	if x != nil {
		return x.Spec
	}
	return nil
}

// AuditQuerySpec is audit query spec.
type AuditQuerySpec struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// name is the name of the audit query.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// title is the title of the audit query.
	Title string `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	// query is the SQL Query for the audit query.
	Query string `protobuf:"bytes,3,opt,name=query,proto3" json:"query,omitempty"`
	// description is the description of the audit query.
	Description   string `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AuditQuerySpec) Reset() {
	*x = AuditQuerySpec{}
	mi := &file_teleport_secreports_v1_secreports_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AuditQuerySpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuditQuerySpec) ProtoMessage() {}

func (x *AuditQuerySpec) ProtoReflect() protoreflect.Message {
	mi := &file_teleport_secreports_v1_secreports_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuditQuerySpec.ProtoReflect.Descriptor instead.
func (*AuditQuerySpec) Descriptor() ([]byte, []int) {
	return file_teleport_secreports_v1_secreports_proto_rawDescGZIP(), []int{1}
}

func (x *AuditQuerySpec) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AuditQuerySpec) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *AuditQuerySpec) GetQuery() string {
	if x != nil {
		return x.Query
	}
	return ""
}

func (x *AuditQuerySpec) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

// Report is security report resource.
type Report struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// header is the header for the resource.
	Header *v1.ResourceHeader `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	// spec is the security report spec.
	Spec          *ReportSpec `protobuf:"bytes,2,opt,name=spec,proto3" json:"spec,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Report) Reset() {
	*x = Report{}
	mi := &file_teleport_secreports_v1_secreports_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Report) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Report) ProtoMessage() {}

func (x *Report) ProtoReflect() protoreflect.Message {
	mi := &file_teleport_secreports_v1_secreports_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Report.ProtoReflect.Descriptor instead.
func (*Report) Descriptor() ([]byte, []int) {
	return file_teleport_secreports_v1_secreports_proto_rawDescGZIP(), []int{2}
}

func (x *Report) GetHeader() *v1.ResourceHeader {
	if x != nil {
		return x.Header
	}
	return nil
}

func (x *Report) GetSpec() *ReportSpec {
	if x != nil {
		return x.Spec
	}
	return nil
}

// ReportSpec is security report spec.
type ReportSpec struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// name is the name of the security report.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// title is the title of the security report.
	Description string `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	// description is the description of the security report
	AuditQueries []*AuditQuerySpec `protobuf:"bytes,3,rep,name=audit_queries,json=auditQueries,proto3" json:"audit_queries,omitempty"`
	// title is the title of the security report.
	Title string `protobuf:"bytes,4,opt,name=title,proto3" json:"title,omitempty"`
	// version is the version of the security report.
	Version       string `protobuf:"bytes,5,opt,name=version,proto3" json:"version,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReportSpec) Reset() {
	*x = ReportSpec{}
	mi := &file_teleport_secreports_v1_secreports_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReportSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReportSpec) ProtoMessage() {}

func (x *ReportSpec) ProtoReflect() protoreflect.Message {
	mi := &file_teleport_secreports_v1_secreports_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReportSpec.ProtoReflect.Descriptor instead.
func (*ReportSpec) Descriptor() ([]byte, []int) {
	return file_teleport_secreports_v1_secreports_proto_rawDescGZIP(), []int{3}
}

func (x *ReportSpec) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ReportSpec) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *ReportSpec) GetAuditQueries() []*AuditQuerySpec {
	if x != nil {
		return x.AuditQueries
	}
	return nil
}

func (x *ReportSpec) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *ReportSpec) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

// ReportState is security report state resource.
type ReportState struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// header is the header for the resource.
	Header *v1.ResourceHeader `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	// spec is the security report state spec.
	Spec          *ReportStateSpec `protobuf:"bytes,2,opt,name=spec,proto3" json:"spec,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReportState) Reset() {
	*x = ReportState{}
	mi := &file_teleport_secreports_v1_secreports_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReportState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReportState) ProtoMessage() {}

func (x *ReportState) ProtoReflect() protoreflect.Message {
	mi := &file_teleport_secreports_v1_secreports_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReportState.ProtoReflect.Descriptor instead.
func (*ReportState) Descriptor() ([]byte, []int) {
	return file_teleport_secreports_v1_secreports_proto_rawDescGZIP(), []int{4}
}

func (x *ReportState) GetHeader() *v1.ResourceHeader {
	if x != nil {
		return x.Header
	}
	return nil
}

func (x *ReportState) GetSpec() *ReportStateSpec {
	if x != nil {
		return x.Spec
	}
	return nil
}

// ReportStateSpec is security report state spec.
type ReportStateSpec struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// state is the state of the security report.
	State string `protobuf:"bytes,1,opt,name=state,proto3" json:"state,omitempty"`
	// updated_at is the time when the security report state was updated.
	UpdatedAt     string `protobuf:"bytes,2,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReportStateSpec) Reset() {
	*x = ReportStateSpec{}
	mi := &file_teleport_secreports_v1_secreports_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReportStateSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReportStateSpec) ProtoMessage() {}

func (x *ReportStateSpec) ProtoReflect() protoreflect.Message {
	mi := &file_teleport_secreports_v1_secreports_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReportStateSpec.ProtoReflect.Descriptor instead.
func (*ReportStateSpec) Descriptor() ([]byte, []int) {
	return file_teleport_secreports_v1_secreports_proto_rawDescGZIP(), []int{5}
}

func (x *ReportStateSpec) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

func (x *ReportStateSpec) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

var File_teleport_secreports_v1_secreports_proto protoreflect.FileDescriptor

const file_teleport_secreports_v1_secreports_proto_rawDesc = "" +
	"\n" +
	"'teleport/secreports/v1/secreports.proto\x12\x16teleport.secreports.v1\x1a'teleport/header/v1/resourceheader.proto\"\x84\x01\n" +
	"\n" +
	"AuditQuery\x12:\n" +
	"\x06header\x18\x01 \x01(\v2\".teleport.header.v1.ResourceHeaderR\x06header\x12:\n" +
	"\x04spec\x18\x02 \x01(\v2&.teleport.secreports.v1.AuditQuerySpecR\x04spec\"r\n" +
	"\x0eAuditQuerySpec\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x14\n" +
	"\x05title\x18\x02 \x01(\tR\x05title\x12\x14\n" +
	"\x05query\x18\x03 \x01(\tR\x05query\x12 \n" +
	"\vdescription\x18\x04 \x01(\tR\vdescription\"|\n" +
	"\x06Report\x12:\n" +
	"\x06header\x18\x01 \x01(\v2\".teleport.header.v1.ResourceHeaderR\x06header\x126\n" +
	"\x04spec\x18\x02 \x01(\v2\".teleport.secreports.v1.ReportSpecR\x04spec\"\xbf\x01\n" +
	"\n" +
	"ReportSpec\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12 \n" +
	"\vdescription\x18\x02 \x01(\tR\vdescription\x12K\n" +
	"\raudit_queries\x18\x03 \x03(\v2&.teleport.secreports.v1.AuditQuerySpecR\fauditQueries\x12\x14\n" +
	"\x05title\x18\x04 \x01(\tR\x05title\x12\x18\n" +
	"\aversion\x18\x05 \x01(\tR\aversion\"\x86\x01\n" +
	"\vReportState\x12:\n" +
	"\x06header\x18\x01 \x01(\v2\".teleport.header.v1.ResourceHeaderR\x06header\x12;\n" +
	"\x04spec\x18\x02 \x01(\v2'.teleport.secreports.v1.ReportStateSpecR\x04spec\"F\n" +
	"\x0fReportStateSpec\x12\x14\n" +
	"\x05state\x18\x01 \x01(\tR\x05state\x12\x1d\n" +
	"\n" +
	"updated_at\x18\x02 \x01(\tR\tupdatedAtBXZVgithub.com/gravitational/teleport/api/gen/proto/go/teleport/secreports/v1;secreportsv1b\x06proto3"

var (
	file_teleport_secreports_v1_secreports_proto_rawDescOnce sync.Once
	file_teleport_secreports_v1_secreports_proto_rawDescData []byte
)

func file_teleport_secreports_v1_secreports_proto_rawDescGZIP() []byte {
	file_teleport_secreports_v1_secreports_proto_rawDescOnce.Do(func() {
		file_teleport_secreports_v1_secreports_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_teleport_secreports_v1_secreports_proto_rawDesc), len(file_teleport_secreports_v1_secreports_proto_rawDesc)))
	})
	return file_teleport_secreports_v1_secreports_proto_rawDescData
}

var file_teleport_secreports_v1_secreports_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_teleport_secreports_v1_secreports_proto_goTypes = []any{
	(*AuditQuery)(nil),        // 0: teleport.secreports.v1.AuditQuery
	(*AuditQuerySpec)(nil),    // 1: teleport.secreports.v1.AuditQuerySpec
	(*Report)(nil),            // 2: teleport.secreports.v1.Report
	(*ReportSpec)(nil),        // 3: teleport.secreports.v1.ReportSpec
	(*ReportState)(nil),       // 4: teleport.secreports.v1.ReportState
	(*ReportStateSpec)(nil),   // 5: teleport.secreports.v1.ReportStateSpec
	(*v1.ResourceHeader)(nil), // 6: teleport.header.v1.ResourceHeader
}
var file_teleport_secreports_v1_secreports_proto_depIdxs = []int32{
	6, // 0: teleport.secreports.v1.AuditQuery.header:type_name -> teleport.header.v1.ResourceHeader
	1, // 1: teleport.secreports.v1.AuditQuery.spec:type_name -> teleport.secreports.v1.AuditQuerySpec
	6, // 2: teleport.secreports.v1.Report.header:type_name -> teleport.header.v1.ResourceHeader
	3, // 3: teleport.secreports.v1.Report.spec:type_name -> teleport.secreports.v1.ReportSpec
	1, // 4: teleport.secreports.v1.ReportSpec.audit_queries:type_name -> teleport.secreports.v1.AuditQuerySpec
	6, // 5: teleport.secreports.v1.ReportState.header:type_name -> teleport.header.v1.ResourceHeader
	5, // 6: teleport.secreports.v1.ReportState.spec:type_name -> teleport.secreports.v1.ReportStateSpec
	7, // [7:7] is the sub-list for method output_type
	7, // [7:7] is the sub-list for method input_type
	7, // [7:7] is the sub-list for extension type_name
	7, // [7:7] is the sub-list for extension extendee
	0, // [0:7] is the sub-list for field type_name
}

func init() { file_teleport_secreports_v1_secreports_proto_init() }
func file_teleport_secreports_v1_secreports_proto_init() {
	if File_teleport_secreports_v1_secreports_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_teleport_secreports_v1_secreports_proto_rawDesc), len(file_teleport_secreports_v1_secreports_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_teleport_secreports_v1_secreports_proto_goTypes,
		DependencyIndexes: file_teleport_secreports_v1_secreports_proto_depIdxs,
		MessageInfos:      file_teleport_secreports_v1_secreports_proto_msgTypes,
	}.Build()
	File_teleport_secreports_v1_secreports_proto = out.File
	file_teleport_secreports_v1_secreports_proto_goTypes = nil
	file_teleport_secreports_v1_secreports_proto_depIdxs = nil
}
