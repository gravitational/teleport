// Copyright 2024 Gravitational, Inc
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: teleport/clusterconfig/v1/access_graph.proto

package clusterconfigv1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// AccessGraphConfig holds the information about the configured Access Graph service.
type AccessGraphConfig struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// enabled indicates if the Access Graph is enabled for the cluster.
	Enabled bool `protobuf:"varint,1,opt,name=enabled,proto3" json:"enabled,omitempty"`
	// address is the address of the access graph service. The address is in the
	// form of "host:port".
	Address string `protobuf:"bytes,2,opt,name=address,proto3" json:"address,omitempty"`
	// ca is the PEM-encoded CA certificate of the access graph service.
	Ca []byte `protobuf:"bytes,3,opt,name=ca,proto3" json:"ca,omitempty"`
	// insecure is a flag that indicates whether the access graph service should
	// skip verifying the server's certificate chain and host name.
	Insecure bool `protobuf:"varint,4,opt,name=insecure,proto3" json:"insecure,omitempty"`
	// secrets_scan_config is used to configure the parameters for the secrets scanning functionality.
	SecretsScanConfig *AccessGraphSecretsScanConfiguration `protobuf:"bytes,5,opt,name=secrets_scan_config,json=secretsScanConfig,proto3" json:"secrets_scan_config,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *AccessGraphConfig) Reset() {
	*x = AccessGraphConfig{}
	mi := &file_teleport_clusterconfig_v1_access_graph_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AccessGraphConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccessGraphConfig) ProtoMessage() {}

func (x *AccessGraphConfig) ProtoReflect() protoreflect.Message {
	mi := &file_teleport_clusterconfig_v1_access_graph_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccessGraphConfig.ProtoReflect.Descriptor instead.
func (*AccessGraphConfig) Descriptor() ([]byte, []int) {
	return file_teleport_clusterconfig_v1_access_graph_proto_rawDescGZIP(), []int{0}
}

func (x *AccessGraphConfig) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

func (x *AccessGraphConfig) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *AccessGraphConfig) GetCa() []byte {
	if x != nil {
		return x.Ca
	}
	return nil
}

func (x *AccessGraphConfig) GetInsecure() bool {
	if x != nil {
		return x.Insecure
	}
	return false
}

func (x *AccessGraphConfig) GetSecretsScanConfig() *AccessGraphSecretsScanConfiguration {
	if x != nil {
		return x.SecretsScanConfig
	}
	return nil
}

// AccessGraphSecretsScanConfiguration controls the secrets scanning service parameters.
type AccessGraphSecretsScanConfiguration struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ssh_scan_enabled indicates if the SSH scan feature is enabled for the cluster.
	SshScanEnabled bool `protobuf:"varint,1,opt,name=ssh_scan_enabled,json=sshScanEnabled,proto3" json:"ssh_scan_enabled,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *AccessGraphSecretsScanConfiguration) Reset() {
	*x = AccessGraphSecretsScanConfiguration{}
	mi := &file_teleport_clusterconfig_v1_access_graph_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AccessGraphSecretsScanConfiguration) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccessGraphSecretsScanConfiguration) ProtoMessage() {}

func (x *AccessGraphSecretsScanConfiguration) ProtoReflect() protoreflect.Message {
	mi := &file_teleport_clusterconfig_v1_access_graph_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccessGraphSecretsScanConfiguration.ProtoReflect.Descriptor instead.
func (*AccessGraphSecretsScanConfiguration) Descriptor() ([]byte, []int) {
	return file_teleport_clusterconfig_v1_access_graph_proto_rawDescGZIP(), []int{1}
}

func (x *AccessGraphSecretsScanConfiguration) GetSshScanEnabled() bool {
	if x != nil {
		return x.SshScanEnabled
	}
	return false
}

var File_teleport_clusterconfig_v1_access_graph_proto protoreflect.FileDescriptor

const file_teleport_clusterconfig_v1_access_graph_proto_rawDesc = "" +
	"\n" +
	",teleport/clusterconfig/v1/access_graph.proto\x12\x19teleport.clusterconfig.v1\"\xe3\x01\n" +
	"\x11AccessGraphConfig\x12\x18\n" +
	"\aenabled\x18\x01 \x01(\bR\aenabled\x12\x18\n" +
	"\aaddress\x18\x02 \x01(\tR\aaddress\x12\x0e\n" +
	"\x02ca\x18\x03 \x01(\fR\x02ca\x12\x1a\n" +
	"\binsecure\x18\x04 \x01(\bR\binsecure\x12n\n" +
	"\x13secrets_scan_config\x18\x05 \x01(\v2>.teleport.clusterconfig.v1.AccessGraphSecretsScanConfigurationR\x11secretsScanConfig\"O\n" +
	"#AccessGraphSecretsScanConfiguration\x12(\n" +
	"\x10ssh_scan_enabled\x18\x01 \x01(\bR\x0esshScanEnabledB^Z\\github.com/gravitational/teleport/api/gen/proto/go/teleport/clusterconfig/v1;clusterconfigv1b\x06proto3"

var (
	file_teleport_clusterconfig_v1_access_graph_proto_rawDescOnce sync.Once
	file_teleport_clusterconfig_v1_access_graph_proto_rawDescData []byte
)

func file_teleport_clusterconfig_v1_access_graph_proto_rawDescGZIP() []byte {
	file_teleport_clusterconfig_v1_access_graph_proto_rawDescOnce.Do(func() {
		file_teleport_clusterconfig_v1_access_graph_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_teleport_clusterconfig_v1_access_graph_proto_rawDesc), len(file_teleport_clusterconfig_v1_access_graph_proto_rawDesc)))
	})
	return file_teleport_clusterconfig_v1_access_graph_proto_rawDescData
}

var file_teleport_clusterconfig_v1_access_graph_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_teleport_clusterconfig_v1_access_graph_proto_goTypes = []any{
	(*AccessGraphConfig)(nil),                   // 0: teleport.clusterconfig.v1.AccessGraphConfig
	(*AccessGraphSecretsScanConfiguration)(nil), // 1: teleport.clusterconfig.v1.AccessGraphSecretsScanConfiguration
}
var file_teleport_clusterconfig_v1_access_graph_proto_depIdxs = []int32{
	1, // 0: teleport.clusterconfig.v1.AccessGraphConfig.secrets_scan_config:type_name -> teleport.clusterconfig.v1.AccessGraphSecretsScanConfiguration
	1, // [1:1] is the sub-list for method output_type
	1, // [1:1] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_teleport_clusterconfig_v1_access_graph_proto_init() }
func file_teleport_clusterconfig_v1_access_graph_proto_init() {
	if File_teleport_clusterconfig_v1_access_graph_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_teleport_clusterconfig_v1_access_graph_proto_rawDesc), len(file_teleport_clusterconfig_v1_access_graph_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_teleport_clusterconfig_v1_access_graph_proto_goTypes,
		DependencyIndexes: file_teleport_clusterconfig_v1_access_graph_proto_depIdxs,
		MessageInfos:      file_teleport_clusterconfig_v1_access_graph_proto_msgTypes,
	}.Build()
	File_teleport_clusterconfig_v1_access_graph_proto = out.File
	file_teleport_clusterconfig_v1_access_graph_proto_goTypes = nil
	file_teleport_clusterconfig_v1_access_graph_proto_depIdxs = nil
}
