// Copyright 2024 Gravitational, Inc
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        (unknown)
// source: teleport/clusterconfig/v1/access_graph_state.proto

package clusterconfigv1

import (
	v1 "github.com/gravitational/teleport/api/gen/proto/go/teleport/header/v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// AccessGraphState
type AccessGraphState struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// kind is the kind of the resource.
	Kind string `protobuf:"bytes,1,opt,name=kind,proto3" json:"kind,omitempty"`
	// sub_kind is the sub kind of the resource.
	SubKind string `protobuf:"bytes,2,opt,name=sub_kind,json=subKind,proto3" json:"sub_kind,omitempty"`
	// version is the version of the resource.
	Version string `protobuf:"bytes,3,opt,name=version,proto3" json:"version,omitempty"`
	// metadata is the metadata of the resource.
	Metadata *v1.Metadata `protobuf:"bytes,4,opt,name=metadata,proto3" json:"metadata,omitempty"`
	// spec is the spec of the resource.
	Spec          *AccessGraphStateSpec `protobuf:"bytes,5,opt,name=spec,proto3" json:"spec,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AccessGraphState) Reset() {
	*x = AccessGraphState{}
	mi := &file_teleport_clusterconfig_v1_access_graph_state_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AccessGraphState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccessGraphState) ProtoMessage() {}

func (x *AccessGraphState) ProtoReflect() protoreflect.Message {
	mi := &file_teleport_clusterconfig_v1_access_graph_state_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccessGraphState.ProtoReflect.Descriptor instead.
func (*AccessGraphState) Descriptor() ([]byte, []int) {
	return file_teleport_clusterconfig_v1_access_graph_state_proto_rawDescGZIP(), []int{0}
}

func (x *AccessGraphState) GetKind() string {
	if x != nil {
		return x.Kind
	}
	return ""
}

func (x *AccessGraphState) GetSubKind() string {
	if x != nil {
		return x.SubKind
	}
	return ""
}

func (x *AccessGraphState) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *AccessGraphState) GetMetadata() *v1.Metadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *AccessGraphState) GetSpec() *AccessGraphStateSpec {
	if x != nil {
		return x.Spec
	}
	return nil
}

// AccessGraphStateSpec
type AccessGraphStateSpec struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// initial_sync_complete
	InitialSyncComplete bool `protobuf:"varint,1,opt,name=initial_sync_complete,json=initialSyncComplete,proto3" json:"initial_sync_complete,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *AccessGraphStateSpec) Reset() {
	*x = AccessGraphStateSpec{}
	mi := &file_teleport_clusterconfig_v1_access_graph_state_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AccessGraphStateSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccessGraphStateSpec) ProtoMessage() {}

func (x *AccessGraphStateSpec) ProtoReflect() protoreflect.Message {
	mi := &file_teleport_clusterconfig_v1_access_graph_state_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccessGraphStateSpec.ProtoReflect.Descriptor instead.
func (*AccessGraphStateSpec) Descriptor() ([]byte, []int) {
	return file_teleport_clusterconfig_v1_access_graph_state_proto_rawDescGZIP(), []int{1}
}

func (x *AccessGraphStateSpec) GetInitialSyncComplete() bool {
	if x != nil {
		return x.InitialSyncComplete
	}
	return false
}

var File_teleport_clusterconfig_v1_access_graph_state_proto protoreflect.FileDescriptor

var file_teleport_clusterconfig_v1_access_graph_state_proto_rawDesc = string([]byte{
	0x0a, 0x32, 0x74, 0x65, 0x6c, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x2f, 0x63, 0x6c, 0x75, 0x73, 0x74,
	0x65, 0x72, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x5f, 0x67, 0x72, 0x61, 0x70, 0x68, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x19, 0x74, 0x65, 0x6c, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x63,
	0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x76, 0x31, 0x1a,
	0x21, 0x74, 0x65, 0x6c, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x2f, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72,
	0x2f, 0x76, 0x31, 0x2f, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x22, 0xda, 0x01, 0x0a, 0x10, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x47, 0x72, 0x61,
	0x70, 0x68, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6b, 0x69, 0x6e, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6b, 0x69, 0x6e, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x73,
	0x75, 0x62, 0x5f, 0x6b, 0x69, 0x6e, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73,
	0x75, 0x62, 0x4b, 0x69, 0x6e, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x12, 0x38, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x74, 0x65, 0x6c, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x68, 0x65,
	0x61, 0x64, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61,
	0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x43, 0x0a, 0x04, 0x73, 0x70,
	0x65, 0x63, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x74, 0x65, 0x6c, 0x65, 0x70,
	0x6f, 0x72, 0x74, 0x2e, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x63, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x47, 0x72, 0x61, 0x70, 0x68,
	0x53, 0x74, 0x61, 0x74, 0x65, 0x53, 0x70, 0x65, 0x63, 0x52, 0x04, 0x73, 0x70, 0x65, 0x63, 0x22,
	0x4a, 0x0a, 0x14, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x47, 0x72, 0x61, 0x70, 0x68, 0x53, 0x74,
	0x61, 0x74, 0x65, 0x53, 0x70, 0x65, 0x63, 0x12, 0x32, 0x0a, 0x15, 0x69, 0x6e, 0x69, 0x74, 0x69,
	0x61, 0x6c, 0x5f, 0x73, 0x79, 0x6e, 0x63, 0x5f, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x13, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x53,
	0x79, 0x6e, 0x63, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x42, 0x5e, 0x5a, 0x5c, 0x67,
	0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x67, 0x72, 0x61, 0x76, 0x69, 0x74,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x2f, 0x74, 0x65, 0x6c, 0x65, 0x70, 0x6f, 0x72, 0x74,
	0x2f, 0x61, 0x70, 0x69, 0x2f, 0x67, 0x65, 0x6e, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67,
	0x6f, 0x2f, 0x74, 0x65, 0x6c, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x2f, 0x63, 0x6c, 0x75, 0x73, 0x74,
	0x65, 0x72, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2f, 0x76, 0x31, 0x3b, 0x63, 0x6c, 0x75, 0x73,
	0x74, 0x65, 0x72, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
})

var (
	file_teleport_clusterconfig_v1_access_graph_state_proto_rawDescOnce sync.Once
	file_teleport_clusterconfig_v1_access_graph_state_proto_rawDescData []byte
)

func file_teleport_clusterconfig_v1_access_graph_state_proto_rawDescGZIP() []byte {
	file_teleport_clusterconfig_v1_access_graph_state_proto_rawDescOnce.Do(func() {
		file_teleport_clusterconfig_v1_access_graph_state_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_teleport_clusterconfig_v1_access_graph_state_proto_rawDesc), len(file_teleport_clusterconfig_v1_access_graph_state_proto_rawDesc)))
	})
	return file_teleport_clusterconfig_v1_access_graph_state_proto_rawDescData
}

var file_teleport_clusterconfig_v1_access_graph_state_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_teleport_clusterconfig_v1_access_graph_state_proto_goTypes = []any{
	(*AccessGraphState)(nil),     // 0: teleport.clusterconfig.v1.AccessGraphState
	(*AccessGraphStateSpec)(nil), // 1: teleport.clusterconfig.v1.AccessGraphStateSpec
	(*v1.Metadata)(nil),          // 2: teleport.header.v1.Metadata
}
var file_teleport_clusterconfig_v1_access_graph_state_proto_depIdxs = []int32{
	2, // 0: teleport.clusterconfig.v1.AccessGraphState.metadata:type_name -> teleport.header.v1.Metadata
	1, // 1: teleport.clusterconfig.v1.AccessGraphState.spec:type_name -> teleport.clusterconfig.v1.AccessGraphStateSpec
	2, // [2:2] is the sub-list for method output_type
	2, // [2:2] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_teleport_clusterconfig_v1_access_graph_state_proto_init() }
func file_teleport_clusterconfig_v1_access_graph_state_proto_init() {
	if File_teleport_clusterconfig_v1_access_graph_state_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_teleport_clusterconfig_v1_access_graph_state_proto_rawDesc), len(file_teleport_clusterconfig_v1_access_graph_state_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_teleport_clusterconfig_v1_access_graph_state_proto_goTypes,
		DependencyIndexes: file_teleport_clusterconfig_v1_access_graph_state_proto_depIdxs,
		MessageInfos:      file_teleport_clusterconfig_v1_access_graph_state_proto_msgTypes,
	}.Build()
	File_teleport_clusterconfig_v1_access_graph_state_proto = out.File
	file_teleport_clusterconfig_v1_access_graph_state_proto_goTypes = nil
	file_teleport_clusterconfig_v1_access_graph_state_proto_depIdxs = nil
}
