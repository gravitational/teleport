// Copyright 2023 Gravitational, Inc
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

package teleport.clusterconfig.v1;

import "teleport/clusterconfig/v1/access_graph.proto";
import "teleport/clusterconfig/v1/access_graph_settings.proto";
import "teleport/legacy/types/types.proto";

option go_package = "github.com/gravitational/teleport/api/gen/proto/go/teleport/clusterconfig/v1;clusterconfigv1";

// ClusterConfigService provides methods to manage cluster configuration resources.
service ClusterConfigService {
  // GetClusterNetworkingConfig retrieves the active cluster networking configuration.
  rpc GetClusterNetworkingConfig(GetClusterNetworkingConfigRequest) returns (types.ClusterNetworkingConfigV2);
  // UpdateClusterNetworkingConfig updates the cluster networking configuration.
  rpc UpdateClusterNetworkingConfig(UpdateClusterNetworkingConfigRequest) returns (types.ClusterNetworkingConfigV2);
  // UpsertClusterNetworkingConfig overwrites the active cluster networking configuration.
  rpc UpsertClusterNetworkingConfig(UpsertClusterNetworkingConfigRequest) returns (types.ClusterNetworkingConfigV2);
  // ResetClusterNetworkingConfig restores the active cluster networking configuration to default settings.
  rpc ResetClusterNetworkingConfig(ResetClusterNetworkingConfigRequest) returns (types.ClusterNetworkingConfigV2);

  // GetSessionRecordingConfig retrieves the active session recording configuration.
  rpc GetSessionRecordingConfig(GetSessionRecordingConfigRequest) returns (types.SessionRecordingConfigV2);
  // UpdateSessionRecordingConfig updates the session recording configuration.
  rpc UpdateSessionRecordingConfig(UpdateSessionRecordingConfigRequest) returns (types.SessionRecordingConfigV2);
  // UpsertSessionRecordingConfig overwrites the active session recording configuration.
  rpc UpsertSessionRecordingConfig(UpsertSessionRecordingConfigRequest) returns (types.SessionRecordingConfigV2);
  // ResetSessionRecordingConfig restores the active session recording configuration to default settings.
  rpc ResetSessionRecordingConfig(ResetSessionRecordingConfigRequest) returns (types.SessionRecordingConfigV2);

  // GetAuthPreference retrieves the active auth preference.
  rpc GetAuthPreference(GetAuthPreferenceRequest) returns (types.AuthPreferenceV2);
  // UpdateAuthPreference updates the auth preference.
  rpc UpdateAuthPreference(UpdateAuthPreferenceRequest) returns (types.AuthPreferenceV2);
  // UpsertAuthPreference overwrites the active auth preference.
  rpc UpsertAuthPreference(UpsertAuthPreferenceRequest) returns (types.AuthPreferenceV2);
  // ResetAuthPreference restores the active auth preference to default settings.
  rpc ResetAuthPreference(ResetAuthPreferenceRequest) returns (types.AuthPreferenceV2);

  // GetClusterAuditConfig retrieves the active cluster audit configuration.
  rpc GetClusterAuditConfig(GetClusterAuditConfigRequest) returns (types.ClusterAuditConfigV2);

  // GetClusterAccessGraphConfig retrieves the cluster Access Graph configuration from Auth service.
  rpc GetClusterAccessGraphConfig(GetClusterAccessGraphConfigRequest) returns (GetClusterAccessGraphConfigResponse);

  // GetAccessGraphSettings updates the cluster Access Graph configuration.
  rpc GetAccessGraphSettings(GetAccessGraphSettingsRequest) returns (teleport.clusterconfig.v1.AccessGraphSettings);
  // CreateAccessGraphSettings creates the cluster Access Graph configuration.
  rpc CreateAccessGraphSettings(CreateAccessGraphSettingsRequest) returns (teleport.clusterconfig.v1.AccessGraphSettings);
  // UpdateAccessGraphSettings updates the cluster Access Graph configuration.
  rpc UpdateAccessGraphSettings(UpdateAccessGraphSettingsRequest) returns (teleport.clusterconfig.v1.AccessGraphSettings);
  // UpsertAccessGraphSettings overwrites the active cluster Access Graph configuration.
  rpc UpsertAccessGraphSettings(UpsertAccessGraphSettingsRequest) returns (teleport.clusterconfig.v1.AccessGraphSettings);
  // ResetAccessGraphSettings restores the active cluster Access Graph to default settings.
  rpc ResetAccessGraphSettings(ResetAccessGraphSettingsRequest) returns (teleport.clusterconfig.v1.AccessGraphSettings);
}

// Request for GetClusterNetworkingConfig
message GetClusterNetworkingConfigRequest {}

// Request for UpdateClusterNetworkingConfig
message UpdateClusterNetworkingConfigRequest {
  types.ClusterNetworkingConfigV2 cluster_network_config = 1;
}

// Request for UpsertClusterNetworkingConfig
message UpsertClusterNetworkingConfigRequest {
  types.ClusterNetworkingConfigV2 cluster_network_config = 1;
}

// Request for ResetClusterNetworkingConfig
message ResetClusterNetworkingConfigRequest {}

// Request for GetSessionRecordingConfig
message GetSessionRecordingConfigRequest {}

// Request for UpdateSessionRecordingConfig
message UpdateSessionRecordingConfigRequest {
  types.SessionRecordingConfigV2 session_recording_config = 1;
}

// Request for UpsertSessionRecordingConfig
message UpsertSessionRecordingConfigRequest {
  types.SessionRecordingConfigV2 session_recording_config = 1;
}

// Request for ResetSessionRecordingConfig
message ResetSessionRecordingConfigRequest {}

// Request for GetAuthPreference
message GetAuthPreferenceRequest {}

// Request for UpdateAuthPreference
message UpdateAuthPreferenceRequest {
  types.AuthPreferenceV2 auth_preference = 1;
}

// Request for UpsertAuthPreference
message UpsertAuthPreferenceRequest {
  types.AuthPreferenceV2 auth_preference = 1;
}

// Request for ResetAuthPreference
message ResetAuthPreferenceRequest {}

// Request for GetClusterAuditConfig
message GetClusterAuditConfigRequest {}

// Request for GetClusterAccessGraphConfig
message GetClusterAccessGraphConfigRequest {}

// Response for GetClusterAccessGraphConfig
message GetClusterAccessGraphConfigResponse {
  // access_graph holds the information about Access Graph service.
  teleport.clusterconfig.v1.AccessGraphConfig access_graph = 1;
}

// Request for GetAccessGraphSettings
message GetAccessGraphSettingsRequest {}

// Request for CreateAccessGraphSettings
message CreateAccessGraphSettingsRequest {
  teleport.clusterconfig.v1.AccessGraphSettings access_graph_settings = 1;
}

// Request for UpdateAccessGraphSettings
message UpdateAccessGraphSettingsRequest {
  teleport.clusterconfig.v1.AccessGraphSettings access_graph_settings = 1;
}

// Request for UpsertAccessGraphSettings
message UpsertAccessGraphSettingsRequest {
  teleport.clusterconfig.v1.AccessGraphSettings access_graph_settings = 1;
}

// Request for ResetAccessGraphSettings
message ResetAccessGraphSettingsRequest {}
