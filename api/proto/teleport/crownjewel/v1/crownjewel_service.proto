// Copyright 2024 Gravitational, Inc
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

package teleport.crownjewel.v1;

import "google/protobuf/empty.proto";
import "teleport/crownjewel/v1/crownjewel.proto";

option go_package = "github.com/gravitational/teleport/api/gen/proto/go/teleport/crownjewel/v1;crownjewelv1";

// CrownJewelService is a service that provides methods to manage CrownJewels.
service CrownJewelService {
  // CreateCrownJewel creates a new CrownJewel.
  rpc CreateCrownJewel(CreateCrownJewelRequest) returns (CrownJewel);
  // GetCrownJewel gets a CrownJewel by name.
  rpc GetCrownJewel(GetCrownJewelRequest) returns (CrownJewel);
  // ListCrownJewels returns a list of CrownJewels. It supports pagination.
  rpc ListCrownJewels(ListCrownJewelsRequest) returns (ListCrownJewelsResponse);
  // UpdateCrownJewel updates an existing CrownJewel.
  rpc UpdateCrownJewel(UpdateCrownJewelRequest) returns (CrownJewel);
  // UpsertCrownJewel upserts a CrownJewel.
  rpc UpsertCrownJewel(UpsertCrownJewelRequest) returns (CrownJewel);
  // DeleteCrownJewel deletes a CrownJewel.
  rpc DeleteCrownJewel(DeleteCrownJewelRequest) returns (google.protobuf.Empty);
}

// CrownJewelRequest is a request to create a new CrownJewel.
message CreateCrownJewelRequest {
  teleport.crownjewel.v1.CrownJewel crown_jewels = 1;
}

// GetCrownJewelRequest is a request to get a CrownJewel by name.
message GetCrownJewelRequest {
  // Name is the name of the CrownJewel to get.
  string name = 1;
}

// ListCrownJewelsRequest is a request to get a list of CrownJewels.
message ListCrownJewelsRequest {
  // page_size is the maximum number of items to return.
  // The server may impose a different page size at its discretion.
  int64 page_size = 1;
  // page_token is the next_page_token value returned from a previous List request, if any.
  string page_token = 2;
}

// ListCrownJewelsResponse is a response to GetCrownJewelsRequest.
message ListCrownJewelsResponse {
  repeated teleport.crownjewel.v1.CrownJewel crown_jewels = 1;

  // Token to retrieve the next page of results, or empty if there are no
  // more results in the list.
  string next_page_token = 2;
}

// UpdateCrownJewelRequest is a request to update an existing CrownJewel.
message UpdateCrownJewelRequest {
  teleport.crownjewel.v1.CrownJewel crown_jewels = 1;
}

// UpsertCrownJewelRequest is a request to upsert a CrownJewel.
message UpsertCrownJewelRequest {
  teleport.crownjewel.v1.CrownJewel crown_jewels = 1;
}

// DeleteCrownJewelRequest is a request to delete a CrownJewel.
message DeleteCrownJewelRequest {
  // Name is the name of the CrownJewel to delete.
  string name = 1;
}
