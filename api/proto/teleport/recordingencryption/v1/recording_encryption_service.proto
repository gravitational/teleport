// Copyright 2025 Gravitational, Inc
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

package teleport.recordingencryption.v1;

option go_package = "github.com/gravitational/teleport/api/gen/proto/go/teleport/recordingencryption/v1;recordingencryptionv1";

// RecordingEncryption provides methods to manage cluster encryption configuration resources.
service RecordingEncryptionService {
  // UploadEncryptedRecording is used to upload encrypted .tar files containing session recording
  // events into long term storage.
  rpc UploadEncryptedRecording(stream UploadEncryptedRecordingRequest) returns (UploadEncryptedRecordingResponse);
}

// UploadEncryptedRecordingRequest is an individual part of an encrypted session
// recording .tar file.
message UploadEncryptedRecordingRequest {
  // SessionID the recording relates to.
  string session_id = 1;
  // PartIndex is the ordered index applied to the chunk.
  int64 part_index = 2;
  // Part is the encrypted part of session recording data being uploaded.
  bytes part = 3;
}

// UploadEncryptedRecordingResponse
message UploadEncryptedRecordingResponse {}
