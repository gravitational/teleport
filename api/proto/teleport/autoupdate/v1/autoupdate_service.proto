// Copyright 2024 Gravitational, Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

package teleport.autoupdate.v1;

import "google/protobuf/empty.proto";
import "teleport/autoupdate/v1/autoupdate.proto";

option go_package = "github.com/gravitational/teleport/api/gen/proto/go/teleport/autoupdate/v1;autoupdate";

// AutoUpdateService provides an API to manage autoupdates.
service AutoUpdateService {
  // GetAutoUpdateConfig gets the current autoupdate config singleton.
  rpc GetAutoUpdateConfig(GetAutoUpdateConfigRequest) returns (AutoUpdateConfig);

  // CreateAutoUpdateConfig creates a new AutoUpdateConfig.
  rpc CreateAutoUpdateConfig(CreateAutoUpdateConfigRequest) returns (AutoUpdateConfig);

  // CreateAutoUpdateConfig updates AutoUpdateConfig singleton.
  rpc UpdateAutoUpdateConfig(UpdateAutoUpdateConfigRequest) returns (AutoUpdateConfig);

  // UpsertAutoUpdateConfig creates a new AutoUpdateConfig or replaces an existing AutoUpdateConfig.
  rpc UpsertAutoUpdateConfig(UpsertAutoUpdateConfigRequest) returns (AutoUpdateConfig);

  // DeleteAutoUpdateConfig hard deletes the specified AutoUpdateConfig.
  rpc DeleteAutoUpdateConfig(DeleteAutoUpdateConfigRequest) returns (google.protobuf.Empty);

  // GetAutoUpdateVersion gets the current autoupdate version singleton.
  rpc GetAutoUpdateVersion(GetAutoUpdateVersionRequest) returns (AutoUpdateVersion);

  // CreateAutoUpdateVersion creates a new AutoUpdateVersion.
  rpc CreateAutoUpdateVersion(CreateAutoUpdateVersionRequest) returns (AutoUpdateVersion);

  // UpdateAutoUpdateVersion updates AutoUpdateVersion singleton.
  rpc UpdateAutoUpdateVersion(UpdateAutoUpdateVersionRequest) returns (AutoUpdateVersion);

  // UpsertAutoUpdateVersion creates a new AutoUpdateVersion or replaces an existing AutoUpdateVersion.
  rpc UpsertAutoUpdateVersion(UpsertAutoUpdateVersionRequest) returns (AutoUpdateVersion);

  // DeleteAutoUpdateVersion hard deletes the specified AutoUpdateVersionRequest.
  rpc DeleteAutoUpdateVersion(DeleteAutoUpdateVersionRequest) returns (google.protobuf.Empty);

  // GetAutoUpdateVersion gets the current autoupdate version singleton.
  rpc GetAutoUpdateAgentRollout(GetAutoUpdateAgentRolloutRequest) returns (AutoUpdateAgentRollout);

  // CreateAutoUpdateAgentRollout creates a new AutoUpdateAgentRollout.
  rpc CreateAutoUpdateAgentRollout(CreateAutoUpdateAgentRolloutRequest) returns (AutoUpdateAgentRollout);

  // UpdateAutoUpdateAgentRollout updates AutoUpdateAgentRollout singleton.
  rpc UpdateAutoUpdateAgentRollout(UpdateAutoUpdateAgentRolloutRequest) returns (AutoUpdateAgentRollout);

  // UpsertAutoUpdateAgentRollout creates a new AutoUpdateAgentRollout or replaces an existing AutoUpdateAgentRollout.
  rpc UpsertAutoUpdateAgentRollout(UpsertAutoUpdateAgentRolloutRequest) returns (AutoUpdateAgentRollout);

  // DeleteAutoUpdateAgentRollout hard deletes the specified AutoUpdateAgentRolloutRequest.
  rpc DeleteAutoUpdateAgentRollout(DeleteAutoUpdateAgentRolloutRequest) returns (google.protobuf.Empty);

  // TriggerAutoUpdateAgentGroup changes the state of an agent group from `unstarted` to `active`.
  // This RPC will be extended later to switch the group state to `canary` by default,
  // and `active` if a flag is set.
  rpc TriggerAutoUpdateAgentGroup(TriggerAutoUpdateAgentGroupRequest) returns (AutoUpdateAgentRollout);

  // ForceAutoUpdateAgentGroup changes the state of an agent group from `unstarted`, `canary`, or `active` to the `done` state.
  rpc ForceAutoUpdateAgentGroup(ForceAutoUpdateAgentGroupRequest) returns (AutoUpdateAgentRollout);

  // RollbackAutoUpdateAgentGroup changes the state of an agent group to `rolledback`.
  rpc RollbackAutoUpdateAgentGroup(RollbackAutoUpdateAgentGroupRequest) returns (AutoUpdateAgentRollout);

  // ListAutoUpdateAgentReports returns a paginated list of AutoUpdateAgentReport resources.
  rpc ListAutoUpdateAgentReports(ListAutoUpdateAgentReportsRequest) returns (ListAutoUpdateAgentReportsResponse);

  // GetAutoUpdateAgentReport returns the specified AutoUpdateAgentReport resource.
  rpc GetAutoUpdateAgentReport(GetAutoUpdateAgentReportRequest) returns (AutoUpdateAgentReport);

  // CreateAutoUpdateAgentReport creates a new AutoUpdateAgentReport resource.
  rpc CreateAutoUpdateAgentReport(CreateAutoUpdateAgentReportRequest) returns (AutoUpdateAgentReport);

  // UpdateAutoUpdateAgentReport updates an existing AutoUpdateAgentReport resource.
  rpc UpdateAutoUpdateAgentReport(UpdateAutoUpdateAgentReportRequest) returns (AutoUpdateAgentReport);

  // UpsertAutoUpdateAgentReport creates or updates a AutoUpdateAgentReport resource.
  rpc UpsertAutoUpdateAgentReport(UpsertAutoUpdateAgentReportRequest) returns (AutoUpdateAgentReport);

  // DeleteAutoUpdateAgentReport removes the specified AutoUpdateAgentReport resource.
  rpc DeleteAutoUpdateAgentReport(DeleteAutoUpdateAgentReportRequest) returns (google.protobuf.Empty);

  // DeleteAllAutoUpdateAgentReports removes all AutoUpdateAgentReports.
  rpc DeleteAllAutoUpdateAgentReports(DeleteAllAutoUpdateAgentReportsRequest) returns (google.protobuf.Empty);
}

// Request for GetAutoUpdateConfig.
message GetAutoUpdateConfigRequest {}

// Request for CreateAutoUpdateConfig.
message CreateAutoUpdateConfigRequest {
  AutoUpdateConfig config = 1;
}

// Request for UpdateAutoUpdateConfig.
message UpdateAutoUpdateConfigRequest {
  AutoUpdateConfig config = 1;
}

// Request for UpsertAutoUpdateConfig.
message UpsertAutoUpdateConfigRequest {
  AutoUpdateConfig config = 1;
}

// Request for DeleteAutoUpdateConfig.
message DeleteAutoUpdateConfigRequest {}

// Request for GetAutoUpdateVersion.
message GetAutoUpdateVersionRequest {}

// Request for CreateAutoUpdateVersion.
message CreateAutoUpdateVersionRequest {
  AutoUpdateVersion version = 1;
}

// Request for UpdateAutoUpdateConfig.
message UpdateAutoUpdateVersionRequest {
  AutoUpdateVersion version = 1;
}

// Request for UpsertAutoUpdateVersion.
message UpsertAutoUpdateVersionRequest {
  AutoUpdateVersion version = 1;
}

// Request for DeleteAutoUpdateVersion.
message DeleteAutoUpdateVersionRequest {}

// Request for GetAutoUpdateAgentRollout.
message GetAutoUpdateAgentRolloutRequest {}

// Request for CreateAutoUpdateAgentRollout.
message CreateAutoUpdateAgentRolloutRequest {
  AutoUpdateAgentRollout rollout = 1;
}

// Request for UpdateAutoUpdateConfig.
message UpdateAutoUpdateAgentRolloutRequest {
  AutoUpdateAgentRollout rollout = 1;
}

// Request for UpsertAutoUpdateAgentRollout.
message UpsertAutoUpdateAgentRolloutRequest {
  AutoUpdateAgentRollout rollout = 1;
}

// Request for DeleteAutoUpdateAgentRollout.
message DeleteAutoUpdateAgentRolloutRequest {}

// Request for TriggerAutoUpdateAgentGroup.
message TriggerAutoUpdateAgentGroupRequest {
  // groups contains the agent update group names whose maintenance should be triggered.
  repeated string groups = 1;

  // desired_state describes the desired start state.
  // Supported values are AUTO_UPDATE_AGENT_GROUP_STATE_UNSPECIFIED, and AUTO_UPDATE_AGENT_GROUP_STATE_ACTIVE.
  // Current default desired state is active. This will change when we'll introduce the
  // AUTO_UPDATE_AGENT_GROUP_STATE_CANARY state.
  AutoUpdateAgentGroupState desired_state = 2;
}

// Request for ForceAutoUpdateAgentGroup.
message ForceAutoUpdateAgentGroupRequest {
  // groups contains the agent update group names whose state should be forced to `done`.
  repeated string groups = 1;
}

// Request for RollbackAutoUpdateAgentGroup.
message RollbackAutoUpdateAgentGroupRequest {
  // groups contains the agent update group name whose state should change to `rolledback`.
  repeated string groups = 1;
  // all_started_groups instructs Teleport to rollback every started groups.
  // When both groups and all_started_groups are set, both unstarted and specified groups
  // are rolled-back.
  bool all_started_groups = 2;
}

// ListAutoUpdateAgentReportsRequest is a request for a paginated list of AutoUpdateAgentReports.
message ListAutoUpdateAgentReportsRequest {
  // page_size is the size of the page to request.
  int32 page_size = 1;

  // next_token is the page token.
  string next_token = 2;
}

// ListAutoUpdateAgentReportsResponse is the response for ListAutoUpdateAgentReportsRequest.
message ListAutoUpdateAgentReportsResponse {
  // AutoUpdateAgentReports is a list of AutoUpdateAgentReports.
  repeated AutoUpdateAgentReport autoupdate_agent_reports = 1;
  // NextKey is the key for the next page of AutoUpdateAgentReports.
  string next_key = 2;
  // TotalCount is the total number of autoupdate_agent_report in all pages.
  int32 total_count = 3;
}

// GetAutoUpdateAgentReportRequest is a request for a specific AutoUpdateAgentReport resource.
message GetAutoUpdateAgentReportRequest {
  // Name is the name of the AutoUpdateAgentReport to be requested.
  string name = 1;
}

// CreateAutoUpdateAgentReportRequest is the request to create the provided AutoUpdateAgentReport.
message CreateAutoUpdateAgentReportRequest {
  // AutoUpdateAgentReport is the AutoUpdateAgentReport to be created.
  AutoUpdateAgentReport autoupdate_agent_report = 1;
}

// UpdateAutoUpdateAgentReportRequest is the request to update the provided AutoUpdateAgentReport.
message UpdateAutoUpdateAgentReportRequest {
  // AutoUpdateAgentReport is the AutoUpdateAgentReport to be updated.
  AutoUpdateAgentReport autoupdate_agent_report = 1;
}

// UpsertAutoUpdateAgentReportRequest is the request to upsert the provided AutoUpdateAgentReport.
message UpsertAutoUpdateAgentReportRequest {
  // AutoUpdateAgentReport is the AutoUpdateAgentReport to be upserted.
  AutoUpdateAgentReport autoupdate_agent_report = 1;
}

// DeleteAutoUpdateAgentReportRequest is a request for deleting a specific AutoUpdateAgentReport resource.
message DeleteAutoUpdateAgentReportRequest {
  // Name is the name of the AutoUpdateAgentReport to be deleted.
  string name = 1;
}

// DeleteAllAutoUpdateAgentReportsRequest is the request for deleting all AutoUpdateAgentReports.
message DeleteAllAutoUpdateAgentReportsRequest {}
