// Copyright 2024 Gravitational, Inc
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

package teleport.presence.v1;

import "google/protobuf/empty.proto";
import "google/protobuf/field_mask.proto";
import "teleport/legacy/types/types.proto";

option go_package = "github.com/gravitational/teleport/api/gen/proto/go/teleport/presence/v1;presencev1";

// PresenceService provides methods to manage presence of RemoteClusters
service PresenceService {
  // GetRemoteCluster retrieves a RemoteCluster by name.
  rpc GetRemoteCluster(GetRemoteClusterRequest) returns (types.RemoteClusterV3);
  // ListRemoteClusters retrieves a page of RemoteClusters.
  rpc ListRemoteClusters(ListRemoteClustersRequest) returns (ListRemoteClustersResponse);
  // UpdateRemoteCluster updates an existing RemoteCluster.
  rpc UpdateRemoteCluster(UpdateRemoteClusterRequest) returns (types.RemoteClusterV3);
  // DeleteRemoteCluster removes an existing RemoteCluster by name.
  rpc DeleteRemoteCluster(DeleteRemoteClusterRequest) returns (google.protobuf.Empty);
}

// Request for GetRemoteCluster
message GetRemoteClusterRequest {
  // Name is the name of the RemoteCluster to retrieve.
  string name = 1;
}

// Request for ListRemoteClusters
message ListRemoteClustersRequest {
  // The maximum number of items to return.
  // The server may impose a different page size at its discretion.
  int32 page_size = 1;

  // The page_token is the next_page_token value returned from a previous List
  // request, if any.
  string page_token = 2;
}

// Response for ListRemoteClusters
message ListRemoteClustersResponse {
  // RemoteClusters is the list of RemoteClusters that were retrieved.
  repeated types.RemoteClusterV3 remote_clusters = 1;

  // Token to retrieve the next page of results, or empty if there are no
  // more results in the list.
  string next_page_token = 2;
}

// Request for UpdateRemoteCluster
message UpdateRemoteClusterRequest {
  // RemoteCluster is the RemoteCluster to update.
  types.RemoteClusterV3 remote_cluster = 1;
  // The update mask applied to the RemoteCluster.
  // Fields are masked according to their proto name.
  google.protobuf.FieldMask update_mask = 2;
}

// Request for DeleteRemoteCluster
message DeleteRemoteClusterRequest {
  // Name is the name of the RemoteCluster to delete.
  string name = 1;
}
