// Copyright 2025 Gravitational, Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

package teleport.presence.v1;

import "teleport/header/v1/metadata.proto";

option go_package = "github.com/gravitational/teleport/api/gen/proto/go/teleport/presence/v1;presencev1";

// A heartbeat for a relay service; this message serves as both the type used in
// the v1 service and as the canonical v1 storage format (in protojson).
message RelayServer {
  // fixed string, "relay_server".
  string kind = 1;
  // fixed string, "".
  string sub_kind = 2;
  // fixed string, "v1".
  string version = 3;

  teleport.header.v1.Metadata metadata = 4;

  // resource spec
  message Spec {
    // host IDs of Proxy Service instances that this server is available on
    // through a reverse tunnel
    repeated string proxy_ids = 1;

    // configured hostname (or nodename) of the machine, for troubleshooting and
    // debugging
    string hostname = 2;

    // the name of the Relay group this server belongs to
    string relay_group = 3;

    // address and port that this server is reachable at by other Relay Service
    // instance of the same group
    string peer_addr = 4;

    // random string chosen for the duration of the process, for troubleshooting
    // and debugging
    string nonce = 5;

    // set after the Teleport instance has received a termination signal (but
    // hasn't necessarily began shutting down)
    bool terminating = 6;
  }
  Spec spec = 5;
}
