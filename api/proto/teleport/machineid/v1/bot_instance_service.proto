// Copyright 2024 Gravitational, Inc
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

package teleport.machineid.v1;

import "google/protobuf/empty.proto";
import "teleport/legacy/types/types.proto";
import "teleport/machineid/v1/bot_instance.proto";

option go_package = "github.com/gravitational/teleport/api/gen/proto/go/teleport/machineid/v1;machineidv1";

// Request for GetBotInstance.
message GetBotInstanceRequest {
  // The name of the bot associated with the instance.
  string bot_name = 1;
  // The unique identifier of the bot instance to retrieve.
  string instance_id = 2;
}

// Request for ListBotInstances.
//
// Follows the pagination semantics of
// https://cloud.google.com/apis/design/standard_methods#list
message ListBotInstancesRequest {
  // The name of the Bot to list BotInstances for. If empty, all BotInstances
  // will be listed.
  string filter_bot_name = 1;
  // The maximum number of items to return.
  // The server may impose a different page size at its discretion.
  int32 page_size = 2;
  // The page_token value returned from a previous ListBotInstances request, if
  // any.
  string page_token = 3;
  // A search term used to filter the results. If non-empty, it's used to match against supported fields.
  string filter_search_term = 4;
  // The sort config to use for the results. If empty, the default sort field and order is used.
  types.SortBy sort = 5;
}

// Request for ListBotInstancesV2.
//
// Follows the pagination semantics of
// https://cloud.google.com/apis/design/standard_methods#list
message ListBotInstancesV2Request {
  // The maximum number of items to return.
  // The server may impose a different page size at its discretion.
  int32 page_size = 1;
  // The page_token value returned from a previous ListBotInstancesV2 request,
  // if any.
  string page_token = 2;
  // The sort field to use for the results. If empty, the default sort field is
  // used.
  string sort_field = 3;
  // The sort order to use for the results. If empty, the default sort order is
  // used.
  bool sort_desc = 4;
  // Fields used to filter the results
  Filters filter = 5;

  // Filters contains fields to be used to filter the results.
  message Filters {
    // The name of the Bot to list BotInstances for. If non-empty, only
    // BotInstances for that bot will be listed.
    string bot_name = 1;
    // A search term used to filter the results. If non-empty, it's used to
    // match against supported fields.
    string search_term = 2;
    // A Teleport predicate language query used to filter the results.
    string query = 3;
  }
}

// Response for ListBotInstances.
message ListBotInstancesResponse {
  // BotInstance that matched the search.
  repeated BotInstance bot_instances = 1;
  // Token to retrieve the next page of results, or empty if there are no
  // more results exist.
  string next_page_token = 2;
}

// Request for DeleteBotInstance.
message DeleteBotInstanceRequest {
  // The name of the BotInstance to delete.
  string bot_name = 1;
  // The unique identifier of the bot instance to delete.
  string instance_id = 2;
}

// The request for SubmitHeartbeat.
message SubmitHeartbeatRequest {
  // The heartbeat data to submit.
  BotInstanceStatusHeartbeat heartbeat = 1;
}

// The response for SubmitHeartbeat.
message SubmitHeartbeatResponse {
  // Empty
}

// BotInstanceService provides functions to record and manage bot instances.
service BotInstanceService {
  // GetBotInstance returns the specified BotInstance resource.
  rpc GetBotInstance(GetBotInstanceRequest) returns (BotInstance);
  // ListBotInstances returns a page of BotInstance resources.
  // Deprecated: Use ListBotInstancesV2 instead
  rpc ListBotInstances(ListBotInstancesRequest) returns (ListBotInstancesResponse) {
    option deprecated = true;
  }
  // ListBotInstancesV2 returns a page of BotInstance resources.
  rpc ListBotInstancesV2(ListBotInstancesV2Request) returns (ListBotInstancesResponse);
  // DeleteBotInstance hard deletes the specified BotInstance resource.
  rpc DeleteBotInstance(DeleteBotInstanceRequest) returns (google.protobuf.Empty);
  // SubmitHeartbeat submits a heartbeat for a BotInstance.
  rpc SubmitHeartbeat(SubmitHeartbeatRequest) returns (SubmitHeartbeatResponse);
}
