load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")

go_library(
    name = "plugin",
    srcs = [
        "awsic.go",
        "entraid.go",
        "github.go",
        "netiq.go",
        "okta.go",
        "plugins_command.go",
        "scim.go",
    ],
    importpath = "github.com/gravitational/teleport/tool/tctl/common/plugin",
    visibility = ["//visibility:public"],
    deps = [
        "//:teleport",
        "//api",
        "//api/client/proto",
        "//api/gen/proto/go/teleport/plugins/v1:plugins",
        "//api/mfa",
        "//api/types",
        "//api/types/common",
        "//api/utils/entraid",
        "//api/utils/prompt",
        "//lib/aws/identitycenter/filters",
        "//lib/client",
        "//lib/defaults",
        "//lib/integrations/azureoidc",
        "//lib/service/servicecfg",
        "//lib/utils",
        "//lib/utils/aws",
        "//lib/utils/aws/identitycenterutils",
        "//lib/utils/aws/region",
        "//lib/utils/oidc",
        "//lib/web/scripts/oneoff",
        "//tool/tctl/common/client",
        "//tool/tctl/common/config",
        "@com_github_alecthomas_kingpin_v2//:kingpin",
        "@com_github_fatih_color//:color",
        "@com_github_google_safetext//shsprintf",
        "@com_github_google_uuid//:uuid",
        "@com_github_gravitational_trace//:trace",
        "@org_golang_google_grpc//:grpc",
        "@org_golang_google_protobuf//types/known/emptypb",
        "@org_golang_x_crypto//bcrypt",
    ],
)

go_test(
    name = "plugin_test",
    srcs = [
        "awsic_test.go",
        "plugins_command_test.go",
    ],
    embed = [":plugin"],
    deps = [
        "//api/client/proto",
        "//api/gen/proto/go/teleport/plugins/v1:plugins",
        "//api/mfa",
        "//api/types",
        "//lib/service/servicecfg",
        "@com_github_google_go_cmp//cmp",
        "@com_github_google_go_cmp//cmp/cmpopts",
        "@com_github_gravitational_trace//:trace",
        "@com_github_stretchr_testify//mock",
        "@com_github_stretchr_testify//require",
        "@org_golang_google_grpc//:grpc",
        "@org_golang_google_protobuf//types/known/emptypb",
    ],
)
