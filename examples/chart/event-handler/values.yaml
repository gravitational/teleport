# Default values for event-handler.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

#
# Plugin specific options
#
teleport:
  # When the address is empty, `tbot.teleportProxyAddress`
  # or `tbot.teleportAuthAddress` will be used if they are set.
  # teleport.address(string) -- is the address of the Teleport cluster the plugin
  # connects to. The address must contain both the domain name and the port of
  # the Teleport cluster. It can be either the address of the auth servers or the
  # proxy servers.
  #
  # For example:
  #   - joining a Proxy: `teleport.example.com:443` or `teleport.example.com:3080`
  #   - joining an Auth: `teleport-auth.example.com:3025`
  #
  # When the address is empty, `tbot.teleportProxyAddress`
  # or `tbot.teleportAuthAddress` will be used if they are set.
  address: ""
  # teleport.identitySecretName(string) -- is the name of the Kubernetes secret
  # that contains the credentials for the connection to your Teleport cluster.
  #
  # The secret should be in the following format:
  #
  # ```yaml
  # apiVersion: v1
  # kind: Secret
  # type: Opaque
  # metadata:
  #   name: teleport-plugin-event-handeler-identity
  # data:
  #   auth_id: #...
  # ```
  #
  # Check out the [Export Events with Fluentd]
  # (../../zero-trust-access/export-audit-events/fluentd.mdx) guide
  # for more information about how to acquire these credentials.
  identitySecretName: ""
  # teleport.identitySecretPath(string) -- is the key in the Kubernetes secret
  # specified by `teleport.identitySecretName` that holds the credentials for
  # the connection to your Teleport cluster. If the secret has the path,
  # `"auth_id"`, you can omit this field.
  identitySecretPath: "auth_id"

eventHandler:
  storagePath: "/var/lib/teleport/plugins/event-handler/storage"
  timeout: "10s"
  batch: 20
  # The window size configures the duration of the time window for the event handler
  # to request events from Teleport. By default, this is set to 24 hours.
  # Reduce the window size if the events backend cannot manage the event volume 
  # for the default window size.
  # The window size should be specified as a duration string, parsed by Go's time.ParseDuration.
  windowSize: "24h"
  # Optional setting to enable debug logging
  # debug: true
  # Optional setting for event types to forward
  # types: ["TYPE1", "TYPE2"]
  # Optional setting for event types to skip
  # skipEventTypes: ["TYPE1"]
  # Optional setting for session types to skip
  # skipSessionTypes: ["TYPE1"]

fluentd:
  url: ""
  sessionUrl: ""
  certificate:
    secretName: ""
    caPath: "ca.crt"
    certPath: "client.crt"
    keyPath: "client.key"

# tbot -- controls the optional tbot deployment that obtains and renews
# credentials for the plugin to connect to Teleport.
# Only default and mandatory values are described here, see the tbot chart reference
# for the full list of supported values.
tbot:
  # tbot.enabled(bool) -- controls if tbot should be deployed with the event handler plugin.
  enabled: false
  # tbot.clusterName(string) -- is the name of the Teleport cluster tbot and the event handler plugin will join.
  # Setting this value is mandatory when tbot is enabled.
  clusterName: ""
  # tbot.teleportProxyAddress(string) -- is the teleport Proxy Service address the bot will connect to.
  # This must contain the port number, usually 443 or 3080 for Proxy Service.
  # Connecting to the Proxy Service is the most common and recommended way to connect to Teleport.
  # This is mandatory to connect to Teleport Enterprise (Cloud).
  #
  # This setting is mutually exclusive with `teleportAuthAddress`.
  #
  # For example:
  # ```yaml
  # tbot:
  #   teleportProxyAddress: "test.teleport.sh:443"
  # ```
  teleportProxyAddress: ""
  # tbot.teleportAuthAddress(string) -- is the teleport Auth Service address the bot will connect to.
  # This must contain the port number, usually 3025 for Auth Service. Direct Auth Service connection
  # should be used when you are deploying the bot in the same Kubernetes cluster than your `teleport-cluster`
  # Helm release and have direct access to the Auth Service.
  # Else, you should prefer connecting via the Proxy Service.
  #
  # This setting is mutually exclusive with `teleportProxyAddress`.
  #
  # For example:
  # ```yaml
  # teleportAuthAddress: "teleport-auth.teleport-namespace.svc.cluster.local:3025"
  # ```
  teleportAuthAddress: ""

  # tbot.joinMethod(string) -- describes how tbot joins the Teleport cluster.
  # See [the join method reference](../../reference/join-methods.mdx) for a list fo supported values and detailed explanations.
  joinMethod: "kubernetes"
  token: ""

  # Don't touch the tbot values below, this will break the chart.
  # This ensures that tbot.fullname is not shortened if the release name contains "tbot"
  nameOverride: tbot
  defaultOutput:
    enabled: true

persistentVolumeClaim:
  enabled: false
  size: 1Gi
  storageClassName: ""
  existingClaim: ""
  volumeName: "storage"

#
# Deployment
#
image:
  repository: public.ecr.aws/gravitational/teleport-plugin-event-handler
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

podAnnotations: {}

podSecurityContext: {}

securityContext: {}

resources: {}

nodeSelector: {}

# tls -- contains settings for mounting your own TLS material in the event-handler pod.
# The event-handler does not expose a TLS server, so this is only used to trust CAs.
tls:
  # tls.existingCASecretName(string) -- sets the `SSL_CERT_FILE` environment
  # variable to load a trusted CA or bundle in PEM format into Teleport pods.
  # The injected CA will be used to validate TLS communications with the Proxy
  # Service.
  #
  # You must create a secret containing the CA certs in the same namespace as Teleport using a command like:
  #
  # $ kubectl create secret generic my-root-ca --from-file=ca.pem=/path/to/root-ca.pem
  #
  #   The key containing the root CA in the secret must be `ca.pem`.
  existingCASecretName: ""

tolerations: []

affinity: {}

volumes: []
  # - name: storage
  #   persistentVolumeClaim:
  #     claimName: teleport-plugin-event-handler

volumeMounts: []
  # - name: storage
  #   mountPath: "/var/lib/teleport/plugins/event-handler/storage"
